{"version":3,"file":"structive.min.js","sources":["../src/Router/Router.ts","../src/WebComponents/getGlobalConfig.ts","../src/Filter/errorMessages.ts","../src/Filter/builtinFilters.ts","../src/GlobalId/generateId.ts","../src/utils.ts","../src/StateClass/registerStateClass.ts","../src/StyleSheet/registerStyleSheet.ts","../src/StyleSheet/regsiterCss.ts","../src/BindingBuilder/createFilters.ts","../src/DataBinding/BindingNode/BindingNode.ts","../src/DataBinding/BindingNode/BindingNodeAttribute.ts","../src/DataBinding/BindingNode/BindingNodeCheckbox.ts","../src/DataBinding/BindingNode/BindingNodeClassList.ts","../src/DataBinding/BindingNode/BindingNodeClassName.ts","../src/DataBinding/BindingNode/BindingNodeEvent.ts","../src/constants.ts","../src/DataBinding/BindingNode/BindingNodeBlock.ts","../src/DataBinding/BindingNode/BindingNodeIf.ts","../src/DataBinding/BindingNode/BindingNodeFor.ts","../src/BindingBuilder/getDefaultName.ts","../src/DataBinding/BindingNode/BindingNodeProperty.ts","../src/DataBinding/BindingNode/BindingNodeRadio.ts","../src/DataBinding/BindingNode/BindingNodeStyle.ts","../src/ComponentState/symbols.ts","../src/DataBinding/BindingNode/BindingNodeComponent.ts","../src/BindingBuilder/getBindingNodeCreator.ts","../src/StateClass/symbols.ts","../src/StateProperty/getStructuredPathInfo.ts","../src/DataBinding/BindingState/BindingState.ts","../src/DataBinding/BindingState/BindingStateIndex.ts","../src/BindingBuilder/getBindingStateCreator.ts","../src/BindingBuilder/getDataBindText.ts","../src/BindingBuilder/getNodeType.ts","../src/BindingBuilder/parseBindText.ts","../src/BindingBuilder/removeDataBindAttribute.ts","../src/BindingBuilder/replaceTextNodeFromComment.ts","../src/BindingBuilder/createDataBindAttributes.ts","../src/BindingBuilder/getAbsoluteNodePath.ts","../src/BindingBuilder/getNodesHavingDataBind.ts","../src/BindingBuilder/registerDataBindAttributes.ts","../src/Template/registerTemplate.ts","../src/Template/removeEmptyTextNodes.ts","../src/DataBinding/Binding.ts","../src/LoopContext/createLoopContext.ts","../src/Render/render.ts","../src/DataBinding/BindContent.ts","../src/BindingBuilder/resolveNodeFromPath.ts","../src/ListIndex/createListIndex.ts","../src/StatePropertyRef/getStatePropertyRefId.ts","../src/StateClass/methods/getByRef.ts","../src/StateClass/methods/setTracking.ts","../src/StateClass/apis/getByRef.ts","../src/StateClass/methods/setByRef.ts","../src/StateClass/apis/setByRef.ts","../src/StateClass/apis/setCacheable.ts","../src/StateClass/methods/setCacheable.ts","../src/StateClass/apis/connectedCallback.ts","../src/StateClass/apis/disconnectedCallback.ts","../src/StateClass/apis/resolve.ts","../src/StateClass/apis/getAll.ts","../src/StateProperty/getResolvedPathInfo.ts","../src/StateClass/getListIndex.ts","../src/StateClass/traps/get.ts","../src/StateClass/createStateProxy.ts","../src/StateClass/traps/set.ts","../src/StateClass/buildListIndexTree.ts","../src/Updater/collectAffectedGetters.ts","../src/Updater/updater.ts","../src/ComponentEngine/attachShadow.ts","../src/ComponentEngine/canHaveShadowRoot.ts","../src/ComponentEngine/ComponentEngine.ts","../src/Template/replaceMustacheWithTemplateTag.ts","../src/Template/replaceTemplateTagWithComment.ts","../src/Template/registerHtml.ts","../src/ComponentState/createComponentState.ts","../src/WebComponents/createComponentClass.ts","../src/WebComponents/getComponentConfig.ts","../src/WebComponents/getBaseClass.ts","../src/WebComponents/createSingleFileComponent.ts","../src/WebComponents/loadSingleFileComponent.ts","../src/WebComponents/registerComponentClass.ts","../src/MainWrapper/MainWrapper.ts","../src/WebComponents/loadFromImportMap.ts","../src/WebComponents/loadImportmap.ts","../src/exports.ts","../src/WebComponents/registerSingleFIleComponents.ts","../src/bootstrap.ts"],"sourcesContent":["import { config } from \"../WebComponents/getGlobalConfig\";\r\nimport { IRouter } from \"./types\";\r\n\r\nconst DEFAULT_ROUTE_PATH = '/'; // Default route path\r\nconst ROUTE_PATH_PREFIX = 'routes:'; // Prefix for route paths\r\n/**\r\n * example:\r\n * ```ts\r\n * entryRoute('my-view', '/my-view/:id');\r\n */\r\nconst routeEntries: Array<[string, string]> = [];\r\n\r\nlet globalRouter : Router | null = null;\r\n\r\nexport class Router extends HTMLElement implements IRouter {\r\n  _popstateHandler: (event: PopStateEvent) => void;\r\n  constructor() {\r\n    super();\r\n    this._popstateHandler = this.popstateHandler.bind(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    globalRouter = this;\r\n    this.innerHTML = '<slot name=\"content\"></slot>';\r\n    window.addEventListener('popstate', this._popstateHandler);\r\n    window.dispatchEvent(new Event(\"popstate\")); // Dispatch popstate event to trigger the initial render\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('popstate', this._popstateHandler);\r\n    globalRouter = null;\r\n  }\r\n\r\n  popstateHandler(event: PopStateEvent) {\r\n    event.preventDefault();\r\n    this.render();\r\n  }\r\n\r\n  navigate(to: string) {\r\n    history.pushState({}, '', to);\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    // スロットコンテントをクリア\r\n    const slotChildren = Array.from(this.childNodes).filter(\r\n      n => (n as HTMLElement).getAttribute?.('slot') === 'content'\r\n    );\r\n    slotChildren.forEach(n => this.removeChild(n));\r\n\r\n    const routePath = window.location.pathname || DEFAULT_ROUTE_PATH;\r\n    let tagName: string | undefined = undefined;\r\n    let params: Record<string, string> = {};\r\n    // Check if the routePath matches any of the defined routes\r\n    for (const [path, tag] of routeEntries) {\r\n      const regex = new RegExp(path.replace(/:[^\\s/]+/g, '([^/]+)'));\r\n      if (regex.test(routePath)) {\r\n        tagName = tag;\r\n        // Extract the parameters from the routePath\r\n        const matches = routePath.match(regex);\r\n        if (matches) {\r\n          const keys = path.match(/:[^\\s/]+/g) || [];\r\n          keys.forEach((key, index) => {\r\n            params[key.substring(1)] = matches[index + 1]; // +1 to skip the full match\r\n          });\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (tagName) {\r\n      // If a route matches, create the custom element and set its state\r\n      // Create the custom element with the tag name\r\n      // project the custom element into the router slot\r\n      const customElement = document.createElement(tagName) as HTMLElement;\r\n      customElement.setAttribute('data-state', JSON.stringify(params));\r\n      customElement.setAttribute('slot', 'content');\r\n      this.appendChild(customElement);\r\n    } else {\r\n      // If no route matches, show 404 content\r\n      const messageElement = document.createElement('h1') as HTMLElement;\r\n      messageElement.setAttribute('slot', 'content');\r\n      messageElement.textContent = '404 Not Found';\r\n      this.appendChild(messageElement);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function entryRoute(tagName: string, routePath: string): void {\r\n  if (routePath.startsWith(ROUTE_PATH_PREFIX)) {\r\n    routePath = routePath.substring(ROUTE_PATH_PREFIX.length); // Remove 'routes:' prefix\r\n  }\r\n  routeEntries.push([routePath, tagName]);\r\n}\r\n\r\nexport function getRouter(): Router | null {\r\n  return globalRouter;\r\n}\r\n\r\n","import { IConfig } from \"./types\";\r\n\r\nconst globalConfig: IConfig = {\r\n  debug                : false,\r\n  locale               : \"en-US\", // The locale of the component, ex. \"en-US\", default is \"en-US\"\r\n  enableShadowDom      : true,\r\n  enableMainWrapper    : true, // Whether to use the main wrapper or not\r\n  enableRouter         : true, // Whether to use the router or not\r\n  autoInsertMainWrapper: false, // Whether to automatically insert the main wrapper or not\r\n  autoInit             : true, // Whether to automatically initialize the component or not\r\n  mainTagName          : \"app-main\", // The tag name of the main wrapper, default is \"app-main\"\r\n  routerTagName        : \"view-router\", // The tag name of the router, default is \"view-router\"\r\n  layoutPath           : \"\", // The path to the layout file, default is \"\"\r\n  autoLoadFromImportMap: false, // Whether to automatically load the component from the import map or not\r\n};\r\n\r\nexport function getGlobalConfig():IConfig {\r\n  return globalConfig;\r\n}\r\n\r\nexport const config = getGlobalConfig();\r\n","\r\nexport function optionsRequired(fnName:string): never {\r\n  throw new Error(`${fnName} requires at least one option`);\r\n}\r\n\r\nexport function optionMustBeNumber(fnName:string): never {\r\n  throw new Error(`${fnName} requires a number as option`);\r\n}\r\n\r\nexport function valueMustBeNumber(fnName:string): never {\r\n  throw new Error(`${fnName} requires a number value`);\r\n}\r\n\r\nexport function valueMustBeBoolean(fnName:string): never {\r\n  throw new Error(`${fnName} requires a boolean value`);\r\n}\r\n\r\nexport function valueMustBeDate(fnName:string): never {\r\n  throw new Error(`${fnName} requires a date value`);\r\n}","import { getGlobalConfig } from \"../WebComponents/getGlobalConfig.js\";\r\nimport { optionMustBeNumber, optionsRequired, valueMustBeBoolean, valueMustBeDate, valueMustBeNumber } from \"./errorMessages.js\";\r\nimport { FilterWithOptions } from \"./types\";\r\n\r\nconst config = getGlobalConfig();\r\n\r\nconst eq = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('eq');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('eq');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('eq');\r\n    return value === optValue;\r\n  }\r\n}\r\n\r\nconst ne = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('ne');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('ne');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('ne');\r\n    return value !== optValue;\r\n  }\r\n}\r\n\r\nconst not = (options?:string[]) => {\r\n  return (value: any) => {\r\n    if (typeof value !== 'boolean') valueMustBeBoolean('not');\r\n    return !value;\r\n  }\r\n}\r\n\r\nconst lt = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('lt');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('lt');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('lt');\r\n    return value < optValue;\r\n  }\r\n}\r\n\r\nconst le = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('le');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('le');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('le');\r\n    return value <= optValue;\r\n  }\r\n}\r\n\r\nconst gt = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('gt');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('gt');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('gt');\r\n    return value > optValue;\r\n  }\r\n}\r\n\r\nconst ge = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('ge');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('ge');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('ge');\r\n    return value >= optValue;\r\n  }\r\n}\r\n\r\nconst inc = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('inc');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('inc');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('inc');\r\n    return value + optValue;\r\n  }\r\n}\r\n\r\nconst dec = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('dec');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('dec');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('dec');\r\n    return value - optValue;\r\n  }\r\n}\r\n\r\nconst mul = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('mul');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('mul');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('mul');\r\n    return value * optValue;\r\n  }\r\n}\r\n\r\nconst div = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('div');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('div');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('div');\r\n    return value / optValue;\r\n  }\r\n}\r\n\r\nconst fix = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('div');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('div');\r\n    return value.toFixed(optValue);\r\n  }\r\n}\r\n\r\nconst locale = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('locale');\r\n    return value.toLocaleString(opt);\r\n  }\r\n}\r\n\r\nconst uc = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().toUpperCase();\r\n  }\r\n}\r\n\r\nconst lc = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().toLowerCase();\r\n  }\r\n}\r\n\r\nconst cap = (options?:string[]) => {\r\n  return (value: any) => {\r\n    const v = value.toString();\r\n    if (v.length === 0) return v;\r\n    if (v.length === 1) return v.toUpperCase();\r\n    return v.charAt(0).toUpperCase() + v.slice(1);\r\n  }\r\n}\r\n\r\nconst trim = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().trim();\r\n  }\r\n}\r\n\r\nconst slice = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('slice');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('slice');\r\n  return (value: any) => {\r\n    return value.toString().slice(optValue);\r\n  }\r\n}\r\n\r\nconst substr = (options?:string[]) => {\r\n  const opt1 = options?.[0] ?? optionsRequired('substr');\r\n  const opt1Value = Number(opt1);\r\n  if (isNaN(opt1Value)) optionMustBeNumber('substr');\r\n  const opt2 = options?.[1] ?? optionsRequired('substr');\r\n  const opt2Value = Number(opt2);\r\n  if (isNaN(opt2Value)) optionMustBeNumber('substr');\r\n  return (value: any) => {\r\n    return value.toString().substr(opt1Value, opt2Value);\r\n  }\r\n}\r\n\r\nconst pad = (options?:string[]) => {\r\n  const opt1 = options?.[0] ?? optionsRequired('pad');\r\n  const opt1Value = Number(opt1);\r\n  if (isNaN(opt1Value)) optionMustBeNumber('pad');\r\n  const opt2 = options?.[1] ?? '0';\r\n  const opt2Value = opt2;\r\n  return (value: any) => {\r\n    return value.toString().padStart(opt1Value, opt2Value);\r\n  }\r\n}\r\n\r\nconst rep = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('rep');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('rep');\r\n  return (value: any) => {\r\n    return value.toString().repeat(optValue);\r\n  }\r\n}\r\n\r\nconst rev = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().split('').reverse().join('');\r\n  }\r\n}\r\n\r\nconst int = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return parseInt(value, 10);\r\n  }\r\n}\r\n\r\nconst float = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return parseFloat(value);\r\n  }\r\n}\r\n\r\nconst round = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Math.pow(10, Number(opt));\r\n  if (isNaN(optValue)) optionMustBeNumber('round');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('round');\r\n    return Math.round(value * optValue) / optValue;\r\n  }\r\n}\r\n\r\nconst floor = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Math.pow(10, Number(opt));\r\n  if (isNaN(optValue)) optionMustBeNumber('floor');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('floor');\r\n    return Math.floor(value * optValue) / optValue;\r\n  }\r\n}\r\n\r\nconst ceil = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Math.pow(10, Number(opt));\r\n  if (isNaN(optValue)) optionMustBeNumber('ceil');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('ceil');\r\n    return Math.ceil(value * optValue) / optValue;\r\n  }\r\n}\r\n\r\nconst percent = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('percent');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('percent');\r\n    return value.toFixed(optValue) + '%';\r\n  }\r\n}\r\n\r\nconst date = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (!(value instanceof Date))  valueMustBeDate('date');\r\n    return value.toLocaleDateString(config.locale);\r\n  }\r\n}\r\n\r\nconst time = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (!(value instanceof Date)) valueMustBeDate('time');\r\n    return value.toLocaleTimeString(config.locale);\r\n  }\r\n}\r\n\r\nconst datetime = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (!(value instanceof Date)) valueMustBeDate('datetime');\r\n    return value.toLocaleString(config.locale);\r\n  }\r\n}\r\n\r\nconst ymd = (options?:string[]) => {\r\n  const opt = options?.[0] ?? '-';\r\n  return (value: any) => {\r\n    if (!(value instanceof Date)) valueMustBeDate('ymd');\r\n    const year = value.getFullYear().toString();\r\n    const month = (value.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = value.getDate().toString().padStart(2, '0');\r\n    return `${year}${opt}${month}${opt}${day}`;\r\n  }\r\n}\r\n\r\nconst falsy = (options?:string[]) => {\r\n  return (value: any) => value === false || value === null || value === undefined || value === 0 || value === '' || Number.isNaN(value);\r\n}\r\n\r\nconst truthy = (options?:string[]) => {\r\n  return (value: any) =>value !== false && value !== null && value !== undefined && value !== 0 && value !== '' && !Number.isNaN(value);\r\n}\r\n\r\nconst defaults = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('defaults');\r\n  return (value: any) => {\r\n    if (value === false || value === null || value === undefined || value === 0 || value === '' || Number.isNaN(value)) return opt;\r\n    return value;\r\n  }\r\n}\r\n\r\nconst boolean = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return Boolean(value);\r\n  }\r\n}\r\n\r\nconst number = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return Number(value);\r\n  }\r\n}\r\n\r\nconst string = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return String(value);\r\n  }\r\n}\r\n\r\nconst _null = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return (value === \"\") ? null : value;\r\n  } \r\n}\r\n\r\nconst builtinFilters: FilterWithOptions = {\r\n  eq,\r\n  ne,\r\n  not,\r\n  \r\n  lt,\r\n  le,\r\n  gt,\r\n  ge,\r\n\r\n  inc,\r\n  dec,\r\n  mul,\r\n  div,\r\n\r\n  fix,\r\n  locale,\r\n  uc,\r\n  lc,\r\n  cap,\r\n  trim,\r\n  slice,\r\n  substr,\r\n  pad,\r\n  rep,\r\n  rev,\r\n\r\n  int,\r\n  float,\r\n  round,\r\n  floor,\r\n  ceil,\r\n  percent,\r\n\r\n  date,\r\n  time,\r\n  datetime,\r\n  ymd,\r\n\r\n  falsy,\r\n  truthy,\r\n  defaults,\r\n\r\n  boolean,\r\n  number,\r\n  string,\r\n  \"null\": _null,\r\n};\r\n\r\nexport const outputBuiltinFilters = builtinFilters;\r\nexport const inputBuiltinFilters = builtinFilters;\r\n\r\nexport const builtinFilterFn = (name:string, options: string[]) => (filters: FilterWithOptions) => {\r\n  const filter = filters[name];\r\n  if (!filter) throw new Error(`outputBuiltinFiltersFn: filter not found: ${name}`);\r\n  return filter(options);\r\n}\r\n\r\n","\r\nlet id = 0;\r\n\r\nexport function generateId(): number {\r\n  return ++id;\r\n}","\r\nexport function raiseError(message: string): never {\r\n  throw new Error(message);\r\n}\r\n","import { raiseError } from \"../utils.js\";\r\nimport { IStructiveState } from \"./types\";\r\n\r\nconst stateClassById: Record<number,IStructiveState> = {};\r\n\r\nexport function registerStateClass(id: number, stateClass: IStructiveState) {\r\n  stateClassById[id] = stateClass;\r\n}\r\n\r\nexport function getStateClassById(id: number): IStructiveState {\r\n  return stateClassById[id] ?? raiseError(`getStateClassById: stateClass not found: ${id}`);\r\n}\r\n","import { raiseError } from \"../utils.js\";\r\n\r\nconst styleSheetById: Record<number,CSSStyleSheet> = {};\r\n\r\nexport function registerStyleSheet(id: number, css: CSSStyleSheet) {\r\n  styleSheetById[id] = css;\r\n}\r\n\r\nexport function getStyleSheetById(id: number): CSSStyleSheet {\r\n  return styleSheetById[id] ?? raiseError(`getStyleSheetById: stylesheet not found: ${id}`);\r\n}","import { registerStyleSheet } from \"./registerStyleSheet.js\";\r\n\r\nexport function registerCss(id: number, css: string) {\r\n  const styleSheet = new CSSStyleSheet();\r\n  styleSheet.replaceSync(css);\r\n  registerStyleSheet(id, styleSheet);\r\n}","import { FilterFn, Filters, FilterWithOptions } from \"../Filter/types\";\r\nimport { raiseError } from \"../utils.js\";\r\nimport { IFilterText } from \"./types\";\r\n\r\nfunction textToFilter(filters:FilterWithOptions, text: IFilterText): FilterFn {\r\n  const filter = filters[text.name];\r\n  if (!filter) raiseError(`outputBuiltinFiltersFn: filter not found: ${name}`);\r\n  return filter(text.options);\r\n}\r\n\r\nconst cache : Map<IFilterText[], Filters> = new Map();\r\n\r\nexport function createFilters(filters:FilterWithOptions, texts: IFilterText[]): Filters {\r\n  let result = cache.get(texts);\r\n  if (typeof result === \"undefined\") {\r\n    result = [];\r\n    for(let i = 0; i < texts.length; i++) {\r\n      result.push(textToFilter(filters, texts[i]));\r\n    }\r\n    cache.set(texts, result);\r\n  }\r\n  return result;\r\n}\r\n","import { Filters } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IBindContent, IBinding } from \"../types\";\r\nimport { IBindingNode } from \"./types\";\r\n\r\nexport class BindingNode implements IBindingNode {\r\n  #binding: IBinding;\r\n  #node: Node;\r\n  #name: string;\r\n  #filters: Filters;\r\n  #decorates: string[];\r\n  #bindContents: Set<IBindContent> = new Set<IBindContent>();\r\n  get node(): Node {\r\n    return this.#node;\r\n  }\r\n  get name(): string {\r\n    return this.#name;\r\n  }\r\n  get subName(): string {\r\n    return this.#name;\r\n  }\r\n  get binding(): IBinding {\r\n    return this.#binding;\r\n  }\r\n  get decorates(): string[] {\r\n    return this.#decorates;\r\n  }\r\n  get filters(): Filters {\r\n    return this.#filters;\r\n  }\r\n  get bindContents(): Set<IBindContent> {\r\n    return this.#bindContents;\r\n  }\r\n  constructor(\r\n    binding   : IBinding, \r\n    node      : Node, \r\n    name      : string,\r\n    filters   : Filters,\r\n    decorates : string[]\r\n  ) {\r\n    this.#binding = binding;\r\n    this.#node = node;\r\n    this.#name = name;\r\n    this.#filters = filters;\r\n    this.#decorates = decorates;\r\n  }\r\n  init():void {\r\n  }\r\n  update(): void {\r\n    this.assignValue(this.binding.bindingState.filteredValue);\r\n  }\r\n  assignValue(value: any): void {\r\n    raiseError(`BindingNode: assignValue not implemented`);\r\n  }\r\n  updateElements(listIndexes: IListIndex[], values: any[]) {\r\n    raiseError(`BindingNode: updateElements not implemented`);\r\n  }\r\n  get isSelectElement(): boolean {\r\n    return this.node instanceof HTMLSelectElement;\r\n  }\r\n  get value():any {\r\n    return null;\r\n  }\r\n  get filteredValue():any {\r\n    return null;\r\n  }\r\n}","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeAttribute extends BindingNode {\r\n  #subName: string;\r\n  get subName():string {\r\n    return this.#subName;\r\n  }\r\n  constructor(\r\n    binding   : IBinding, \r\n    node      : Node, \r\n    name      : string,\r\n    filters   : Filters,\r\n    decorates : string[]\r\n  ) {\r\n    super(binding, node, name, filters, decorates);\r\n    const [, subName] = this.name.split(\".\");\r\n    this.#subName = subName;\r\n  }\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    const element = this.node as Element;\r\n    element.setAttribute(this.subName, value.toString());\r\n  }\r\n}\r\n\r\nexport const createBindingNodeAttribute: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeAttribute(binding, node, name, filterFns, decorates);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeCheckbox extends BindingNode {\r\n  assignValue(value:any) {\r\n    if (!Array.isArray(value)) {\r\n      raiseError(`BindingNodeCheckbox.update: value is not array`, );\r\n    }\r\n    const element = this.node as HTMLInputElement;\r\n    element.checked = value.map(_val => _val.toString()).includes(element.value);\r\n  }\r\n}\r\n\r\nexport const createBindingNodeCheckbox: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeCheckbox(binding, node, name, filterFns, decorates);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeClassList extends BindingNode {\r\n  assignValue(value:any) {\r\n    if (!Array.isArray(value)) {\r\n      raiseError(`BindingNodeClassList.update: value is not array`);\r\n    }\r\n    const element = this.node as Element;\r\n    element.className = value.join(\" \");\r\n  }\r\n}\r\n\r\nexport const createBindingNodeClassList: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeClassList(binding, node, name, filterFns, decorates);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeClassName extends BindingNode {\r\n  #subName: string;\r\n  get subName(): string {\r\n    return this.#subName;\r\n  }\r\n  constructor(\r\n    binding   : IBinding, \r\n    node      : Node, \r\n    name      : string,\r\n    filters   : Filters,\r\n    decorates : string[]\r\n  ) {\r\n    super(binding, node, name, filters, decorates);\r\n    const [, subName] = this.name.split(\".\");\r\n    this.#subName = subName;\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (typeof value !== \"boolean\") {\r\n      raiseError(`BindingNodeClassName.update: value is not boolean`);\r\n    }\r\n    const element = this.node as Element;\r\n    if (value) {\r\n      element.classList.add(this.subName);\r\n    } else {\r\n      element.classList.remove(this.subName);\r\n    }\r\n  }\r\n}\r\n\r\nexport const createBindingNodeClassName: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeClassName(binding, node, name, filterFns, decorates);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeEvent extends BindingNode {\r\n  #subName    : string;\r\n  constructor(\r\n    binding   : IBinding, \r\n    node      : Node, \r\n    name      : string,\r\n    filters   : Filters,\r\n    decorates : string[]\r\n  ) {\r\n    super(binding, node, name, filters, decorates);\r\n    this.#subName = this.name.slice(2); // on～\r\n    const element = node as HTMLElement;\r\n    element.addEventListener(this.subName, (e:Event) => this.handler(e));\r\n  }\r\n  get subName(): string {\r\n    return this.#subName;\r\n  }\r\n  update() {\r\n    // 何もしない\r\n  }\r\n\r\n  handler(e: Event) {\r\n    const bindingState = this.binding.bindingState;\r\n    const engine = this.binding.engine;\r\n    const stateProxy = engine.stateProxy;\r\n    const updater = engine.updater;\r\n    const loopContext = this.binding.parentBindContent.currentLoopContext;\r\n    const indexes = loopContext?.serialize().map((context) => context.listIndex.index) ?? [];\r\n    const options = this.decorates;\r\n    if (options.includes(\"preventDefault\")) {\r\n      e.preventDefault();\r\n    }\r\n    if (options.includes(\"stopPropagation\")) {\r\n      e.stopPropagation();\r\n    }\r\n    this.binding.engine.updater.addProcess(async () => {\r\n      const value = bindingState.value;\r\n      const typeOfValue = typeof value;\r\n      updater.addProcess(async () => {\r\n        if (loopContext) {\r\n          await engine.setLoopContext(loopContext, async () => {\r\n            if (typeOfValue === \"function\") {\r\n              await Reflect.apply(value, stateProxy, [e, ...indexes]);\r\n            } else {\r\n              // ToDo:error\r\n            }\r\n          });\r\n        } else {\r\n          if (typeOfValue === \"function\") {\r\n            await Reflect.apply(value, stateProxy, [e, ...indexes]);\r\n          } else {\r\n            // ToDo:error\r\n          }\r\n        }\r\n      });\r\n    });\r\n  } \r\n}\r\n\r\nexport const createBindingNodeEvent: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeEvent(binding, node, name, filterFns, decorates);\r\n  }\r\n","export const DATA_BIND_ATTRIBUTE = \"data-bind\";\r\nexport const COMMENT_EMBED_MARK = \"@@:\"; // 埋め込み変数のマーク\r\nexport const COMMENT_TEMPLATE_MARK = \"@@|\"; // テンプレートのマーク\r\n","import { COMMENT_TEMPLATE_MARK } from \"../../constants.js\";\r\nimport { Filters } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode.js\";\r\n\r\nconst COMMENT_TEMPLATE_MARK_LEN = COMMENT_TEMPLATE_MARK.length;\r\n\r\nexport class BindingNodeBlock extends BindingNode {\r\n  #id: number;\r\n  get id(): number {\r\n    return this.#id;\r\n  }\r\n  constructor(\r\n    binding   : IBinding, \r\n    node      : Node, \r\n    name      : string,\r\n    filters   : Filters,\r\n    decorates : string[]\r\n  ) {\r\n    super(binding, node, name, filters, decorates);\r\n    const id = this.node.textContent?.slice(COMMENT_TEMPLATE_MARK_LEN) ?? raiseError(\"BindingNodeBlock.id: invalid node\");\r\n    this.#id = Number(id);\r\n  }\r\n    \r\n}","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { createBindContent } from \"../BindContent.js\";\r\nimport { IBindContent, IBinding } from \"../types\";\r\nimport { BindingNodeBlock } from \"./BindingNodeBlock.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeIf extends BindingNodeBlock {\r\n  #bindContent: IBindContent;\r\n  #trueBindContents: Set<IBindContent>;\r\n  #falseBindContents: Set<IBindContent> = new Set();\r\n  #bindContents: Set<IBindContent>;\r\n\r\n  get bindContents(): Set<IBindContent> {\r\n    return this.#bindContents;\r\n  }\r\n\r\n  constructor(\r\n    binding   : IBinding, \r\n    node      : Node, \r\n    name      : string,\r\n    filters   : Filters,\r\n    decorates : string[]\r\n  ) {\r\n    super(binding, node, name, filters, decorates);\r\n    this.#bindContent = createBindContent(\r\n      this.binding, \r\n      this.id, \r\n      this.binding.engine, \r\n      \"\", \r\n      null\r\n    );\r\n    this.#trueBindContents = this.#bindContents = new Set([this.#bindContent]);\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (typeof value !== \"boolean\") {\r\n      raiseError(`BindingNodeIf.update: value is not boolean`);\r\n    }\r\n    const parentNode = this.node.parentNode;\r\n    if (parentNode == null) {\r\n      raiseError(`BindingNodeIf.update: parentNode is null`);\r\n    }\r\n    if (value) {\r\n      this.#bindContent.render();\r\n      this.#bindContent.mountBefore(parentNode, this.node.nextSibling);\r\n      this.#bindContents = this.#trueBindContents;\r\n    } else {\r\n      this.#bindContent.unmount();\r\n      this.#bindContents = this.#falseBindContents;\r\n    }\r\n  }\r\n}\r\n\r\nexport const createBindingNodeIf: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeIf(binding, node, name, filterFns, decorates);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { createBindContent } from \"../BindContent.js\";\r\nimport { IBindContent, IBinding } from \"../types\";\r\nimport { BindingNodeBlock } from \"./BindingNodeBlock.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeFor extends BindingNodeBlock {\r\n  #bindContentsSet       : Set<IBindContent> = new Set<IBindContent>();\r\n  #bindContentByListIndex: WeakMap<IListIndex, IBindContent> = new WeakMap();\r\n  #bindContentPool       : IBindContent[] = [];\r\n  #bindContentLastIndex  : number = 0;\r\n\r\n  get bindContents(): Set<IBindContent> {\r\n    return this.#bindContentsSet;\r\n  }\r\n\r\n  init() {\r\n  }\r\n\r\n  createBindContent(listIndex: IListIndex): IBindContent {\r\n    let bindContent: IBindContent;\r\n    if (this.#bindContentLastIndex >= 0) {\r\n      // プールの最後の要素を取得して、プールの長さをあとで縮減する\r\n      // 作るたびにプールを縮減すると、パフォーマンスが悪化するため\r\n      // プールの長さを縮減するのは、全ての要素を作った後に行う\r\n      bindContent = this.#bindContentPool[this.#bindContentLastIndex];\r\n      this.#bindContentLastIndex--;\r\n      bindContent.assignListIndex(listIndex);\r\n    } else {\r\n      bindContent = createBindContent(\r\n        this.binding, \r\n        this.id, \r\n        this.binding.engine, \r\n        this.binding.bindingState.pattern + \".*\", \r\n        listIndex);\r\n    }\r\n    // 登録\r\n    this.#bindContentByListIndex.set(listIndex, bindContent);\r\n    return bindContent;\r\n  }\r\n\r\n  deleteBindContent(bindContent: IBindContent): void {\r\n    bindContent.unmount();\r\n    bindContent.loopContext?.clearListIndex();\r\n  }\r\n\r\n  get bindContentLastIndex():number {\r\n    return this.#bindContentLastIndex;\r\n  }\r\n  set bindContentLastIndex(value:number) {\r\n    this.#bindContentLastIndex = value;\r\n  }\r\n\r\n  get poolLength():number {\r\n    return this.#bindContentPool.length;\r\n  }\r\n  set poolLength(length: number) {\r\n    if (length < 0) {\r\n      raiseError(`BindingNodeFor.setPoolLength: length is negative`);\r\n    }\r\n    this.#bindContentPool.length = length;\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (!Array.isArray(value)) {\r\n      raiseError(`BindingNodeFor.assignValue: value is not array`);\r\n    }\r\n    const listIndexesSet = this.binding.engine.getListIndexesSet(\r\n      this.binding.bindingState.info, \r\n      this.binding.bindingState.listIndex\r\n    );\r\n    if (listIndexesSet === null) {\r\n      raiseError(`BindingNodeFor.assignValue: listIndexes is not found`);\r\n    }\r\n    this.bindContentLastIndex = this.poolLength - 1;\r\n    const newBindContensSet = new Set<IBindContent>();\r\n    let lastBindContent = null;\r\n    const parentNode = this.node.parentNode;\r\n    if (parentNode == null) {\r\n      raiseError(`BindingNodeFor.update: parentNode is null`);\r\n    }\r\n    for(const listIndex of listIndexesSet) {\r\n      const lastNode = lastBindContent?.getLastNode(parentNode) ?? this.node;\r\n      let bindContent = this.#bindContentByListIndex.get(listIndex);\r\n      if (typeof bindContent === \"undefined\") {\r\n        bindContent = this.createBindContent(listIndex);\r\n        bindContent.render();\r\n        bindContent.mountAfter(parentNode, lastNode);\r\n      } else {\r\n        if (lastNode.nextSibling !== bindContent.firstChildNode) {\r\n          bindContent.mountAfter(parentNode, lastNode);\r\n        }\r\n      }\r\n      newBindContensSet.add(bindContent);\r\n      lastBindContent = bindContent;\r\n    }\r\n    // プールの長さを更新する\r\n    // プールの長さは、プールの最後の要素のインデックス+1であるため、\r\n    this.poolLength = this.bindContentLastIndex + 1;\r\n    // 削除\r\n    const removeBindContentsSet = this.#bindContentsSet.difference(newBindContensSet);\r\n    for(const bindContent of removeBindContentsSet) {\r\n      this.deleteBindContent(bindContent);\r\n    }\r\n    this.#bindContentPool.push(...removeBindContentsSet);\r\n    this.#bindContentsSet = newBindContensSet;\r\n  }\r\n\r\n  /**\r\n   * SWAP処理を想定\r\n   * \r\n   * @param listIndexes \r\n   * @param values \r\n   * @returns \r\n   */\r\n  updateElements(listIndexes: IListIndex[], values: any[]) {\r\n    if (typeof values[0] !== \"object\") return;\r\n    const engine = this.binding.engine;\r\n    const oldListValues = \r\n      engine.getList(\r\n        this.binding.bindingState.info, \r\n        this.binding.bindingState.listIndex\r\n      ) ?? raiseError(`BindingNodeFor.updateElements: oldValues is not found`); \r\n    const parentNode = this.node.parentNode ?? raiseError(`BindingNodeFor.update: parentNode is null`);\r\n\r\n    // DOMから削除\r\n    const currentBindContents = Array.from(this.#bindContentsSet);\r\n    const targetBindContents: IBindContent[] = [];\r\n    for(let i = 0; i < listIndexes.length; i++) {\r\n      const listIndex = listIndexes[i];\r\n      const bindContent = currentBindContents[listIndex.index];\r\n      bindContent.unmount();\r\n      targetBindContents.push(bindContent);\r\n    }\r\n\r\n    // DOMに追加、listIndexを更新\r\n    for(let i = 0; i < listIndexes.length; i++) {\r\n      const listIndex = listIndexes[i];\r\n      const index = listIndex.index;\r\n\r\n      const lastBindContent = currentBindContents[index - 1] ?? null;\r\n      const lastNode = lastBindContent?.lastChildNode ?? this.node;\r\n\r\n      const oldValue = oldListValues[index];\r\n      const targetIndex = values.indexOf(oldValue);\r\n      const prevBindContent = targetBindContents[targetIndex];\r\n\r\n      if (typeof prevBindContent === \"undefined\") {\r\n        // 入れ替えるBindContentがない場合は再描画\r\n        const bindContent = targetBindContents[index];\r\n        bindContent.render();\r\n        bindContent.mountAfter(parentNode, lastNode);\r\n      } else {\r\n        prevBindContent.assignListIndex(listIndex);\r\n        prevBindContent.mountAfter(parentNode, lastNode);\r\n        this.#bindContentByListIndex.set(listIndex, prevBindContent);\r\n        currentBindContents[index] = prevBindContent;\r\n      }\r\n      if (targetIndex >= 0) {\r\n        values[targetIndex] = -1;\r\n      }\r\n    }\r\n    this.#bindContentsSet = new Set<IBindContent>(currentBindContents);\r\n    engine.saveList(\r\n      this.binding.bindingState.info, \r\n      this.binding.bindingState.listIndex, \r\n      this.binding.bindingState.value.slice(0)\r\n    );\r\n  }\r\n}\r\n\r\nexport const createBindingNodeFor: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeFor(binding, node, name, filterFns, decorates);\r\n  }\r\n","import { NodeType } from \"./types\";\r\n\r\nconst DEFAULT_PROPERTY = \"textContent\";\r\n\r\ntype DefaultPropertyByElementType = {\r\n  [key:string]: string;\r\n}\r\n\r\nconst defaultPropertyByElementType:DefaultPropertyByElementType = {\r\n  \"radio\"   : \"checked\",\r\n  \"checkbox\": \"checked\",\r\n  \"button\"  : \"onclick\",\r\n}\r\n\r\n/**\r\n * HTML要素のデフォルトプロパティを取得\r\n */\r\nconst getDefaultPropertyHTMLElement = (node:Node):string => \r\n  node instanceof HTMLSelectElement || node instanceof HTMLTextAreaElement || node instanceof HTMLOptionElement ? \"value\" : \r\n  node instanceof HTMLButtonElement ? \"onclick\" : \r\n  node instanceof HTMLAnchorElement ? \"onclick\" : \r\n  node instanceof HTMLFormElement ? \"onsubmit\" : \r\n  node instanceof HTMLInputElement ? (defaultPropertyByElementType[node.type] ?? \"value\") :\r\n  DEFAULT_PROPERTY;\r\n\r\ntype DefaultPropertyByKey = {\r\n  [key:string]: string | undefined;\r\n}\r\n\r\nconst _cache: DefaultPropertyByKey = {};\r\n\r\nconst textContentProperty = (node:Node):string => DEFAULT_PROPERTY;\r\n\r\ntype GetDefaultPropertyByNodeType = {\r\n  [key in NodeType]: ((node:Node)=>string) | undefined;\r\n}\r\n\r\nconst getDefaultPropertyByNodeType: GetDefaultPropertyByNodeType = {\r\n  HTMLElement: getDefaultPropertyHTMLElement,\r\n  SVGElement : undefined,\r\n  Text       : textContentProperty,\r\n  Template   : undefined,\r\n}\r\n\r\n/**\r\n * バインド情報でノードプロパティを省略された場合のデフォルトのプロパティ名を取得\r\n * @param node ノード\r\n * @param nodeType ノードタイプ\r\n * @returns {string | undefined} デフォルトのプロパティ名\r\n */\r\nexport function getDefaultName(\r\n  node    : Node, \r\n  nodeType: NodeType\r\n): string | undefined {\r\n  const key = node.constructor.name + \"\\t\" + ((node as HTMLInputElement).type ?? \"\"); // type attribute\r\n  return _cache[key] ?? (_cache[key] = getDefaultPropertyByNodeType[nodeType]?.(node));\r\n}\r\n  ","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { getDefaultName } from \"../../BindingBuilder/getDefaultName.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nfunction isTwoWayBindable(element: HTMLElement): boolean {\r\n  return element instanceof HTMLInputElement || \r\n    element instanceof HTMLTextAreaElement || \r\n    element instanceof HTMLSelectElement;\r\n}\r\n\r\nconst defaultEventByName: {[key:string]: string} = {\r\n  \"value\"   : \"input\",\r\n  \"checked\" : \"change\",\r\n  \"selected\": \"change\",\r\n};\r\n\r\nclass BindingNodeProperty extends BindingNode {\r\n  get value(): any {\r\n    // @ts-ignore\r\n    return this.node[this.name];\r\n  }\r\n  get filteredValue(): any {\r\n    let value = this.value;\r\n    for(let i = 0; i < this.filters.length; i++) {\r\n      value = this.filters[i](value);\r\n    }\r\n    return value;\r\n  }\r\n  constructor(\r\n    binding   : IBinding, \r\n    node      : Node, \r\n    name      : string,\r\n    filters   : Filters,\r\n    decorates : string[]\r\n  ) {\r\n    super(binding, node, name, filters, decorates);\r\n\r\n    const isElement = this.node instanceof HTMLElement;\r\n    if (!isElement) return;\r\n    if (!isTwoWayBindable(this.node)) return;\r\n    const defaultName = getDefaultName(this.node, \"HTMLElement\");\r\n    if (defaultName !== this.name) return;\r\n    if (decorates.length > 1) raiseError(`BindingNodeProperty: ${this.name} has multiple decorators`);\r\n    const event = (decorates[0]?.startsWith(\"on\") ? decorates[0]?.slice(2) : decorates[0]) ?? null;\r\n    const eventName = event ?? defaultEventByName[this.name] ?? \"readonly\";\r\n    if (eventName === \"readonly\" || eventName === \"ro\") return;\r\n    this.node.addEventListener(eventName, () => {\r\n      this.binding.updateStateValue(this.filteredValue);\r\n    });\r\n\r\n  }\r\n\r\n  init() {\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    // @ts-ignore\r\n    this.node[this.name] = value;\r\n  }\r\n}\r\n\r\nexport const createBindingNodeProperty: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeProperty(binding, node, name, filterFns, decorates);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeRadio extends BindingNode {\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    const element = this.node as HTMLInputElement;\r\n    element.checked = value.toString() === element.value.toString();\r\n  }\r\n}\r\n\r\nexport const createBindingNodeRadio: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeRadio(binding, node, name, filterFns, decorates);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeStyle extends BindingNode {\r\n  #subName: string;\r\n  get subName():string {\r\n    return this.#subName;\r\n  }\r\n  constructor(\r\n    binding   : IBinding, \r\n    node      : Node, \r\n    name      : string,\r\n    filters   : Filters,\r\n    decorates : string[]\r\n  ) {\r\n    super(binding, node, name, filters, decorates);\r\n    const [, subName] = this.name.split(\".\");\r\n    this.#subName = subName;\r\n  }\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    const element = this.node as HTMLElement;\r\n    element.style.setProperty(this.subName, value.toString());\r\n  }\r\n}\r\n\r\nexport const createBindingNodeStyle: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeStyle(binding, node, name, filterFns, decorates);\r\n  }\r\n","\r\nconst symbolName = \"componentState\";\r\n\r\nexport const RenderSymbol : unique symbol = Symbol.for(`${symbolName}.render`);\r\nexport const BindParentComponentSymbol : unique symbol = Symbol.for(`${symbolName}.bindParentComponent`);\r\n","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { RenderSymbol } from \"../../ComponentState/symbols.js\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { StructiveComponent } from \"../../WebComponents/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode.js\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeComponent extends BindingNode {\r\n  #subName: string;\r\n  get subName():string {\r\n    return this.#subName;\r\n  }\r\n  constructor(\r\n    binding   : IBinding, \r\n    node      : Node, \r\n    name      : string,\r\n    filters   : Filters,\r\n    decorates : string[]\r\n  ) {\r\n    super(binding, node, name, filters, decorates);\r\n    const [, subName] = this.name.split(\".\");\r\n    this.#subName = subName;\r\n  }\r\n\r\n  init(): void {\r\n    const engine = this.binding.engine;\r\n    let bindings = engine.bindingsByComponent.get(this.node as StructiveComponent);\r\n    if (typeof bindings === \"undefined\") {\r\n      bindings = new Set<IBinding>();\r\n      engine.bindingsByComponent.set(this.node as StructiveComponent, bindings);\r\n    }\r\n    bindings.add(this.binding);\r\n  }\r\n\r\n  assignValue(value: any): void {\r\n    const component = this.node as StructiveComponent;\r\n    component.state[RenderSymbol](this.subName, value);\r\n  }\r\n\r\n}\r\n\r\nexport const createBindingNodeComponent: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], decorates: string[]) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeComponent(binding, node, name, filterFns, decorates);\r\n  }\r\n","import { createBindingNodeAttribute } from \"../DataBinding/BindingNode/BindingNodeAttribute.js\";\r\nimport { createBindingNodeCheckbox } from \"../DataBinding/BindingNode/BindingNodeCheckbox.js\";\r\nimport { createBindingNodeClassList } from \"../DataBinding/BindingNode/BindingNodeClassList.js\";\r\nimport { createBindingNodeClassName } from \"../DataBinding/BindingNode/BindingNodeClassName.js\";\r\nimport { createBindingNodeEvent } from \"../DataBinding/BindingNode/BindingNodeEvent.js\";\r\nimport { createBindingNodeIf } from \"../DataBinding/BindingNode/BindingNodeIf.js\";\r\nimport { createBindingNodeFor } from \"../DataBinding/BindingNode/BindingNodeFor.js\";\r\nimport { createBindingNodeProperty } from \"../DataBinding/BindingNode/BindingNodeProperty.js\";\r\nimport { createBindingNodeRadio } from \"../DataBinding/BindingNode/BindingNodeRadio.js\";\r\nimport { createBindingNodeStyle } from \"../DataBinding/BindingNode/BindingNodeStyle.js\";\r\nimport { CreateBindingNodeByNodeFn, CreateBindingNodeFn } from \"../DataBinding/BindingNode/types\";\r\nimport { raiseError } from \"../utils.js\";\r\nimport { IFilterText } from \"./types\";\r\nimport { createBindingNodeComponent } from \"../DataBinding/BindingNode/BindingNodeComponent.js\";\r\n\r\ntype NodePropertyConstructorByName = {[key:string]:CreateBindingNodeFn};\r\ntype NodePropertyConstructorByNameByIsComment = {[key:number]:NodePropertyConstructorByName};\r\n\r\nconst nodePropertyConstructorByNameByIsComment:NodePropertyConstructorByNameByIsComment = {\r\n  0: {\r\n    \"class\"   : createBindingNodeClassList,\r\n    \"checkbox\": createBindingNodeCheckbox,\r\n    \"radio\"   : createBindingNodeRadio,\r\n  },\r\n  1: {\r\n    \"if\" : createBindingNodeIf,\r\n  },\r\n};\r\n\r\ntype NodePropertyConstructorByFirstName = {[key:string]:CreateBindingNodeFn};\r\n\r\nconst nodePropertyConstructorByFirstName:NodePropertyConstructorByFirstName = {\r\n  \"class\": createBindingNodeClassName,\r\n  \"attr\" : createBindingNodeAttribute,\r\n  \"style\": createBindingNodeStyle,\r\n  \"state\": createBindingNodeComponent,\r\n//  \"popover\": PopoverTarget,\r\n//  \"commandfor\": CommandForTarget,\r\n};\r\n\r\nfunction _getBindingNodeCreator(isComment:boolean, isElement: boolean, propertyName: string): CreateBindingNodeFn {\r\n  const bindingNodeCreatorByName = nodePropertyConstructorByNameByIsComment[isComment ? 1 : 0][propertyName];\r\n  if (typeof bindingNodeCreatorByName !== \"undefined\") {\r\n    return bindingNodeCreatorByName;\r\n  }\r\n  if (isComment && propertyName === \"for\") {\r\n    return createBindingNodeFor;\r\n  }\r\n  if (isComment) {\r\n    raiseError(`getBindingNodeCreator: unknown node property ${propertyName}`);\r\n  }\r\n  const nameElements = propertyName.split(\".\");\r\n  const bindingNodeCreatorByFirstName = nodePropertyConstructorByFirstName[nameElements[0]];\r\n  if (typeof bindingNodeCreatorByFirstName !== \"undefined\") {\r\n    return bindingNodeCreatorByFirstName;\r\n  }\r\n  if (isElement) {\r\n    if (propertyName.startsWith(\"on\")) {\r\n      return createBindingNodeEvent;\r\n    } else {\r\n      return createBindingNodeProperty;\r\n    }\r\n  } else {\r\n    return createBindingNodeProperty;\r\n  }\r\n}\r\n\r\nconst _cache: {[key:string]:CreateBindingNodeFn} = {};\r\n\r\n/**\r\n * バインドのノードプロパティの生成関数を取得する\r\n * @param node ノード\r\n * @param propertyName プロパティ名\r\n * @returns {CreateBindingNodeFn} ノードプロパティのコンストラクタ\r\n */\r\nexport function getBindingNodeCreator(\r\n  node        : Node, \r\n  propertyName: string,\r\n  filterTexts : IFilterText[],\r\n  decorates   : string[]\r\n): CreateBindingNodeByNodeFn {\r\n  const isComment = node instanceof Comment;\r\n  const isElement = node instanceof Element;\r\n  const key = isComment + \"\\t\" + isElement + \"\\t\" + propertyName;\r\n  const fn = _cache[key] ?? (_cache[key] = _getBindingNodeCreator(isComment, isElement, propertyName));\r\n  return fn(propertyName, filterTexts, decorates);\r\n}\r\n","\r\nconst symbolName = \"state\";\r\n\r\nexport const GetByRefSymbol            : unique symbol = Symbol.for(`${symbolName}.GetByRef`);\r\nexport const SetByRefSymbol            : unique symbol = Symbol.for(`${symbolName}.SetByRef`);\r\nexport const SetCacheableSymbol        : unique symbol = Symbol.for(`${symbolName}.SetCacheable`);\r\nexport const ConnectedCallbackSymbol   : unique symbol = Symbol.for(`${symbolName}.ConnectedCallback`);\r\nexport const DisconnectedCallbackSymbol: unique symbol = Symbol.for(`${symbolName}.DisconnectedCallback`);\r\nexport const ResolveSymbol             : unique symbol = Symbol.for(`${symbolName}.Resolve`);\r\nexport const GetAllSymbol              : unique symbol = Symbol.for(`${symbolName}.GetAll`);\r\n","import { raiseError } from '../utils.js';\r\nimport { IStructuredPathInfo } from './types';\r\n\r\n/**\r\n * プロパティ名に\"constructor\"や\"toString\"などの予約語やオブジェクトのプロパティ名を\r\n * 上書きするような名前も指定できるように、Mapを検討したが、そもそもそのような名前を\r\n * 指定することはないと考え、Mapを使わないことにした。\r\n */\r\nconst _cache: { [key:string]: IStructuredPathInfo } = {};\r\n//const _cache: Map<string, IStructuredPathInfo> = new Map();\r\n\r\n/**\r\n * パターン情報を取得します\r\n * @param pattern パターン\r\n * @returns {IPatternInfo} パターン情報\r\n */\r\nclass StructuredPathInfo implements IStructuredPathInfo {\r\n  static id = 0;\r\n  id = ++StructuredPathInfo.id;\r\n  pattern;\r\n  pathSegments;\r\n  lastSegment;\r\n  cumulativePaths;\r\n  cumulativeInfos;\r\n  wildcardPaths;\r\n  wildcardInfos;\r\n  wildcardParentPaths;\r\n  wildcardParentInfos;\r\n  lastWildcardPath;\r\n  lastWildcardInfo;\r\n  parentPath;\r\n  parentInfo;\r\n  wildcardCount;\r\n\r\n  constructor(pattern: string) {\r\n    const getPattern = (_pattern: string): IStructuredPathInfo => {\r\n      return (pattern === _pattern) ? this : getStructuredPathInfo(_pattern);\r\n    };\r\n    const pathSegments = pattern.split(\".\");\r\n    const cumulativePaths = [];\r\n    const cumulativeInfos: IStructuredPathInfo[] = [];\r\n    const wildcardPaths = [];\r\n    const wildcardInfos = [];\r\n    const wildcardParentPaths = [];\r\n    const wildcardParentInfos = [];\r\n    let currentPatternPath = \"\", prevPatternPath = \"\";\r\n    let wildcardCount = 0;\r\n    for(let i = 0; i < pathSegments.length; i++) {\r\n      currentPatternPath += pathSegments[i];\r\n      if (pathSegments[i] === \"*\") {\r\n        wildcardPaths.push(currentPatternPath);\r\n        wildcardInfos.push(getPattern(currentPatternPath));\r\n        wildcardParentPaths.push(prevPatternPath);\r\n        wildcardParentInfos.push(getPattern(prevPatternPath));\r\n        wildcardCount++;\r\n      }\r\n      cumulativePaths.push(currentPatternPath);\r\n      cumulativeInfos.push(getPattern(currentPatternPath));\r\n      prevPatternPath = currentPatternPath;\r\n      currentPatternPath += \".\";\r\n    }\r\n    const lastWildcardPath = wildcardPaths.length > 0 ? wildcardPaths[wildcardPaths.length - 1] : null;\r\n    const parentPath = cumulativePaths.length > 1 ? cumulativePaths[cumulativePaths.length - 2] : null;\r\n    this.pattern = pattern;\r\n    this.pathSegments = pathSegments;\r\n    this.lastSegment = pathSegments[pathSegments.length - 1];\r\n    this.cumulativePaths = cumulativePaths;\r\n    this.cumulativeInfos = cumulativeInfos;\r\n    this.wildcardPaths = wildcardPaths;\r\n    this.wildcardInfos = wildcardInfos;\r\n    this.wildcardParentPaths = wildcardParentPaths;\r\n    this.wildcardParentInfos = wildcardParentInfos;\r\n    this.lastWildcardPath = lastWildcardPath;\r\n    this.lastWildcardInfo = lastWildcardPath ? getPattern(lastWildcardPath) : null;\r\n    this.parentPath = parentPath;\r\n    this.parentInfo = parentPath ? getPattern(parentPath) : null;\r\n    this.wildcardCount = wildcardCount;\r\n  }\r\n}\r\n\r\nconst reservedWords = new Set([\r\n  \"constructor\", \"prototype\", \"__proto__\", \"toString\",\r\n  \"valueOf\", \"hasOwnProperty\", \"isPrototypeOf\",\r\n  \"watch\", \"unwatch\", \"eval\", \"arguments\",\r\n  \"let\", \"var\", \"const\", \"class\", \"function\",\r\n  \"null\", \"true\", \"false\", \"new\", \"return\",\r\n]);\r\n\r\nexport function getStructuredPathInfo(structuredPath: string): IStructuredPathInfo {\r\n  let info: IStructuredPathInfo | undefined;\r\n  info = _cache[structuredPath];\r\n  if (typeof info !== \"undefined\") {\r\n    return info;\r\n  }\r\n  if (reservedWords.has(structuredPath)) {\r\n    raiseError(`getStructuredPathInfo: pattern is reserved word: ${structuredPath}`);\r\n  }\r\n  return (_cache[structuredPath] = new StructuredPathInfo(structuredPath));\r\n}\r\n","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { GetByRefSymbol, SetByRefSymbol } from \"../../StateClass/symbols.js\";\r\nimport { IStateProxy } from \"../../StateClass/types\";\r\nimport { getStructuredPathInfo } from \"../../StateProperty/getStructuredPathInfo.js\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IBinding } from \"../types\";\r\nimport { CreateBindingStateFn, IBindingState } from \"./types\";\r\n\r\nclass BindingState implements IBindingState {\r\n  #binding     : IBinding;\r\n  #pattern     : string;\r\n  #info        : IStructuredPathInfo;\r\n  #listIndexRef: WeakRef<IListIndex> | null = null;\r\n  #state       : IStateProxy;\r\n  #filters     : Filters;\r\n  get pattern(): string {\r\n    return this.#pattern;\r\n  }\r\n  get info() {\r\n    return this.#info;\r\n  }\r\n  get listIndex() {\r\n    if (this.#listIndexRef === null) return null;\r\n    return this.#listIndexRef.deref() ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get state() {\r\n    return this.#state;\r\n  }\r\n  get filters() {\r\n    return this.#filters;\r\n  }\r\n  get binding() {\r\n    return this.#binding;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    state  : IStateProxy, \r\n    pattern: string, \r\n    filters: Filters\r\n  ) {\r\n    this.#binding = binding;\r\n    this.#pattern = pattern;\r\n    this.#info = getStructuredPathInfo(pattern);\r\n    this.#state = state;\r\n    this.#filters = filters;\r\n  }\r\n  get value(): any {\r\n    return this.#state[GetByRefSymbol](this.info, this.listIndex);\r\n  }\r\n  get filteredValue(): any {\r\n    let value = this.value;\r\n    for(let i = 0; i < this.#filters.length; i++) {\r\n      value = this.#filters[i](value);\r\n    }\r\n    return value;\r\n  }\r\n  init(): void {\r\n    if (this.info.wildcardCount > 0) {\r\n      const lastWildcardPath = this.info.lastWildcardPath ?? \r\n        raiseError(`BindingState.init: wildcardLastParentPath is null`);\r\n      const loopContext = this.binding.parentBindContent.loopContext?.find(lastWildcardPath) ?? \r\n        raiseError(`BindingState.init: loopContext is null`);\r\n      this.#listIndexRef = loopContext.listIndexRef;\r\n    }\r\n    this.binding.engine.saveBinding(this.info, this.listIndex, this.binding);\r\n  }\r\n  assignValue(value:any) {\r\n    const loopContext = this.binding.parentBindContent.currentLoopContext;\r\n    const engine = this.binding.engine;\r\n    const stateProxy = engine.stateProxy;\r\n    const bindingState = this.binding.bindingState;\r\n    if (loopContext) {\r\n      engine.setLoopContext(loopContext, async () => {\r\n        // @ts-ignore\r\n        stateProxy[SetByRefSymbol](bindingState.info, bindingState.listIndex, value);\r\n      });\r\n    } else {\r\n      // @ts-ignore\r\n      stateProxy[SetByRefSymbol](bindingState.info, bindingState.listIndex, value);\r\n    }\r\n  }\r\n}\r\n\r\nexport const createBindingState: CreateBindingStateFn = \r\n(name: string, filterTexts: IFilterText[]) => \r\n  (binding:IBinding, state: IStateProxy, filters:FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts); // ToDo:ここは、メモ化できる\r\n    return new BindingState(binding, state, name, filterFns);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters.js\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStateProxy } from \"../../StateClass/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IBinding } from \"../types\";\r\nimport { CreateBindingStateFn, IBindingState } from \"./types\";\r\n\r\nclass BindingStateIndex implements IBindingState {\r\n  #binding     : IBinding;\r\n  #indexNumber : number;\r\n  #listIndexRef: WeakRef<IListIndex> | null = null;\r\n  #state       : IStateProxy;\r\n  #filters     : Filters;\r\n  get pattern(): string {\r\n    return raiseError(\"Not implemented\");\r\n  }\r\n  get info() {\r\n    return raiseError(\"Not implemented\");\r\n  }\r\n  get listIndex() {\r\n    if (this.#listIndexRef === null) return null;\r\n    return this.#listIndexRef.deref() ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get state() {\r\n    return this.#state;\r\n  }\r\n  get filters() {\r\n    return this.#filters;\r\n  }\r\n  get binding() {\r\n    return this.#binding;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    state  : IStateProxy, \r\n    pattern: string, \r\n    filters: Filters\r\n  ) {\r\n    this.#binding = binding;\r\n    const indexNumber = Number(pattern.slice(1));\r\n    if (isNaN(indexNumber)) {\r\n      raiseError(\"BindingStateIndex: pattern is not a number\");\r\n    }\r\n    this.#indexNumber = indexNumber;\r\n    this.#state = state;\r\n    this.#filters = filters;\r\n  }\r\n  get value(): any {\r\n    return this.listIndex?.index ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get filteredValue(): any {\r\n    let value = this.value;\r\n    for(let i = 0; i < this.#filters.length; i++) {\r\n      value = this.#filters[i](value);\r\n    }\r\n    return value;\r\n  }\r\n  init(): void {\r\n    const loopContext = this.binding.parentBindContent.currentLoopContext ??\r\n      raiseError(`BindingState.init: loopContext is null`);\r\n    const loopContexts = loopContext.serialize();\r\n    this.#listIndexRef = loopContexts[this.#indexNumber - 1].listIndexRef ??\r\n      raiseError(`BindingState.init: listIndexRef is null`);\r\n    const listIndex = this.listIndex ?? raiseError(\"listIndex is null\");\r\n    const bindings = this.binding.engine.bindingsByListIndex.get(listIndex);\r\n    if (bindings === undefined) {\r\n      this.binding.engine.bindingsByListIndex.set(listIndex, new Set([this.binding]));\r\n    } else {\r\n      bindings.add(this.binding);\r\n    }\r\n  }\r\n  assignValue(value:any): void {\r\n    raiseError(\"BindingStateIndex: assignValue is not implemented\");\r\n  }\r\n}\r\n\r\nexport const createBindingStateIndex: CreateBindingStateFn = \r\n(name: string, filterTexts: IFilterText[]) => \r\n  (binding:IBinding, state: IStateProxy, filters:FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts); // ToDo:ここは、メモ化できる\r\n\r\n    return new BindingStateIndex(binding, state, name, filterFns);\r\n  }\r\n","import { createBindingState } from \"../DataBinding/BindingState/BindingState.js\";\r\nimport { createBindingStateIndex } from \"../DataBinding/BindingState/BindingStateIndex.js\";\r\nimport { CreateBindingStateByStateFn } from \"../DataBinding/BindingState/types\";\r\nimport { IFilterText } from \"./types\";\r\n\r\nconst ereg = new RegExp(/^\\$\\d+$/);\r\n\r\nexport function getBindingStateCreator(\r\n  name       : string, \r\n  filterTexts: IFilterText[]\r\n): CreateBindingStateByStateFn {\r\n  if (ereg.test(name)) {\r\n    return createBindingStateIndex(name, filterTexts);\r\n  } else {\r\n    return createBindingState(name, filterTexts);\r\n  }\r\n}","import { COMMENT_EMBED_MARK, COMMENT_TEMPLATE_MARK, DATA_BIND_ATTRIBUTE } from \"../constants.js\";\r\nimport { getTemplateById } from \"../Template/registerTemplate.js\";\r\nimport { raiseError } from \"../utils.js\";\r\nimport { NodeType } from \"./types\";\r\n\r\nconst COMMENT_EMBED_MARK_LEN = COMMENT_EMBED_MARK.length;\r\nconst COMMENT_TEMPLATE_MARK_LEN = COMMENT_TEMPLATE_MARK.length;\r\n\r\nconst getTextFromContent   = (node:Node):string        => node.textContent?.slice(COMMENT_EMBED_MARK_LEN).trim() ?? \"\";\r\nconst getTextFromAttribute = (node:HTMLElement):string => node.getAttribute(DATA_BIND_ATTRIBUTE) ?? \"\";\r\nconst getTextFromTemplate  = (node:Node):string        => {\r\n  const text = node.textContent?.slice(COMMENT_TEMPLATE_MARK_LEN).trim(); \r\n  const id = Number(text);\r\n  const template = getTemplateById(id) ?? raiseError(`Template not found: ${text}`);\r\n  return template.getAttribute(DATA_BIND_ATTRIBUTE) ?? \"\";\r\n};\r\nconst getTextFromSVGElement = (node:SVGElement):string => node.getAttribute(DATA_BIND_ATTRIBUTE) ?? \"\";\r\n\r\nconst getTextByNodeType = {\r\n  \"Text\":        getTextFromContent,\r\n  \"HTMLElement\": getTextFromAttribute,\r\n  \"Template\":    getTextFromTemplate,\r\n  \"SVGElement\":  getTextFromSVGElement\r\n};\r\n\r\nexport function getDataBindText(nodeType: NodeType, node: Node): string {\r\n  const bindText = getTextByNodeType[nodeType](node as any) ?? \"\";\r\n  if (nodeType === \"Text\") {\r\n    return \"textContent:\" + bindText;\r\n  } else {\r\n    return bindText;\r\n  }\r\n}\r\n","import { raiseError } from \"../utils.js\";\r\nimport { NodeType } from \"./types\";\r\n\r\nconst createNodeKey = (node:Node):string => node.constructor.name + \"\\t\" + ((node instanceof Comment) ? (node.textContent?.[2] ?? \"\") : \"\");\r\n\r\ntype NodeTypeByNodeKey = {\r\n  [nodeKey:string]:NodeType;\r\n};\r\n\r\nconst nodeTypeByNodeKey:NodeTypeByNodeKey = {};\r\n\r\nconst getNodeTypeByNode = (node:Node):NodeType =>\r\n  (node instanceof Comment && node.textContent?.[2] === \":\") ? \"Text\" : \r\n  (node instanceof HTMLElement) ? \"HTMLElement\" :\r\n  (node instanceof Comment && node.textContent?.[2] === \"|\") ? \"Template\" : \r\n  (node instanceof SVGElement) ? \"SVGElement\" : raiseError(`Unknown NodeType: ${node.nodeType}`);\r\n\r\n/**\r\n * ノードのタイプを取得\r\n * @param node ノード\r\n * @param nodeKey ノードキー\r\n * @returns {NodeType} ノードタイプ\r\n */\r\nexport function getNodeType(\r\n  node   : Node, \r\n  nodeKey: string = createNodeKey(node)\r\n): NodeType {\r\n  return nodeTypeByNodeKey[nodeKey] ?? (nodeTypeByNodeKey[nodeKey] = getNodeTypeByNode(node));\r\n}\r\n","import { IFilterText, IBindText } from \"./types\";\r\n\r\nconst trim = (s:string):string => s.trim();\r\n\r\nconst has = (s:string):boolean => s.length > 0; // check length\r\n\r\nconst re = new RegExp(/^#(.*)#$/);\r\nconst decode = (s:string):string => {\r\n  const m = re.exec(s);\r\n  return m ? decodeURIComponent(m[1]) : s;\r\n};\r\n\r\n/**\r\n * parse filter part\r\n * \"eq,100|falsey\" ---> [Filter(eq, [100]), Filter(falsey)]\r\n */\r\nconst parseFilter = (text:string): IFilterText => {\r\n  const [name, ...options] = text.split(\",\").map(trim);\r\n  return {name, options:options.map(decode)};\r\n};\r\n\r\ntype ReturnParseStateProperty = {property:string,filters:IFilterText[]};\r\n/**\r\n * parse expression\r\n * \"value|eq,100|falsey\" ---> [\"value\", Filter[]]\r\n */\r\nconst parseProperty = (text:string): ReturnParseStateProperty => {\r\n  const [property, ...filterTexts] = text.split(\"|\").map(trim);\r\n  return {property, filters:filterTexts.map(parseFilter)};\r\n};\r\n\r\n/**\r\n * parse expressions\r\n * \"textContent:value|eq,100|falsey\" ---> [\"textContent\", \"value\", Filter[eq, falsey]]\r\n */\r\nconst parseExpression = (expression:string): IBindText => {\r\n  const [ bindExpression, decoratesExpression = null ] = expression.split(\"@\").map(trim);\r\n  const decorates = decoratesExpression ? decoratesExpression.split(\",\").map(trim) : [];\r\n  const [nodePropertyText, statePropertyText] = bindExpression.split(\":\").map(trim);\r\n  const { property:nodeProperty, filters:inputFilterTexts } = parseProperty(nodePropertyText);\r\n  const { property:stateProperty, filters:outputFilterTexts } = parseProperty(statePropertyText);\r\n  return { nodeProperty, stateProperty, inputFilterTexts, outputFilterTexts, decorates };\r\n};\r\n\r\n/**\r\n * parse bind text and return BindText[]\r\n */\r\nconst parseExpressions = (text:string): IBindText[] => {\r\n  return text.split(\";\").map(trim).filter(has).map(s => parseExpression(s));\r\n};\r\n\r\nconst cache:{[key:string]: IBindText[]} = {};\r\n\r\n/**\r\n * 取得したバインドテキスト(getBindTextByNodeType)を解析して、バインド情報を取得する\r\n * @param text バインドテキスト\r\n * @param defaultName デフォルト名\r\n * @returns {IBindText[]} バインド情報\r\n */\r\nexport function parseBindText(\r\n  text: string\r\n): IBindText[] {\r\n  if (text.trim() === \"\") {\r\n    return [];\r\n  }\r\n  return cache[text] ?? (cache[text] = parseExpressions(text));\r\n}\r\n","import { NodeType } from \"./types\";\r\n\r\nconst DATASET_BIND_PROPERTY = 'data-bind';\r\n\r\nconst removeAttributeFromElement = (node:Node):void => {\r\n  const element = node as Element;\r\n  element.removeAttribute(DATASET_BIND_PROPERTY);\r\n}\r\n\r\ntype RemoveAttributeByNodeType = {\r\n  [key in NodeType]: ((node:Node)=>void) | undefined;\r\n}\r\n\r\nconst removeAttributeByNodeType:RemoveAttributeByNodeType = {\r\n  HTMLElement: removeAttributeFromElement,\r\n  SVGElement : removeAttributeFromElement,\r\n  Text       : undefined,\r\n  Template   : undefined,\r\n}\r\n\r\n/**\r\n * ノードからdata-bind属性を削除\r\n * @param node ノード\r\n * @param nodeType ノードタイプ\r\n * @returns {Node} ノード\r\n */\r\nexport function removeDataBindAttribute(\r\n  node    : Node, \r\n  nodeType: NodeType\r\n):void {\r\n  return removeAttributeByNodeType[nodeType]?.(node);\r\n}\r\n","import { NodeType } from \"./types\";\r\n\r\nconst replaceTextNodeText = (node:Node):Node => {\r\n  const textNode = document.createTextNode(\"\");\r\n  node.parentNode?.replaceChild(textNode, node);\r\n  return textNode;\r\n}\r\n\r\ntype ReplaceTextNodeFn = {\r\n  [key in NodeType]: ((node:Node)=>Node) | undefined;\r\n}\r\n\r\nconst replaceTextNodeFn:ReplaceTextNodeFn = {\r\n  Text       : replaceTextNodeText,\r\n  HTMLElement: undefined,\r\n  Template   : undefined,\r\n  SVGElement : undefined\r\n}\r\n\r\n/**\r\n * コメントノードをテキストノードに置き換える\r\n * @param node ノード\r\n * @param nodeType ノードタイプ\r\n * @returns {Node} ノード\r\n */\r\nexport function replaceTextNodeFromComment(\r\n  node    : Node, \r\n  nodeType: NodeType\r\n): Node {\r\n  return replaceTextNodeFn[nodeType]?.(node) ?? node;\r\n}\r\n","import { getAbsoluteNodePath } from \"./getAbsoluteNodePath.js\";\r\nimport { getBindingNodeCreator } from \"./getBindingNodeCreator.js\";\r\nimport { getBindingStateCreator } from \"./getBindingStateCreator.js\";\r\nimport { getDataBindText } from \"./getDataBindText.js\";\r\nimport { getNodeType } from \"./getNodeType.js\";\r\nimport { parseBindText } from \"./parseBindText.js\";\r\nimport { removeDataBindAttribute } from \"./removeDataBindAttribute.js\";\r\nimport { replaceTextNodeFromComment } from \"./replaceTextNodeFromComment.js\";\r\nimport { IBindingCreator, IBindText, IDataBindAttributes, NodePath, NodeType } from \"./types\";\r\n\r\nclass DataBindAttributes implements IDataBindAttributes {\r\n  nodeType     : NodeType; // ノードの種別\r\n  nodePath     : NodePath; // ノードのルート\r\n  bindTexts    : IBindText[]; // BINDテキストの解析結果\r\n  creatorByText: Map<IBindText, IBindingCreator> = new Map(); // BINDテキストからバインディングクリエイターを取得\r\n  constructor(node: Node) {\r\n    this.nodeType = getNodeType(node);\r\n    const text = getDataBindText(this.nodeType, node);\r\n    // CommentNodeをTextに置換、template.contentの内容が書き換わることに注意\r\n    node = replaceTextNodeFromComment(node, this.nodeType);\r\n    // data-bind属性を削除する\r\n    removeDataBindAttribute(node, this.nodeType);\r\n\r\n    this.nodePath = getAbsoluteNodePath(node);\r\n    this.bindTexts = parseBindText(text);\r\n    for(let i = 0; i < this.bindTexts.length; i++) {\r\n      const bindText = this.bindTexts[i];\r\n      const creator: IBindingCreator = {\r\n        createBindingNode : getBindingNodeCreator(\r\n          node, \r\n          bindText.nodeProperty, \r\n          bindText.inputFilterTexts,\r\n          bindText.decorates\r\n        ),\r\n        createBindingState: getBindingStateCreator(\r\n          bindText.stateProperty, \r\n          bindText.outputFilterTexts\r\n        ),\r\n      }\r\n      this.creatorByText.set(bindText, creator);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function createDataBindAttributes(node: Node): IDataBindAttributes {\r\n  return new DataBindAttributes(node);\r\n}","import { NodePath } from \"./types\";\r\n\r\nexport function getAbsoluteNodePath(node: Node): NodePath {\r\n  let routeIndexes: NodePath = [];\r\n  while(node.parentNode !== null) {\r\n    const childNodes = Array.from(node.parentNode.childNodes) as Node[];\r\n    routeIndexes = [ childNodes.indexOf(node), ...routeIndexes ];\r\n    node = node.parentNode;\r\n  }\r\n  return routeIndexes;\r\n}","import { DATA_BIND_ATTRIBUTE, COMMENT_EMBED_MARK, COMMENT_TEMPLATE_MARK } from \"../constants.js\";\r\n\r\n/**\r\n * \"@@:\"もしくは\"@@|\"で始まるコメントノードを取得する\r\n */\r\nfunction isCommentNode(node: Node): boolean {\r\n  return node instanceof Comment && (\r\n    (node.textContent?.indexOf(COMMENT_EMBED_MARK) === 0) || (node.textContent?.indexOf(COMMENT_TEMPLATE_MARK) === 0)\r\n  );\r\n} \r\n\r\nexport function getNodesHavingDataBind(root: Node): Node[] {\r\n  const nodes: Node[] = [];\r\n  const walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT, {\r\n    acceptNode(node:Node) {\r\n      return (node instanceof Element) ? \r\n        (node.hasAttribute(DATA_BIND_ATTRIBUTE) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP)\r\n        : (isCommentNode(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP);\r\n    }\r\n  });\r\n  while (walker.nextNode()) {\r\n    nodes.push(walker.currentNode);\r\n  }\r\n  return nodes;\r\n}\r\n\r\n","import { createDataBindAttributes } from \"./createDataBindAttributes.js\";\r\nimport { getNodesHavingDataBind } from \"./getNodesHavingDataBind.js\";\r\nimport { IDataBindAttributes } from \"./types\";\r\n\r\nconst listDataBindAttributesById: {[key:number]:IDataBindAttributes[]} = {};\r\n\r\nconst listPathsSetById: {[key:number]:Set<string>} = {};\r\n\r\nconst pathsSetById: {[key:number]:Set<string>} = {};\r\n\r\nfunction getDataBindAttributesFromTemplate(content: DocumentFragment): IDataBindAttributes[] {\r\n  const nodes = getNodesHavingDataBind(content);\r\n  return nodes.map(node => createDataBindAttributes(node));\r\n}\r\n\r\nexport function registerDataBindAttributes(\r\n  id     : number, \r\n  content: DocumentFragment,\r\n  rootId : number = id\r\n): IDataBindAttributes[] {\r\n  const dataBindAttributes = getDataBindAttributesFromTemplate(content);\r\n  const paths = pathsSetById[rootId] ?? (pathsSetById[rootId] = new Set<string>());\r\n  const listPaths = listPathsSetById[rootId] ?? (listPathsSetById[rootId] = new Set<string>());\r\n  for(let i = 0; i < dataBindAttributes.length; i++) {\r\n    const attribute = dataBindAttributes[i];\r\n    for(let j = 0; j < attribute.bindTexts.length; j++) {\r\n      const bindText = attribute.bindTexts[j];\r\n      paths.add(bindText.stateProperty);\r\n      if (bindText.nodeProperty === \"for\") {\r\n        listPaths.add(bindText.stateProperty);\r\n      }\r\n    }\r\n  }\r\n  return listDataBindAttributesById[id] = dataBindAttributes;\r\n}\r\n\r\nexport const getDataBindAttributesById = (id: number): IDataBindAttributes[] => {\r\n  return listDataBindAttributesById[id];\r\n}\r\n\r\nexport const getListPathsSetById = (id: number): Set<string> => {\r\n  return listPathsSetById[id] ?? [];\r\n};\r\n\r\nexport const getPathsSetById = (id: number): Set<string> => {\r\n  return pathsSetById[id] ?? [];\r\n};","import { registerDataBindAttributes } from \"../BindingBuilder/registerDataBindAttributes.js\";\r\nimport { raiseError } from \"../utils.js\";\r\nimport { removeEmptyTextNodes } from \"./removeEmptyTextNodes.js\";\r\n\r\nconst templateById:Record<number, HTMLTemplateElement> = {};\r\n\r\nexport function registerTemplate(\r\n  id      : number, \r\n  template: HTMLTemplateElement,\r\n  rootId  : number\r\n): number {\r\n  removeEmptyTextNodes(template.content);\r\n  registerDataBindAttributes(id, template.content, rootId);  \r\n  templateById[id] = template;\r\n  return id;\r\n}\r\n\r\nexport function getTemplateById(id: number): HTMLTemplateElement {\r\n  return templateById[id] ?? raiseError(`getTemplateById: template not found: ${id}`);\r\n}","\r\nexport function removeEmptyTextNodes(content:DocumentFragment):void {\r\n  Array.from(content.childNodes).forEach(node => {\r\n    if (node.nodeType === Node.TEXT_NODE && !(node.nodeValue ?? \"\").trim()) {\r\n      content.removeChild(node);\r\n    }\r\n  });  \r\n}\r\n","import { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { CreateBindingNodeByNodeFn, IBindingNode } from \"./BindingNode/types\";\r\nimport { CreateBindingStateByStateFn, IBindingState } from \"./BindingState/types\";\r\nimport { IBindContent, IBinding } from \"./types\";\r\n\r\nclass Binding implements IBinding {\r\n  parentBindContent: IBindContent;\r\n  node             : Node;\r\n  engine           : IComponentEngine;\r\n  bindingNode      : IBindingNode;\r\n  bindingState     : IBindingState;\r\n  constructor(\r\n    parentBindContent : IBindContent,\r\n    node              : Node,\r\n    engine            : IComponentEngine,\r\n    createBindingNode : CreateBindingNodeByNodeFn, \r\n    createBindingState: CreateBindingStateByStateFn,\r\n  ) {\r\n    this.parentBindContent = parentBindContent\r\n    this.node = node;\r\n    this.engine = engine\r\n    this.bindingNode = createBindingNode(this, node, engine.inputFilters);\r\n    this.bindingState = createBindingState(this, engine.stateProxy, engine.outputFilters);\r\n  }\r\n\r\n  get bindContents() {\r\n    return this.bindingNode.bindContents;\r\n  }\r\n\r\n  init() {\r\n    this.bindingNode.init();\r\n    this.bindingState.init();\r\n  }\r\n\r\n  render() {\r\n    this.bindingNode.update();\r\n  }\r\n\r\n  updateStateValue(value: any) {\r\n    const engine = this.engine;\r\n    const bindingState = this.bindingState;\r\n    engine.updater.addProcess(() => {\r\n      return bindingState.assignValue(value);\r\n    });\r\n  }\r\n}\r\n\r\nexport function createBinding(\r\n  parentBindContent : IBindContent,\r\n  node              : Node, \r\n  engine            : IComponentEngine, \r\n  createBindingNode : CreateBindingNodeByNodeFn, \r\n  createBindingState: CreateBindingStateByStateFn\r\n): IBinding {\r\n  return new Binding(\r\n    parentBindContent, \r\n    node, \r\n    engine, \r\n    createBindingNode, \r\n    createBindingState\r\n  );\r\n}","import { IBindContent } from \"../DataBinding/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { getStructuredPathInfo } from \"../StateProperty/getStructuredPathInfo.js\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { raiseError } from \"../utils.js\";\r\nimport { ILoopContext } from \"./types\";\r\n\r\nclass LoopContext implements ILoopContext {\r\n  #path     : string;\r\n  #info        : IStructuredPathInfo;\r\n  #listIndexRef: WeakRef<IListIndex> | null;\r\n  #bindContent : IBindContent;\r\n  constructor(\r\n    path    : string | null,\r\n    listIndex  : IListIndex,\r\n    bindContent: IBindContent\r\n  ) {\r\n    this.#path = path ?? raiseError(\"name is required\");\r\n    this.#info = getStructuredPathInfo(this.#path);\r\n    this.#listIndexRef = new WeakRef(listIndex);\r\n    this.#bindContent = bindContent;\r\n  }\r\n  get path(): string {\r\n    return this.#path;\r\n  }\r\n  get info(): IStructuredPathInfo {\r\n    return this.#info;\r\n  }\r\n  get listIndex(): IListIndex {\r\n    return this.#listIndexRef?.deref() ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get listIndexRef(): WeakRef<IListIndex> {\r\n    return this.#listIndexRef ?? raiseError(\"listIndexRef is null\");\r\n  }\r\n  assignListIndex(listIndex: IListIndex): void {\r\n    this.#listIndexRef = new WeakRef(listIndex);\r\n    // 構造は変わらないので、#parentLoopContext、#cacheはクリアする必要はない\r\n  }\r\n  clearListIndex():void {\r\n    this.#listIndexRef = null;\r\n  }\r\n  get bindContent(): IBindContent {\r\n    return this.#bindContent;\r\n  }\r\n\r\n  #parentLoopContext: ILoopContext | null | undefined;\r\n  get parentLoopContext(): ILoopContext | null {\r\n    if (typeof this.#parentLoopContext === \"undefined\") {\r\n      let currentBinding: IBindContent | null = this.bindContent;\r\n      while(currentBinding !== null) {\r\n        if (currentBinding.loopContext !== null && currentBinding.loopContext !== this) {\r\n          this.#parentLoopContext = currentBinding.loopContext;\r\n          break;\r\n        }\r\n        currentBinding = currentBinding.parentBinding?.parentBindContent ?? null;\r\n      }\r\n      if (typeof this.#parentLoopContext === \"undefined\") this.#parentLoopContext = null;\r\n    }\r\n    return this.#parentLoopContext;\r\n  }\r\n\r\n  #cache:Record<string, ILoopContext | null> = {};\r\n  find(name: string): ILoopContext | null {\r\n    let loopContext = this.#cache[name];\r\n    if (typeof loopContext === \"undefined\") {\r\n      let currentLoopContext: ILoopContext | null = this;\r\n      while(currentLoopContext !== null) {\r\n        if (currentLoopContext.path === name) break;\r\n        currentLoopContext = currentLoopContext.parentLoopContext;\r\n      }\r\n      loopContext = this.#cache[name] = currentLoopContext;\r\n    }\r\n    return loopContext;\r\n  }\r\n\r\n  walk(callback: (loopContext: ILoopContext) => void): void {\r\n    let currentLoopContext: ILoopContext | null = this;\r\n    while(currentLoopContext !== null) {\r\n      callback(currentLoopContext);\r\n      currentLoopContext = currentLoopContext.parentLoopContext;\r\n    }\r\n  }\r\n\r\n  serialize(): ILoopContext[] {\r\n    const results: ILoopContext[] = [];\r\n    this.walk((loopContext) => {\r\n      results.unshift(loopContext);\r\n    });\r\n    return results;\r\n  }\r\n\r\n}\r\n\r\n// 生成されたあと、IBindContentのloopContextに登録される\r\n// IBindContentにずっと保持される\r\nexport function createLoopContext(\r\n  pattern: string | null,\r\n  listIndex: IListIndex,\r\n  bindContent: IBindContent\r\n): ILoopContext {\r\n  return new LoopContext(pattern, listIndex, bindContent);\r\n}","import { IBinding } from \"../DataBinding/types\";\r\n\r\nexport function render(bindings: IBinding[]) {\r\n  const bindingsWithSelectElement = [];\r\n  for(let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i];\r\n    if (binding.bindingNode.isSelectElement) {\r\n      bindingsWithSelectElement.push(binding);\r\n    } else {\r\n      binding.render();\r\n    }\r\n  }\r\n  for(let i = 0; i < bindingsWithSelectElement.length; i++) {\r\n    bindingsWithSelectElement[i].render();\r\n  }\r\n}\r\n","import { resolveNodeFromPath } from \"../BindingBuilder/resolveNodeFromPath.js\";\r\nimport { ILoopContext } from \"../LoopContext/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { getTemplateById } from \"../Template/registerTemplate.js\";\r\nimport { raiseError } from \"../utils.js\";\r\nimport { createBinding } from \"./Binding.js\";\r\nimport { IBindContent, IBinding } from \"./types\";\r\nimport { createLoopContext } from \"../LoopContext/createLoopContext.js\";\r\nimport { render } from \"../Render/render.js\";\r\nimport { getDataBindAttributesById } from \"../BindingBuilder/registerDataBindAttributes.js\";\r\n\r\nfunction createContent(id: number): DocumentFragment {\r\n  const template = getTemplateById(id) ?? \r\n    raiseError(`BindContent: template is not found: ${id}`);\r\n  return document.importNode(template.content, true);\r\n}\r\n\r\nfunction createBindings(\r\n  bindContent: IBindContent, \r\n  id         : number, \r\n  engine     : IComponentEngine, \r\n  content    : DocumentFragment\r\n): IBinding[] {\r\n  const attributes = getDataBindAttributesById(id) ?? \r\n    raiseError(`BindContent: data-bind is not set`);\r\n  const bindings: IBinding[] = [];\r\n  for(let i = 0; i < attributes.length; i++) {\r\n    const attribute = attributes[i];\r\n    const node = resolveNodeFromPath(content, attribute.nodePath) ?? \r\n      raiseError(`BindContent: node is not found: ${attribute.nodePath}`);\r\n    for(let j = 0; j < attribute.bindTexts.length; j++) {\r\n      const bindText = attribute.bindTexts[j];\r\n      const creator = attribute.creatorByText.get(bindText) ?? \r\n        raiseError(`BindContent: creator is not found: ${bindText}`);\r\n      const binding = createBinding(\r\n        bindContent, \r\n        node, \r\n        engine, \r\n        creator.createBindingNode, \r\n        creator.createBindingState\r\n      );\r\n      bindings.push(binding);\r\n    }\r\n  }\r\n  return bindings;\r\n}\r\n\r\nclass BindContent implements IBindContent {\r\n  loopContext  : ILoopContext | null;\r\n  parentBinding: IBinding | null;\r\n  childNodes   : Node[];\r\n  fragment     : DocumentFragment;\r\n  engine       : IComponentEngine | undefined;\r\n  #id;\r\n  get id() {\r\n    return this.#id;\r\n  }\r\n  get isMounted() {\r\n    return this.childNodes.length > 0 && this.childNodes[0].parentNode !== this.fragment;\r\n  }\r\n  get firstChildNode() {\r\n    return this.childNodes[0] ?? null;\r\n  }\r\n  get lastChildNode() {\r\n    return this.childNodes[this.childNodes.length - 1] ?? null;\r\n  }\r\n  getLastNode(parentNode: Node): Node | null {\r\n    const lastBinding = this.bindings[this.bindings.length - 1];\r\n    const lastChildNode = this.lastChildNode;\r\n    if (lastBinding.node === lastChildNode) {\r\n      if (lastBinding.bindContents.size > 0) {\r\n        const childBindContent = Array.from(lastBinding.bindContents).at(-1) ?? raiseError(`BindContent: childBindContent is not found`);\r\n        const lastNode = childBindContent.getLastNode(parentNode);\r\n        if (lastNode !== null) {\r\n          return lastNode;\r\n        }\r\n      }\r\n    }\r\n    if (parentNode !== lastChildNode?.parentNode) {\r\n      return null;\r\n    }\r\n    return lastChildNode;\r\n  }\r\n  #currentLoopContext: ILoopContext | null | undefined;\r\n  get currentLoopContext(): ILoopContext | null {\r\n    if (typeof this.#currentLoopContext === \"undefined\") {\r\n      let bindContent: IBindContent | null = this;\r\n      while(bindContent !== null) {\r\n        if (bindContent.loopContext !== null) break; ;\r\n        bindContent = bindContent.parentBinding?.parentBindContent ?? null;\r\n      }\r\n      this.#currentLoopContext = bindContent?.loopContext ?? null;\r\n    }\r\n    return this.#currentLoopContext;\r\n  }\r\n  constructor(\r\n    parentBinding: IBinding | null,\r\n    id           : number, \r\n    engine       : IComponentEngine, \r\n    loopContext  : string | null,\r\n    listIndex    : IListIndex | null\r\n  ) {\r\n    this.parentBinding = parentBinding;\r\n    this.#id = id;\r\n    this.fragment = createContent(id);\r\n    this.childNodes = Array.from(this.fragment.childNodes);\r\n    this.engine = engine;\r\n    this.loopContext = (listIndex !== null) ? createLoopContext(loopContext, listIndex, this) : null;\r\n    this.bindings = createBindings(\r\n      this, \r\n      id, \r\n      engine, \r\n      this.fragment\r\n    );\r\n  }\r\n  mount(parentNode: Node) {\r\n    parentNode.appendChild(this.fragment);\r\n  }\r\n  mountBefore(parentNode: Node, beforeNode: Node | null) {\r\n    parentNode.insertBefore(this.fragment, beforeNode);\r\n  }\r\n  mountAfter(parentNode: Node, afterNode: Node | null) {\r\n    parentNode.insertBefore(\r\n      this.fragment, \r\n      afterNode?.nextSibling ?? null\r\n    );\r\n  }\r\n  unmount() {\r\n    for(let i = 0; i < this.childNodes.length; i++) {\r\n      this.fragment.appendChild(this.childNodes[i]);\r\n    }\r\n  }\r\n  bindings: IBinding[] = [];\r\n  render() {\r\n    render(this.bindings);\r\n  }\r\n  init() {\r\n    this.bindings.forEach(binding => binding.init());\r\n  }\r\n  assignListIndex(listIndex: IListIndex): void {\r\n    if (this.loopContext == null) raiseError(`BindContent: loopContext is null`);\r\n    this.loopContext.assignListIndex(listIndex);\r\n    this.init();\r\n  }\r\n}\r\n\r\nexport function createBindContent(\r\n  parentBinding: IBinding | null,\r\n  id           : number, \r\n  engine       :IComponentEngine, \r\n  loopContext  : string | null, \r\n  listIndex    :IListIndex | null\r\n):IBindContent {\r\n  const bindContent = new BindContent(\r\n    parentBinding, \r\n    id, \r\n    engine, \r\n    loopContext, \r\n    listIndex\r\n  );\r\n  bindContent.init();\r\n  return bindContent;\r\n}","import { NodePath } from \"./types\";\r\n\r\nexport function resolveNodeFromPath(root: Node, path: NodePath): Node | null {\r\n  return path.reduce((node, index) => node?.childNodes[index] ?? null, root);\r\n}","import { IListIndex } from \"./types\";\r\n\r\nclass ListIndex implements IListIndex {\r\n  static id: number = 0;\r\n  id              : number = ++ListIndex.id;\r\n  #parentListIndex: IListIndex | null = null;\r\n  get parentListIndex(): IListIndex | null {\r\n    return this.#parentListIndex;\r\n  }\r\n  index: number;\r\n  get indexes(): number[] {\r\n    const indexes = this.parentListIndex?.indexes ?? [];\r\n    indexes.push(this.index);\r\n    return indexes;\r\n  }\r\n\r\n  get position(): number {\r\n    return (this.parentListIndex?.position ?? -1) + 1;\r\n  }\r\n\r\n  constructor(\r\n    parentListIndex: IListIndex | null,\r\n    index: number\r\n  ) {\r\n    this.#parentListIndex = parentListIndex;\r\n    this.index = index;\r\n  }\r\n  \r\n  truncate(length: number): IListIndex | null {\r\n    let listIndex: IListIndex | null = this;\r\n    while(listIndex !== null) {\r\n      if (listIndex.position < length) return listIndex;\r\n      listIndex = listIndex.parentListIndex;\r\n    }\r\n    return null;\r\n  }\r\n  add(value: number): IListIndex {\r\n    return new ListIndex(this, value);\r\n  }\r\n\r\n  *reverseIterator(): Generator<IListIndex> {\r\n    yield this;\r\n    if (this.parentListIndex !== null) {\r\n      yield* this.parentListIndex.reverseIterator();\r\n    }\r\n    return;\r\n  }\r\n\r\n  *iterator(): Generator<IListIndex> {\r\n    if (this.parentListIndex !== null) {\r\n      yield* this.parentListIndex.iterator();\r\n    }\r\n    yield this;\r\n    return;\r\n  }\r\n\r\n  toString(): string {\r\n    const parentListIndex = this.parentListIndex?.toString();\r\n    return (parentListIndex !== null) ? parentListIndex + \",\" + this.index.toString() : this.index.toString();\r\n  }\r\n\r\n  at(position: number): IListIndex | null {\r\n    let iterator;\r\n    if (position >= 0) {\r\n      iterator = this.iterator();\r\n    } else {\r\n      position = - position - 1 \r\n      iterator = this.reverseIterator();\r\n    }\r\n    let next;\r\n    while(position >= 0) {\r\n      next = iterator.next();\r\n      position--;\r\n    }\r\n    return next?.value ?? null;\r\n  }\r\n  \r\n}\r\n\r\nexport function createListIndex(\r\n  parentListIndex: IListIndex | null,\r\n  index          : number\r\n): IListIndex {\r\n  return new ListIndex(parentListIndex, index);\r\n}\r\n\r\nexport function getMaxListIndexId(): number {\r\n  return ListIndex.id;\r\n}\r\n","import { getMaxListIndexId } from \"../ListIndex/createListIndex.js\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\n\r\n/**\r\n * 参照用のIDを生成する\r\n * ListIndexのIDは最大値を取得してから計算するため、ListIndexの構築が完了していない場合、重複が発生する可能性がある\r\n */\r\n/**\r\n * ToDo:ListIndexの構築が完了していない状態で、IDを取得すると例外を発生させる仕組みが必要\r\n */\r\nexport function getStatePropertyRefId(info: IStructuredPathInfo, listIndex: IListIndex | null): number {\r\n  const listIndexMaxId = getMaxListIndexId();\r\n  return info.id * (listIndexMaxId + 1) + (listIndex?.id ?? 0);\r\n}","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { getStatePropertyRefId } from \"../../StatePropertyRef/getStatePropertyRefId.js\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { setTracking } from \"./setTracking.js\";\r\n\r\nfunction _getByRef(\r\n  target   : Object, \r\n  info     : IStructuredPathInfo,\r\n  listIndex: IListIndex | null,\r\n  receiver : IStateProxy,\r\n  handler  : IStateHandler\r\n): any {\r\n  if (handler.lastTrackingStack != null && handler.lastTrackingStack !== info) {\r\n    const lastPattern = handler.lastTrackingStack;\r\n    if (lastPattern.parentInfo !== info) {\r\n      handler.engine.addDependentProp(lastPattern, info);\r\n    }\r\n  }\r\n\r\n  let refId = 0;\r\n  if (handler.cacheable) {\r\n    refId = getStatePropertyRefId(info, listIndex);\r\n    const value = handler.cache[refId];\r\n    if (typeof value !== \"undefined\") {\r\n      return value;\r\n    }\r\n    if (refId in handler.cache) {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  let value;\r\n  try {\r\n    if (info.pattern in target) {\r\n      return (value = handler.engine.setStatePropertyRef(info, listIndex, () => {\r\n        return Reflect.get(target, info.pattern, receiver);\r\n      }));\r\n    } else {\r\n      const parentInfo = info.parentInfo ?? raiseError(`propRef.stateProp.parentInfo is undefined`);\r\n      const parentListIndex = parentInfo.wildcardCount < info.wildcardCount ? (listIndex?.parentListIndex ?? null) : listIndex;\r\n      const parentValue = getByRef(target, parentInfo, parentListIndex, receiver, handler);\r\n      const lastSegment = info.lastSegment;\r\n      if (lastSegment === \"*\") {\r\n        const index = listIndex?.index ?? raiseError(`propRef.listIndex?.index is undefined`);\r\n        return (value = Reflect.get(parentValue, index));\r\n      } else {\r\n        return (value = Reflect.get(parentValue, lastSegment));\r\n      }\r\n    }\r\n  } finally {\r\n    if (handler.cacheable && !(refId in handler.cache)) {\r\n      handler.cache[refId] = value;\r\n    }\r\n  }\r\n}\r\n\r\nexport function getByRef(\r\n    target   : Object, \r\n    info     : IStructuredPathInfo,\r\n    listIndex: IListIndex | null,\r\n    receiver : IStateProxy,\r\n    handler  : IStateHandler\r\n  ): any {\r\n    if (handler.engine.trackedGetters.has(info.pattern)) {\r\n      return setTracking(info, handler, () => {\r\n        return _getByRef(target, info, listIndex, receiver, handler);\r\n      });\r\n    } else {\r\n      return _getByRef(target, info, listIndex, receiver, handler);\r\n    }\r\n\r\n  }\r\n","import { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { IStateHandler } from \"../types\";\r\n\r\nexport function setTracking(info: IStructuredPathInfo, handler: IStateHandler, callback: () => any): any {\r\n  handler.trackingStack.push(info);\r\n  handler.lastTrackingStack = info;\r\n  try {\r\n    return callback();\r\n  } finally {\r\n    handler.trackingStack.pop();\r\n    handler.lastTrackingStack = handler.trackingStack[handler.trackingStack.length - 1] ?? null;\r\n  }\r\n}\r\n","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { getByRef as methodGetByRef } from \"../methods/getByRef.js\";\r\n\r\nexport function getByRef(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return (pattern: IStructuredPathInfo, listIndex: IListIndex | null) => \r\n    methodGetByRef(target, pattern, listIndex, receiver, handler);\r\n} \r\n","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { getByRef } from \"./getByRef.js\";\r\n\r\nexport function setByRef(\r\n    target   : Object, \r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    value    : any, \r\n    receiver : IStateProxy,\r\n    handler  : IStateHandler\r\n): any {\r\n  try {\r\n    if (info.pattern in target) {\r\n      if (info.wildcardCount > 0) {\r\n        if (listIndex === null) {\r\n          raiseError(`propRef.listIndex is null`);\r\n        }\r\n        return handler.engine.setStatePropertyRef(info, listIndex, () => {\r\n          return Reflect.set(target, info.pattern, value, receiver);\r\n        });\r\n      } else {\r\n        return Reflect.set(target, info.pattern, value, receiver);\r\n      }\r\n    } else {\r\n      const parentInfo = info.parentInfo ?? raiseError(`propRef.stateProp.parentInfo is undefined`);\r\n      const parentListIndex = parentInfo.wildcardCount < info.wildcardCount ? (listIndex?.parentListIndex ?? null) : listIndex;\r\n      const parentValue = getByRef(target, parentInfo, parentListIndex, receiver, handler);\r\n      const lastSegment = info.lastSegment;\r\n      if (lastSegment === \"*\") {\r\n        const index = listIndex?.index ?? raiseError(`propRef.listIndex?.index is undefined`);\r\n        return Reflect.set(parentValue, index, value);\r\n      } else {\r\n        return Reflect.set(parentValue, lastSegment, value);\r\n      }\r\n    }\r\n  } finally {\r\n    handler.engine.updater.addUpdatedStatePropertyRefValue(info, listIndex, value);\r\n  }\r\n}\r\n","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { setByRef as methodSetByRef } from \"../methods/setByRef.js\";\r\n\r\nexport function setByRef(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return (pattern: IStructuredPathInfo, listIndex: IListIndex | null, value: any) => \r\n    methodSetByRef(target, pattern, listIndex, value, receiver, handler);\r\n}","import { IStateHandler, IStateProxy } from \"../types\";\r\nimport { setCacheable as methodSetChargeable } from \"../methods/setCacheable.js\";\r\n\r\nexport function setCacheable(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return async (callback: () => Promise<void>) => {\r\n    await methodSetChargeable(handler, callback);\r\n  }\r\n}","import { IStateHandler } from \"../types\";\r\n\r\nexport async function setCacheable(handler: IStateHandler, callback: () => Promise<void>): Promise<void> {\r\n  handler.cacheable = true;\r\n  handler.cache = {}\r\n  try {\r\n    await callback();\r\n  } finally {\r\n    handler.cacheable = false;\r\n  }\r\n}\r\n","import { IStateHandler, IStateProxy } from \"../types\";\r\n\r\nconst CONNECTED_CALLBACK = \"$connectedCallback\";\r\n\r\nexport function connectedCallback(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return async () => {\r\n    const callback = Reflect.get(target, CONNECTED_CALLBACK);\r\n    if (typeof callback === \"function\") {\r\n      await callback.call(target, receiver);\r\n    }\r\n  };\r\n}","import { IStateHandler, IStateProxy } from \"../types\";\r\n\r\nconst DISCONNECTED_CALLBACK = \"$disconnectedCallback\";\r\n\r\nexport function disconnectedCallback(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return async () => {\r\n    const callback = Reflect.get(target, DISCONNECTED_CALLBACK);\r\n    if (typeof callback === \"function\") {\r\n      await callback.call(target, receiver);\r\n    }\r\n  };\r\n}","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { getStructuredPathInfo } from \"../../StateProperty/getStructuredPathInfo.js\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { getByRef } from \"../methods/getByRef.js\";\r\nimport { setByRef } from \"../methods/setByRef.js\";\r\n\r\nexport function resolve(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return (path: string, indexes: number[], value?:any): any => {\r\n    const info = getStructuredPathInfo(path);\r\n    let listIndex: IListIndex | null = null;\r\n    for(let i = 0; i < info.wildcardParentInfos.length; i++) {\r\n      const wildcardParentPattern = info.wildcardParentInfos[i] ?? raiseError(`wildcardParentPath is null`);\r\n      const listIndexes: IListIndex[] = Array.from(handler.engine.getListIndexesSet(wildcardParentPattern, listIndex) ?? []);\r\n      const index = indexes[i] ?? raiseError(`index is null`);\r\n      listIndex = listIndexes[index] ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n    }\r\n    if (typeof value === \"undefined\") {\r\n      return getByRef(target, info, listIndex, receiver, handler);\r\n    } else {\r\n      return setByRef(target, info, listIndex, value, receiver, handler);\r\n    }\r\n  };\r\n} ","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { getStructuredPathInfo } from \"../../StateProperty/getStructuredPathInfo.js\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { resolve as _resolve } from \"./resolve.js\";\r\n\r\nexport function getAll(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n    const resolve = _resolve(target, prop, receiver, handler);\r\n    return (path: string, indexes?: number[]): any[] => {\r\n      const info = getStructuredPathInfo(path);\r\n      if (handler.lastTrackingStack != null && handler.lastTrackingStack !== info) {\r\n        const lastPattern = handler.lastTrackingStack;\r\n        if (lastPattern.parentInfo !== info) {\r\n          handler.engine.addDependentProp(lastPattern, info);\r\n        }\r\n      }\r\n  \r\n      if (typeof indexes === \"undefined\") {\r\n        for(let i = 0; i < info.wildcardInfos.length; i++) {\r\n          const wildcardPattern = info.wildcardInfos[i] ?? raiseError(`wildcardPattern is null`);\r\n          const listIndex = handler.engine.getContextListIndex(wildcardPattern.pattern);\r\n          if (listIndex) {\r\n            indexes = listIndex.indexes;\r\n            break;\r\n          }\r\n        }\r\n        if (typeof indexes === \"undefined\") {\r\n          indexes = [];\r\n        }\r\n      }\r\n      const walkWildcardPattern = (\r\n        wildcardParentInfos: IStructuredPathInfo[],\r\n        wildardIndexPos: number,\r\n        listIndex: IListIndex | null,\r\n        indexes: number[],\r\n        indexPos: number,\r\n        parentIndexes: number[],\r\n        results: number[][]\r\n      ) => {\r\n        const wildcardParentPattern = wildcardParentInfos[wildardIndexPos] ?? null;\r\n        if (wildcardParentPattern === null) {\r\n          results.push(parentIndexes);\r\n          return;\r\n        }\r\n        const listIndexSet = handler.engine.getListIndexesSet(wildcardParentPattern, listIndex) ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n        const listIndexes = Array.from(listIndexSet);\r\n        const index = indexes[indexPos] ?? null;\r\n        if (index === null) {\r\n          for(let i = 0; i < listIndexes.length; i++) {\r\n            const listIndex = listIndexes[i];\r\n            walkWildcardPattern(\r\n              wildcardParentInfos, \r\n              wildardIndexPos + 1, \r\n              listIndex, \r\n              indexes, \r\n              indexPos + 1, \r\n              parentIndexes.concat(listIndex.index),\r\n              results);\r\n          }\r\n        } else {\r\n          const listIndex = listIndexes[index] ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n          if ((wildardIndexPos + 1) < wildcardParentInfos.length) {\r\n            walkWildcardPattern(\r\n              wildcardParentInfos, \r\n              wildardIndexPos + 1, \r\n              listIndex, \r\n              indexes, \r\n              indexPos + 1, \r\n              parentIndexes.concat(listIndex.index),\r\n              results\r\n            );\r\n          }\r\n        }\r\n      }\r\n      const resultIndexes: number[][] = [];\r\n      walkWildcardPattern(\r\n        info.wildcardParentInfos, \r\n        0, \r\n        null, \r\n        indexes, \r\n        0, \r\n        [], \r\n        resultIndexes\r\n      );\r\n      const resultValues: any[] = [];\r\n      for(let i = 0; i < resultIndexes.length; i++) {\r\n        resultValues.push(resolve(\r\n          info.pattern,\r\n          resultIndexes[i]\r\n        ));\r\n      }\r\n      return resultValues;\r\n    }\r\n  }","\r\nimport { IResolvedPathInfo, WildcardType } from './types';\r\nimport { getStructuredPathInfo } from './getStructuredPathInfo.js';\r\n\r\n/**\r\n * プロパティ名に\"constructor\"や\"toString\"などの予約語やオブジェクトのプロパティ名を\r\n * 上書きするような名前も指定できるように、Mapを検討したが、そもそもそのような名前を\r\n * 指定することはないと考え、Mapを使わないことにした。\r\n */\r\nconst _cache: { [key:string]: IResolvedPathInfo } = {};\r\n//const _cache: Map<string, IResolvedPathInfo> = new Map();\r\n\r\nclass ResolvedPathInfo implements IResolvedPathInfo {\r\n  static id = 0;\r\n  id = ++ResolvedPathInfo.id;\r\n  name;\r\n  elements;\r\n  paths;\r\n  wildcardCount;\r\n  wildcardType;\r\n  wildcardIndexes;\r\n  info;\r\n  constructor(name: string) {\r\n    const elements = name.split(\".\");\r\n    const tmpPatternElements = elements.slice();\r\n    const paths = [];\r\n    let incompleteCount = 0;\r\n    let completeCount = 0;\r\n    let lastPath = \"\";\r\n    let wildcardCount = 0;\r\n    let wildcardType: WildcardType = \"none\";\r\n    let wildcardIndexes: (number | null)[] = [];\r\n    for(let i = 0; i < elements.length; i++) {\r\n      const element = elements[i];\r\n      if (element === \"*\") {\r\n        tmpPatternElements[i] = \"*\";\r\n        wildcardIndexes.push(null);\r\n        incompleteCount++;\r\n        wildcardCount++;\r\n      } else {\r\n        const number = Number(element);\r\n        if (!Number.isNaN(number)) {\r\n          tmpPatternElements[i] = \"*\";\r\n          wildcardIndexes.push(number);\r\n          completeCount++;\r\n          wildcardCount++;\r\n        }\r\n      }\r\n      lastPath += element;\r\n      paths.push(lastPath);\r\n      lastPath += (i < elements.length - 1 ? \".\" : \"\");\r\n    }\r\n    const pattern = tmpPatternElements.join(\".\");\r\n    const info = getStructuredPathInfo(pattern);\r\n    if (incompleteCount > 0 || completeCount > 0) {\r\n      if (incompleteCount === wildcardCount) {\r\n        wildcardType = \"context\";\r\n      } else if (completeCount === wildcardCount) {\r\n        wildcardType = \"all\";\r\n      } else {\r\n        wildcardType = \"partial\";\r\n      }\r\n    }\r\n    this.name = name;\r\n    this.elements = elements;\r\n    this.paths = paths;\r\n    this.wildcardCount = wildcardCount;\r\n    this.wildcardType = wildcardType;\r\n    this.wildcardIndexes = wildcardIndexes;\r\n    this.info = info;\r\n  }\r\n}\r\n\r\nexport function getResolvedPathInfo(name:string):IResolvedPathInfo {\r\n  let nameInfo: IResolvedPathInfo | undefined;\r\n//  return _cache.get(name) ?? (_cache.set(name, nameInfo = new ResolvedPathInfo(name)), nameInfo);\r\n  return _cache[name] ?? (_cache[name] = new ResolvedPathInfo(name));\r\n}","import { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IResolvedPathInfo } from \"../StateProperty/types\";\r\nimport { raiseError } from \"../utils.js\";\r\n\r\nexport function getListIndex(\r\n  info: IResolvedPathInfo, \r\n  engine: IComponentEngine\r\n): IListIndex | null {\r\n  if (info.info.wildcardCount === 0) {\r\n    return null;\r\n  }\r\n  let listIndex: IListIndex | null = null;\r\n  const lastWildcardPath = info.info.lastWildcardPath ?? \r\n    raiseError(`lastWildcardPath is null`);\r\n  if (info.wildcardType === \"context\") {\r\n    listIndex = engine.getContextListIndex(lastWildcardPath) ?? \r\n      raiseError(`ListIndex not found: ${info.info.pattern}`);\r\n  } else if (info.wildcardType === \"all\") {\r\n    let parentListIndex = null;\r\n    for(let i = 0; i < info.info.wildcardCount; i++) {\r\n      const wildcardParentPattern = info.info.wildcardParentInfos[i] ?? raiseError(`wildcardParentPattern is null`);\r\n      const listIndexes: IListIndex[] = Array.from(engine.getListIndexesSet(wildcardParentPattern, parentListIndex) ?? []);\r\n      const wildcardIndex = info.wildcardIndexes[i] ?? raiseError(`wildcardIndex is null`);\r\n      parentListIndex = listIndexes[wildcardIndex] ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n    }\r\n    listIndex = parentListIndex;\r\n  } else if (info.wildcardType === \"partial\") {\r\n    // ToDo:listIndexを取得する必要がある\r\n  } else if (info.wildcardType === \"none\") {\r\n  }\r\n  return listIndex;\r\n}\r\n","import { getRouter } from \"../../Router/Router.js\";\r\nimport { getResolvedPathInfo } from \"../../StateProperty/getResolvedPathInfo.js\";\r\nimport { raiseError } from \"../../utils.js\";\r\nimport { getAll } from \"../apis/getAll.js\";\r\nimport { resolve } from \"../apis/resolve.js\";\r\nimport { getListIndex } from \"../getListIndex.js\";\r\nimport { getByRef } from \"../methods/getByRef.js\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\n\r\nconst matchIndexPropertyName = new RegExp(/^\\$(\\d+)$/);\r\n\r\nexport function get(\r\n  target  : Object, \r\n  prop    : PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler  : IStateHandler\r\n): any {\r\n  let value;\r\n  if (typeof prop === \"string\") {\r\n    if (matchIndexPropertyName.test(prop)) {\r\n      const number = prop.slice(1);\r\n      const index = Number(number);\r\n      const ref = handler.engine.getLastStatePropertyRef() ?? \r\n        raiseError(`get: this.engine.getLastStatePropertyRef() is null`);\r\n      return ref.listIndex?.at(index - 1)?.index ?? raiseError(`ListIndex not found: ${prop}`);\r\n    } else if (prop === \"$resolve\") {\r\n      return resolve(target, prop, receiver, handler);\r\n    } else if (prop === \"$getAll\") {\r\n      return getAll(target, prop, receiver, handler);\r\n    } else if (prop === \"$router\") {\r\n      return getRouter();\r\n    } else {\r\n      const resolvedInfo = getResolvedPathInfo(prop);\r\n      const listIndex = getListIndex(resolvedInfo, handler.engine);\r\n      value = getByRef(\r\n        target, \r\n        resolvedInfo.info, \r\n        listIndex, \r\n        receiver,\r\n        handler\r\n      );\r\n    }\r\n  } else if (typeof prop === \"symbol\") {\r\n    if (prop in handler.callableApi) {\r\n      return handler.callableApi[prop](target, prop, receiver, handler);\r\n    }\r\n    value = Reflect.get(\r\n      target, \r\n      prop, \r\n      receiver\r\n    );\r\n  }\r\n  return value;\r\n}\r\n","import { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { ConnectedCallbackSymbol, DisconnectedCallbackSymbol, GetAllSymbol, GetByRefSymbol, ResolveSymbol, SetByRefSymbol, SetCacheableSymbol } from \"./symbols.js\";\r\nimport { IState, IStateHandler, IStateProxy } from \"./types\";\r\nimport { getByRef as apiGetByRef } from \"./apis/getByRef.js\";\r\nimport { setByRef as apiSetByRef } from \"./apis/setByRef.js\";\r\nimport { setCacheable as apiSetCacheable } from \"./apis/setCacheable.js\";\r\nimport { connectedCallback } from \"./apis/connectedCallback.js\";\r\nimport { disconnectedCallback } from \"./apis/disconnectedCallback.js\";\r\nimport { resolve } from \"./apis/resolve.js\";\r\nimport { getAll } from \"./apis/getAll.js\";\r\nimport { get as trapGet } from \"./traps/get.js\";\r\nimport { set as trapSet } from \"./traps/set.js\";\r\n\r\nclass StateHandler implements IStateHandler {\r\n  engine   : IComponentEngine;\r\n  cacheable: boolean = false;\r\n  cache    : {[key:number]:any} = {};\r\n  lastTrackingStack: IStructuredPathInfo | null = null;\r\n  trackingStack: IStructuredPathInfo[] = [];\r\n  \r\n  constructor(engine: IComponentEngine) {\r\n    this.engine = engine;\r\n  }\r\n\r\n  callableApi: { [key:symbol]: Function } = {\r\n    [GetByRefSymbol]: apiGetByRef, \r\n    [SetByRefSymbol]: apiSetByRef, \r\n    [SetCacheableSymbol]: apiSetCacheable, \r\n    [ConnectedCallbackSymbol]: connectedCallback, \r\n    [DisconnectedCallbackSymbol]: disconnectedCallback, \r\n    [ResolveSymbol]: resolve, \r\n    [GetAllSymbol]: getAll,\r\n  };\r\n\r\n  get(\r\n    target  : Object, \r\n    prop    : PropertyKey, \r\n    receiver: IStateProxy\r\n  ): any {\r\n    return trapGet(target, prop, receiver, this);\r\n  }\r\n\r\n  set(\r\n    target  : Object, \r\n    prop    : PropertyKey, \r\n    value   : any, \r\n    receiver: IStateProxy\r\n  ): boolean {\r\n    return trapSet(target, prop, value, receiver, this);\r\n  }\r\n}\r\n\r\nexport function createStateProxy(\r\n  engine: IComponentEngine, \r\n  state: Object\r\n): IStateProxy {\r\n  return new Proxy<IState>(state, new StateHandler(engine)) as IStateProxy;\r\n}\r\n\r\n","import { getResolvedPathInfo } from \"../../StateProperty/getResolvedPathInfo.js\";\r\nimport { getListIndex } from \"../getListIndex.js\";\r\nimport { setByRef } from \"../methods/setByRef.js\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\n\r\nexport function set(\r\n  target  : Object, \r\n  prop    : PropertyKey, \r\n  value   : any, \r\n  receiver: IStateProxy,\r\n  handler : IStateHandler\r\n): boolean {\r\n  if (typeof prop === \"string\") {\r\n    const resolvedInfo = getResolvedPathInfo(prop);\r\n    const listIndex = getListIndex(resolvedInfo, handler.engine);\r\n    return setByRef(\r\n      target, \r\n      resolvedInfo.info, \r\n      listIndex, \r\n      value, \r\n      receiver,\r\n      handler\r\n    );\r\n  } else {\r\n    return Reflect.set(\r\n      target, \r\n      prop, \r\n      value, \r\n      receiver\r\n    );\r\n  }\r\n}\r\n","import { createListIndex } from \"../ListIndex/createListIndex.js\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { GetByRefSymbol } from \"./symbols.js\";\r\n\r\nconst BLANK_LISTINDEXES_SET = new Set<IListIndex>();\r\n\r\nfunction buildListIndexTreeSub(\r\n  engine   : IComponentEngine, \r\n  listInfos: Set<IStructuredPathInfo>,\r\n  info     : IStructuredPathInfo,\r\n  listIndex: IListIndex | null, \r\n  value: any[]\r\n): void {\r\n  const oldValue = engine.getList(info, listIndex) ?? [];\r\n  if (oldValue === value) {\r\n    return;\r\n  }\r\n  const oldListIndexesSet = engine.getListIndexesSet(info, listIndex) ?? BLANK_LISTINDEXES_SET;\r\n  const oldListIndexesByItem = Map.groupBy(oldListIndexesSet, listIndex => oldValue[listIndex.index]);\r\n  const newListIndexesSet:Set<IListIndex> = new Set();\r\n  for(let i = 0; i < value.length; i++) {\r\n    const item = value[i];\r\n    const oldListIndexes = oldListIndexesByItem.get(item);\r\n    let curListIndex = oldListIndexes?.shift();\r\n    if (!curListIndex) {\r\n      curListIndex = createListIndex(listIndex, i);\r\n    } else {\r\n      if (curListIndex.index !== i) {\r\n        curListIndex.index = i;\r\n        engine.updater.addUpdatedListIndex(curListIndex);\r\n      }\r\n    }\r\n    newListIndexesSet.add(curListIndex);\r\n  }\r\n  engine.saveListIndexesSet(info, listIndex, newListIndexesSet);\r\n  engine.saveList(info, listIndex, value.slice(0));\r\n\r\n  const searchPath = info.pattern + \".*\";\r\n  for(const info of listInfos) {\r\n    if (searchPath !== info.lastWildcardPath) {\r\n      continue;\r\n    }\r\n    for(const subListIndex of newListIndexesSet) {\r\n      const subValue = engine.stateProxy[GetByRefSymbol](info, subListIndex);\r\n      buildListIndexTreeSub(\r\n        engine, \r\n        listInfos, \r\n        info, \r\n        subListIndex, \r\n        subValue ?? []\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function buildListIndexTree(\r\n  engine   : IComponentEngine, \r\n  info     : IStructuredPathInfo,\r\n  listIndex: IListIndex | null, \r\n  value    : any\r\n): void {\r\n  const listInfos = engine.listInfoSet;\r\n  // 配列じゃなければ何もしない\r\n  if (!engine.listInfoSet.has(info)) {\r\n    return;\r\n  }\r\n  const values = (value ?? []) as any[];\r\n  buildListIndexTreeSub(\r\n    engine, \r\n    engine.listInfoSet, \r\n    info, \r\n    listIndex, \r\n    values\r\n  );\r\n}\r\n","import { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\n\r\nfunction extractListIndexes(\r\n  info: IStructuredPathInfo,\r\n  listIndex: IListIndex | null,\r\n  engine: IComponentEngine,\r\n): IListIndex[] {\r\n  const wildcardParentInfos: IStructuredPathInfo[] = info.wildcardParentInfos ?? [];\r\n  const _extractListIndexes = (pos:number, currentListIndex: IListIndex | null, resultListIndexes: IListIndex[]) => {\r\n    const wildcardParentInfo = wildcardParentInfos[pos];\r\n    if (!wildcardParentInfo) {\r\n      if (currentListIndex) {\r\n        resultListIndexes.push(currentListIndex);\r\n      }\r\n      return;\r\n    }\r\n    const subListIndex = listIndex?.at(pos) ?? null;\r\n    if (subListIndex) {\r\n      _extractListIndexes(pos + 1, subListIndex, resultListIndexes);\r\n    } else {\r\n      const listIndexes = engine.getListIndexesSet(wildcardParentInfo, currentListIndex);\r\n      for(const loopListIndex of listIndexes ?? []) {\r\n        _extractListIndexes(pos + 1, loopListIndex, resultListIndexes);\r\n      }\r\n    }\r\n  }\r\n  const resultListIndexes: IListIndex[] = [];\r\n  _extractListIndexes(0, listIndex, resultListIndexes);\r\n  return resultListIndexes;\r\n}\r\n\r\nfunction _collectAffectedGetters(\r\n  refInfo        : IStructuredPathInfo,\r\n  refListIndex   : IListIndex | null,\r\n  engine         : IComponentEngine,\r\n  resultPathInfos: Set<IStructuredPathInfo>,\r\n  resultRefs     : {info:IStructuredPathInfo, listIndex:IListIndex | null}[],\r\n) {\r\n//  if (engine.listInfoSet.has(refInfo)) return;\r\n  if (resultPathInfos.has(refInfo)) return;\r\n  const dependentPathInfos = engine.dependentTree.get(refInfo);\r\n  for(const dependentPathInfo of dependentPathInfos ?? []) {\r\n    if (engine.listInfoSet.has(refInfo) && dependentPathInfo.parentInfo === refInfo && dependentPathInfo.lastSegment === \"*\") {\r\n      continue;\r\n    }\r\n    let dependentListIndex = null;\r\n    let updateList = false;\r\n    for(let i = dependentPathInfo.wildcardParentInfos.length - 1; i >= 0; i--) {\r\n      const wildcardParentInfo = dependentPathInfo.wildcardParentInfos[i];\r\n      if (resultPathInfos.has(wildcardParentInfo)) {\r\n        updateList = true;\r\n        break;\r\n      }\r\n      const pos = refInfo.wildcardParentInfos.indexOf(wildcardParentInfo);\r\n      if (pos < 0) continue;\r\n      dependentListIndex = refListIndex?.at(pos) ?? null;\r\n      if (dependentListIndex !== null) break;\r\n    }\r\n    if (updateList) {\r\n      continue;\r\n    }\r\n    if (dependentPathInfo.wildcardParentInfos.length > 0) {\r\n      const extractlistIndexes = extractListIndexes(dependentPathInfo, dependentListIndex, engine);\r\n      for(const listIndex of extractlistIndexes) {\r\n        resultRefs.push({info: dependentPathInfo, listIndex});\r\n        _collectAffectedGetters(dependentPathInfo, listIndex, engine, resultPathInfos, resultRefs);\r\n      }\r\n    } else {\r\n      resultRefs.push({info: dependentPathInfo, listIndex: null});\r\n      _collectAffectedGetters(dependentPathInfo, null, engine, resultPathInfos, resultRefs);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport function collectAffectedGetters(\r\n  updateRefs: {info:IStructuredPathInfo, listIndex:IListIndex | null}[],\r\n  engine: IComponentEngine,\r\n): {info:IStructuredPathInfo, listIndex:IListIndex | null}[] {\r\n  const resultPathInfos = new Set<IStructuredPathInfo>();\r\n  const resultRefs: {info:IStructuredPathInfo, listIndex:IListIndex | null}[] = [];\r\n  for(const ref of updateRefs) {\r\n    const info = ref.info;\r\n    const listIndex = ref.listIndex;\r\n    if (resultPathInfos.has(info)) continue;\r\n    _collectAffectedGetters(info, listIndex, engine, resultPathInfos, resultRefs);\r\n    resultPathInfos.add(info);\r\n  }\r\n  return resultRefs;\r\n\r\n}\r\n\r\n","import { IBinding } from \"../DataBinding/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { render } from \"../Render/render.js\";\r\nimport { buildListIndexTree } from \"../StateClass/buildListIndexTree.js\";\r\nimport { SetCacheableSymbol } from \"../StateClass/symbols.js\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { getStatePropertyRefId } from \"../StatePropertyRef/getStatePropertyRefId.js\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { raiseError } from \"../utils.js\";\r\nimport { getGlobalConfig } from \"../WebComponents/getGlobalConfig.js\";\r\nimport { IUpdater } from \"./types\";\r\nimport { collectAffectedGetters } from \"./collectAffectedGetters.js\";\r\n\r\ntype UpdatedArrayElementBinding = {\r\n  parentRef: {info: IStructuredPathInfo, listIndex: IListIndex | null};\r\n  binding: IBinding;\r\n  listIndexes: IListIndex[];\r\n  values: any[];\r\n};\r\n\r\nclass Updater implements IUpdater {\r\n  processList      : (() => Promise<void> | void)[] = [];\r\n  updatedProperties: Set<{info:IStructuredPathInfo, listIndex:IListIndex | null} | IListIndex> = \r\n    new Set<{info:IStructuredPathInfo, listIndex:IListIndex | null} | IListIndex>();\r\n  updatedValues    : {[key:number]: any} = {};\r\n  engine           : IComponentEngine;\r\n\r\n  constructor(engine: IComponentEngine) {\r\n    this.engine = engine;\r\n  }\r\n\r\n  addProcess(process: () => Promise<void> | void): void {\r\n    this.processList.push(process);\r\n    this.waitForQueueEntry.resolve();\r\n  }\r\n\r\n  addUpdatedStatePropertyRefValue(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    value    : any\r\n  ): void {\r\n    const refId = getStatePropertyRefId(info, listIndex);\r\n    this.updatedProperties.add({info, listIndex});\r\n    this.updatedValues[refId] = value;\r\n    this.waitForQueueEntry.resolve();\r\n  }\r\n\r\n  addUpdatedListIndex(listIndex: IListIndex): void {\r\n    this.updatedProperties.add(listIndex);\r\n    this.waitForQueueEntry.resolve();\r\n  }\r\n\r\n  terminate(): PromiseWithResolvers<void> {\r\n    const waitForMainLoopTerminate = Promise.withResolvers<void>();\r\n    this.waitForQueueEntry.resolve(waitForMainLoopTerminate);\r\n    return waitForMainLoopTerminate;\r\n  }\r\n\r\n  waitForQueueEntry: PromiseWithResolvers<PromiseWithResolvers<void> | void> = \r\n    Promise.withResolvers<PromiseWithResolvers<void> | void>();\r\n  async main(waitForComponentInit: PromiseWithResolvers<void>) {\r\n    await waitForComponentInit.promise;\r\n    const config = getGlobalConfig();\r\n    while (true) {\r\n      try {\r\n        const waitForMainLoopTerminate: (PromiseWithResolvers<void> | void) = \r\n          await this.waitForQueueEntry.promise;\r\n          config.debug && performance.mark(`start`);\r\n        Updater.updatingCount++;\r\n        try {\r\n          await this.exec();\r\n          if (config.debug) {\r\n            performance.mark(`end`);\r\n            performance.measure(`exec`, `start`, `end`);\r\n            console.log(performance.getEntriesByType(\"measure\"));    \r\n            performance.clearMeasures(`exec`);\r\n            performance.clearMarks(`start`);\r\n            performance.clearMarks(`end`);\r\n          }\r\n        } finally {\r\n          Updater.updatingCount--;\r\n          if (waitForMainLoopTerminate) {\r\n            waitForMainLoopTerminate.resolve();\r\n            break;\r\n          }\r\n        }\r\n      } catch(e) {\r\n        console.error(e);\r\n      } finally {\r\n        this.waitForQueueEntry = Promise.withResolvers<PromiseWithResolvers<void> | void>();\r\n      }\r\n    }\r\n  }\r\n\r\n  async updateState() {\r\n    while(this.processList.length > 0) {\r\n      const processList = this.processList;\r\n      this.processList = [];\r\n      for(let i = 0; i < processList.length; i++) {\r\n        const process = processList[i];\r\n        await process();\r\n      }\r\n    }\r\n  }\r\n\r\n  async rebuild(): Promise<{bindings: IBinding[], arrayElementBindings: UpdatedArrayElementBinding[]}> {\r\n    const retArrayElementBindings: UpdatedArrayElementBinding[] = [];\r\n    const retBindings: IBinding[] = [];\r\n    const engine = this.engine;\r\n    const processedListIndexes = new Set<IListIndex>();\r\n    const processedPropertyRefIdsSet = new Set<number>();\r\n    while(this.updatedProperties.size > 0) {\r\n      const updatedProiperties = Array.from(this.updatedProperties.values());\r\n\r\n      const updatedRefs = []; // 更新されたプロパティ参照のリスト\r\n      const arrayPropertyRefs = [];\r\n      const arrayElementPropertyRefs = [];\r\n      this.updatedProperties.clear();\r\n      for(let i = 0; i < updatedProiperties.length; i++) {\r\n        const item = updatedProiperties[i];\r\n        let bindings;\r\n        if (\"index\" in item) {\r\n          if (processedListIndexes.has(item)) continue;\r\n          const listIndex = item as IListIndex;\r\n          bindings = engine.bindingsByListIndex.get(listIndex);\r\n          processedListIndexes.add(listIndex);\r\n        } else {\r\n          const statePropertyRefId = getStatePropertyRefId(item.info, item.listIndex);\r\n          if (processedPropertyRefIdsSet.has(statePropertyRefId)) continue;\r\n          const statePropertyRef = item as {info:IStructuredPathInfo, listIndex:IListIndex | null};\r\n          if (engine.listInfoSet.has(statePropertyRef.info)) {\r\n            arrayPropertyRefs.push(statePropertyRef);\r\n          }\r\n          if (engine.elementInfoSet.has(statePropertyRef.info)) {\r\n            arrayElementPropertyRefs.push(statePropertyRef);\r\n          }\r\n          bindings = engine.getBindings(item.info, item.listIndex);\r\n          processedPropertyRefIdsSet.add(statePropertyRefId);\r\n          updatedRefs.push(statePropertyRef);\r\n        }\r\n        retBindings.push(...bindings ?? []);\r\n      }\r\n\r\n      // リストインデックスの構築\r\n      const builtStatePropertyRefIds = new Set<number>();\r\n      for(let i = 0; i < arrayPropertyRefs.length; i++) {\r\n        const arrayPropertyRef = arrayPropertyRefs[i];\r\n        const statePropertyRefId = getStatePropertyRefId(arrayPropertyRef.info, arrayPropertyRef.listIndex);\r\n        const value = this.updatedValues[statePropertyRefId] ?? null;\r\n        buildListIndexTree(engine, arrayPropertyRef.info, arrayPropertyRef.listIndex, value);\r\n        builtStatePropertyRefIds.add(statePropertyRefId);\r\n      }\r\n\r\n      const parentRefByRefId: {[parentRefId: number]: {info: IStructuredPathInfo, listIndex: IListIndex | null }} = {};\r\n      const statePropertyRefByStatePropertyRefId = Object.groupBy(arrayElementPropertyRefs, ref => {\r\n        if (ref.info.parentInfo === null) raiseError(`parentInfo is null`);\r\n        const parentInfo = ref.info.parentInfo;\r\n        const parentListIndex = (ref.info.wildcardCount === ref.info.parentInfo.wildcardCount) ?\r\n          ref.listIndex : (ref.listIndex?.parentListIndex ?? null);\r\n        const parentRefId = getStatePropertyRefId(parentInfo, parentListIndex);\r\n        if (!(parentRefId in parentRefByRefId)) {\r\n          parentRefByRefId[parentRefId] = {info: parentInfo, listIndex: parentListIndex};\r\n        }\r\n        return parentRefId;\r\n      });\r\n      for(const [parentRefIdKey, refs] of Object.entries(statePropertyRefByStatePropertyRefId)) {\r\n        const parentRefId = Number(parentRefIdKey);\r\n        if (builtStatePropertyRefIds.has(parentRefId)) continue;\r\n        if (typeof refs === \"undefined\") continue;\r\n        const parentRef = parentRefByRefId[parentRefId];\r\n        if (parentRef === null) continue;\r\n\r\n        const values = [];\r\n        const listIndexes = [];\r\n        for(let j = 0; j < refs.length; j++) {\r\n          const ref = refs[j];\r\n          const statePropertyRefId = getStatePropertyRefId(ref.info, ref.listIndex);\r\n          const value = this.updatedValues[statePropertyRefId] ?? null;\r\n          values.push(value);\r\n          const listIndex = ref.listIndex;\r\n          if (listIndex === null) {\r\n            throw new Error(\"listIndex is null\");\r\n          }\r\n          listIndexes.push(listIndex);\r\n        }\r\n        const bindings = engine.getBindings(parentRef.info, parentRef.listIndex);\r\n        for(const binding of bindings) {\r\n          const arrayElementBinding: UpdatedArrayElementBinding = {\r\n            parentRef,\r\n            binding,\r\n            listIndexes,\r\n            values\r\n          };\r\n          retArrayElementBindings.push(arrayElementBinding);\r\n        }\r\n      }\r\n      \r\n      const updatingRefs = collectAffectedGetters(updatedRefs, engine);\r\n      for(const updatingRef of updatingRefs) {\r\n        const bindings = engine.getBindings(updatingRef.info, updatingRef.listIndex);\r\n        retBindings.push(...bindings ?? []);\r\n      }\r\n      \r\n    }\r\n    this.updatedValues = {};\r\n    return {bindings: retBindings, arrayElementBindings: retArrayElementBindings};\r\n  }\r\n\r\n  async render(bindings: IBinding[]) {\r\n    await this.engine.stateProxy[SetCacheableSymbol](async () => {\r\n      return render(bindings);\r\n    });\r\n  }\r\n\r\n  async exec() {\r\n    while(this.processList.length !== 0 || this.updatedProperties.size !== 0) {\r\n      // update state\r\n      await this.updateState();\r\n      // rebuild\r\n      const { bindings, arrayElementBindings } = await this.rebuild();\r\n      // render\r\n      for(const arrayElementBinding of arrayElementBindings) {\r\n        arrayElementBinding.binding.bindingNode.updateElements(arrayElementBinding.listIndexes, arrayElementBinding.values);\r\n      }\r\n      if (bindings.length > 0) {\r\n        await this.render(bindings);\r\n      }\r\n    }\r\n  }\r\n\r\n  static updatingCount = 0;\r\n}\r\n\r\nexport function createUpdater(engine: IComponentEngine): IUpdater {\r\n  return new Updater(engine);\r\n}\r\n\r\nexport function getUpdatingCount(): number {\r\n  return Updater.updatingCount;\r\n}","import { raiseError } from \"../utils.js\";\r\nimport { IComponentConfig } from \"../WebComponents/types\";\r\nimport { canHaveShadowRoot } from \"./canHaveShadowRoot.js\";\r\n\r\nfunction getParentShadowRoot(parentNode: Node | null): ShadowRoot|undefined{\r\n  let node: Node | null = parentNode;\r\n  while(node) {\r\n    if (node instanceof ShadowRoot) {\r\n      return node;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n}\r\n\r\nexport function attachShadow(element: HTMLElement, config: IComponentConfig, styleSheet: CSSStyleSheet): void {\r\n    if (config.enableShadowDom) {\r\n      if (config.extends === null || canHaveShadowRoot(config.extends)) {\r\n        const shadowRoot = element.attachShadow({ mode: 'open' });\r\n        shadowRoot.adoptedStyleSheets = [styleSheet];\r\n      } else {\r\n        raiseError(`ComponentEngine: Shadow DOM not supported for builtin components that extend ${config.extends}`);\r\n      }\r\n    } else {\r\n      const shadowRootOrDocument = getParentShadowRoot(element.parentNode) || document;\r\n      const styleSheets = shadowRootOrDocument.adoptedStyleSheets;\r\n      if (!styleSheets.includes(styleSheet)) {\r\n        shadowRootOrDocument.adoptedStyleSheets = [...styleSheets, styleSheet];\r\n      }\r\n    }\r\n\r\n}","export function canHaveShadowRoot(tagName: string): boolean {\r\n  try {\r\n    // 一時的に要素を作成\r\n    const element = document.createElement(tagName);\r\n    // `attachShadow` メソッドが存在し、実行可能かを確認\r\n    return typeof element.attachShadow === \"function\";\r\n  } catch {\r\n    // 無効なタグ名などが渡された場合は false を返す\r\n    return false;\r\n  }\r\n}","import { createBindContent } from \"../DataBinding/BindContent.js\";\r\nimport { IBindContent, IBinding } from \"../DataBinding/types\";\r\nimport { FilterWithOptions } from \"../Filter/types\";\r\nimport { IState, IStateProxy, IStructiveState } from \"../StateClass/types\";\r\nimport { createStateProxy } from \"../StateClass/createStateProxy.js\";\r\nimport { IUpdater } from \"../Updater/types\";\r\nimport { createUpdater } from \"../Updater/updater.js\";\r\nimport { ComponentType, IComponentConfig, IComponentStatic, StructiveComponent } from \"../WebComponents/types\";\r\nimport { attachShadow } from \"./attachShadow.js\";\r\nimport { ISaveInfoByResolvedPathInfo, IComponentEngine } from \"./types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { buildListIndexTree } from \"../StateClass/buildListIndexTree.js\";\r\nimport { ConnectedCallbackSymbol, DisconnectedCallbackSymbol, GetByRefSymbol, SetByRefSymbol, SetCacheableSymbol } from \"../StateClass/symbols.js\";\r\nimport { ILoopContext } from \"../LoopContext/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { getStructuredPathInfo } from \"../StateProperty/getStructuredPathInfo.js\";\r\nimport { BindParentComponentSymbol } from \"../ComponentState/symbols.js\";\r\nimport { raiseError } from \"../utils.js\";\r\n\r\nexport class ComponentEngine implements IComponentEngine {\r\n  type          : ComponentType = 'autonomous';\r\n  config        : IComponentConfig;\r\n  template      : HTMLTemplateElement;\r\n  styleSheet    : CSSStyleSheet;\r\n  stateClass    : IStructiveState;\r\n  state         : IState;\r\n  stateProxy    : IStateProxy;\r\n  updater       : IUpdater;\r\n  inputFilters  : FilterWithOptions;\r\n  outputFilters : FilterWithOptions;\r\n  bindContent   : IBindContent;\r\n  baseClass     : typeof HTMLElement = HTMLElement;\r\n  owner         : StructiveComponent;\r\n  trackedGetters: Set<string>;\r\n\r\n  listInfoSet       : Set<IStructuredPathInfo> = new Set();\r\n  elementInfoSet: Set<IStructuredPathInfo> = new Set();\r\n  bindingsByListIndex                  : WeakMap<IListIndex, Set<IBinding>> = new WeakMap();\r\n  dependentTree                        : Map<IStructuredPathInfo, Set<IStructuredPathInfo>> = new Map();\r\n\r\n  bindingsByComponent: WeakMap<StructiveComponent, Set<IBinding>> = new WeakMap();\r\n\r\n  #waitForInitialize : PromiseWithResolvers<void> = Promise.withResolvers<void>();\r\n  #loopContext       : ILoopContext | null = null;\r\n  #stackStructuredPathInfo  : IStructuredPathInfo[] = [];\r\n  #stackListIndex    : (IListIndex | null)[] = [];\r\n\r\n  constructor(config: IComponentConfig, owner: StructiveComponent) {\r\n    this.config = config;\r\n    if (this.config.extends) {\r\n      this.type = 'builtin';\r\n    }\r\n    const componentClass = owner.constructor as IComponentStatic;\r\n    this.template = componentClass.template;\r\n    this.styleSheet = componentClass.styleSheet;\r\n    this.stateClass = componentClass.stateClass;\r\n    this.state = new this.stateClass();\r\n    this.stateProxy = createStateProxy(this, this.state);\r\n    this.updater = createUpdater(this);\r\n    this.inputFilters = componentClass.inputFilters;\r\n    this.outputFilters = componentClass.outputFilters;\r\n    this.owner = owner;\r\n    this.trackedGetters = componentClass.trackedGetters;\r\n    // 依存関係の木を作成する\r\n    const checkDependentProp = (info: IStructuredPathInfo) => {\r\n      const parentInfo = info.parentInfo;\r\n      if (parentInfo === null) return;\r\n      this.addDependentProp(info, parentInfo);\r\n      checkDependentProp(parentInfo);\r\n    }\r\n    for(const path of componentClass.paths) {\r\n      const info = getStructuredPathInfo(path);\r\n      checkDependentProp(info);\r\n    }\r\n    // 配列のプロパティ、配列要素のプロパティを登録する\r\n    for(const listPath of componentClass.listPaths) {\r\n      this.listInfoSet.add(getStructuredPathInfo(listPath));\r\n      this.elementInfoSet.add(getStructuredPathInfo(listPath + \".*\"));\r\n    }\r\n    this.bindContent = createBindContent(null, componentClass.id, this, null, null); // this.stateArrayPropertyNamePatternsが変更になる可能性がある\r\n    for(const info of this.listInfoSet) {\r\n      if (info.wildcardCount > 0) continue;\r\n      const value = this.stateProxy[GetByRefSymbol](info, null)\r\n      buildListIndexTree(this, info, null, value);\r\n    }\r\n  \r\n    this.updater.main(this.#waitForInitialize);\r\n  }\r\n\r\n  async connectedCallback(): Promise<void> {\r\n    if (this.owner.dataset.state) {\r\n      try {\r\n        const json = JSON.parse(this.owner.dataset.state);\r\n        for(const [key, value] of Object.entries(json)) {\r\n          const info = getStructuredPathInfo(key);\r\n          if (info.wildcardCount > 0) continue;\r\n          this.stateProxy[SetByRefSymbol](info, null, value);\r\n        }\r\n      } catch(e) {\r\n        raiseError(\"Failed to parse state from dataset\");\r\n      }\r\n    }\r\n    this.owner.state[BindParentComponentSymbol]();\r\n    attachShadow(this.owner, this.config, this.styleSheet);\r\n    await this.stateProxy[ConnectedCallbackSymbol]();\r\n    await this.stateProxy[SetCacheableSymbol](async () => {\r\n      this.bindContent.render();\r\n    });\r\n    this.bindContent.mount(this.owner.shadowRoot ?? this.owner);\r\n    this.#waitForInitialize.resolve();\r\n  }\r\n\r\n  async disconnectedCallback(): Promise<void> {\r\n    await this.stateProxy[DisconnectedCallbackSymbol]();\r\n  }\r\n\r\n  async setLoopContext(loopContext: ILoopContext, callback: ()=>Promise<void>): Promise<void> {\r\n    try {\r\n      if (this.#loopContext !== null) {\r\n        throw new Error(\"loopContext is already set\");\r\n      }\r\n      this.#loopContext = loopContext;\r\n      await this.asyncSetStatePropertyRef(loopContext.info, loopContext.listIndex, async () => {\r\n        await callback();\r\n      });\r\n    } finally {\r\n      this.#loopContext = null;\r\n    }\r\n  }\r\n\r\n  async asyncSetStatePropertyRef(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    callback : ()=>Promise<any>\r\n  ): Promise<any> {\r\n    this.#stackStructuredPathInfo.push(info);\r\n    this.#stackListIndex.push(listIndex);\r\n    try {\r\n      return await callback();\r\n    } finally {\r\n      this.#stackStructuredPathInfo.pop();\r\n      this.#stackListIndex.pop();\r\n    }\r\n  }\r\n\r\n  setStatePropertyRef(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    callback : ()=>any\r\n  ): any {\r\n    this.#stackStructuredPathInfo.push(info);\r\n    this.#stackListIndex.push(listIndex);\r\n    try {\r\n      return callback();\r\n    } finally {\r\n      this.#stackStructuredPathInfo.pop();\r\n      this.#stackListIndex.pop();\r\n    }\r\n  }\r\n\r\n  getLastStatePropertyRef(): {info:IStructuredPathInfo, listIndex:IListIndex | null} | null {\r\n    if (this.#stackStructuredPathInfo.length === 0) {\r\n      return null;\r\n    }\r\n    const info = this.#stackStructuredPathInfo[this.#stackStructuredPathInfo.length - 1];\r\n    if (typeof info === \"undefined\") {\r\n      return null;\r\n    }\r\n    const listIndex = this.#stackListIndex[this.#stackListIndex.length - 1];\r\n    if (typeof listIndex === \"undefined\") {\r\n      return null;\r\n    }\r\n    return {info, listIndex};\r\n  }\r\n\r\n  getContextListIndex(structuredPath: string): IListIndex | null{\r\n    const lastRef = this.getLastStatePropertyRef();\r\n    if (lastRef === null) {\r\n      return null;\r\n    }\r\n    const info = lastRef.info;\r\n    const index = info.wildcardPaths.indexOf(structuredPath);\r\n    if (index >= 0) {\r\n      return lastRef.listIndex?.at(index) ?? null;\r\n    }\r\n    return null;\r\n  }\r\n  getLoopContexts():ILoopContext[] {\r\n    if (this.#loopContext === null) {\r\n      throw new Error(\"loopContext is null\");\r\n    }\r\n    return this.#loopContext.serialize();\r\n  }\r\n\r\n  #saveInfoByListIndexByResolvedPathInfoId: { [id:number]: WeakMap<IListIndex,ISaveInfoByResolvedPathInfo> } = {};\r\n  #saveInfoByStructuredPathId: { [id:number]: ISaveInfoByResolvedPathInfo } = {};\r\n\r\n  createSaveInfo():ISaveInfoByResolvedPathInfo {\r\n    return {\r\n      list          : null,\r\n      listIndexesSet: null,\r\n      bindings      : [],\r\n    }\r\n  }\r\n\r\n  getSaveInfoByStatePropertyRef(info:IStructuredPathInfo, listIndex:IListIndex | null): ISaveInfoByResolvedPathInfo {\r\n    if (listIndex === null) {\r\n      let saveInfo = this.#saveInfoByStructuredPathId[info.id];\r\n      if (typeof saveInfo === \"undefined\") {\r\n        saveInfo = this.createSaveInfo();\r\n        this.#saveInfoByStructuredPathId[info.id] = saveInfo;\r\n      }\r\n      return saveInfo;\r\n    } else {\r\n      let saveInfoByListIndex = this.#saveInfoByListIndexByResolvedPathInfoId[info.id];\r\n      if (typeof saveInfoByListIndex === \"undefined\") {\r\n        saveInfoByListIndex = new WeakMap<IListIndex, ISaveInfoByResolvedPathInfo>();\r\n        this.#saveInfoByListIndexByResolvedPathInfoId[info.id] = saveInfoByListIndex;\r\n      }\r\n      let saveInfo = saveInfoByListIndex.get(listIndex);\r\n      if (typeof saveInfo === \"undefined\") {\r\n        saveInfo = this.createSaveInfo();\r\n        saveInfoByListIndex.set(listIndex, saveInfo);\r\n      }\r\n      return saveInfo;\r\n    }\r\n  }\r\n  saveBinding(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    binding  : IBinding\r\n  ): void {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    saveInfo.bindings.push(binding);\r\n  }\r\n  saveListIndexesSet(\r\n    info              :IStructuredPathInfo, \r\n    listIndex         :IListIndex | null, \r\n    saveListIndexesSet:Set<IListIndex>\r\n  ): void {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    saveInfo.listIndexesSet = saveListIndexesSet;\r\n  }\r\n  saveList(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null, \r\n    list     :any[]\r\n  ): void {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    saveInfo.list = list;\r\n  }\r\n  getBindings(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null\r\n  ): IBinding[] {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    return saveInfo.bindings;\r\n  }\r\n  getListIndexesSet(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null\r\n  ): Set<IListIndex> | null {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    return saveInfo.listIndexesSet;\r\n  }\r\n  getList(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null\r\n  ): any[] | null {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    return saveInfo.list;\r\n  }\r\n\r\n  addDependentProp(info: IStructuredPathInfo, refInfo: IStructuredPathInfo) {\r\n    let dependents = this.dependentTree.get(refInfo);\r\n    if (typeof dependents === \"undefined\") {\r\n      dependents = new Set<IStructuredPathInfo>();\r\n      this.dependentTree.set(refInfo, dependents);\r\n    }\r\n    dependents.add(info);\r\n  }\r\n\r\n  getPropertyValue(info: IStructuredPathInfo, listIndex:IListIndex | null): any {\r\n    // プロパティの値を取得する\r\n    return this.stateProxy[GetByRefSymbol](info, listIndex);\r\n  }\r\n  setPropertyValue(info: IStructuredPathInfo, listIndex:IListIndex | null, value: any): void {\r\n    // プロパティの値を設定する\r\n    this.updater.addProcess(() => {\r\n      this.stateProxy[SetByRefSymbol](info, listIndex, value);\r\n    });\r\n  }\r\n}\r\n\r\nexport function createComponentEngine(config: IComponentConfig, component: StructiveComponent): IComponentEngine {\r\n  return new ComponentEngine(config, component);\r\n}","import { COMMENT_EMBED_MARK } from \"../constants.js\";\r\nimport { raiseError } from \"../utils.js\";\r\n\r\nconst MUSTACHE_REGEXP = /\\{\\{([^\\}]+)\\}\\}/g;\r\nconst MUSTACHE_TYPES:Set<string> = new Set(['if', 'for', 'endif', 'endfor', 'elseif', 'else']);\r\n\r\ntype MustacheType = 'if' | 'for' | 'endif' | 'endfor' | 'elseif' | 'else';\r\ntype MustacheInfo = {\r\n  type: MustacheType;\r\n  remain: string; // after first ':'\r\n  expr: string;\r\n}\r\n\r\nexport function replaceMustacheWithTemplateTag(html: string): string {\r\n  const stack:MustacheInfo[] = [];\r\n  return html.replaceAll(MUSTACHE_REGEXP, (match, expr) => {\r\n    expr = expr.trim();\r\n    const [ type ] = expr.split(':');\r\n    if (!MUSTACHE_TYPES.has(type)) {\r\n      // embed\r\n      return `<!--${COMMENT_EMBED_MARK}${expr}-->`;\r\n    }\r\n    const remain = expr.slice(type.length + 1).trim();\r\n    const currentInfo:MustacheInfo = { type, expr, remain };\r\n    if (type === 'if' || type === 'for') {\r\n      stack.push(currentInfo);\r\n      return `<template data-bind=\"${expr}\">`;\r\n    } else if (type === 'endif') {\r\n      const endTags = [];\r\n      do {\r\n        const info = stack.pop() ?? raiseError('replaceMustacheToTemplateOrEmbed: endif without if');\r\n        if (info.type === 'if') {\r\n          endTags.push('</template>');\r\n          break;\r\n        } else if (info.type === 'elseif') {\r\n          endTags.push('</template>');\r\n        } else {\r\n          raiseError('replaceMustacheToTemplateOrEmbed: endif without if');\r\n        }\r\n      } while(true);\r\n      return endTags.join('');\r\n    } else if (type === 'endfor') {\r\n      const info = stack.pop() ?? raiseError('replaceMustacheToTemplateOrEmbed: endif without if');\r\n      if (info.type === 'for') {\r\n        return '</template>';\r\n      } else {\r\n        raiseError('replaceMustacheToTemplateOrEmbed: endfor without for');\r\n      }\r\n    } else if (type === 'elseif') {\r\n      const lastInfo = stack.at(-1) ?? raiseError('replaceMustacheToTemplateOrEmbed: elseif without if');\r\n      if (lastInfo.type === 'if' || lastInfo.type === 'elseif') {\r\n        stack.push(currentInfo);\r\n        return `</template><template data-bind=\"if:${lastInfo.remain}|not\"><template data-bind=\"if:${remain}\">`;\r\n      } else {\r\n        raiseError('replaceMustacheToTemplateOrEmbed: elseif without if');\r\n      }\r\n    } else if (type === 'else') {\r\n      const lastInfo = stack.at(-1) ?? raiseError('replaceMustacheToTemplateOrEmbed: else without if');\r\n      if (lastInfo.type === 'if') {\r\n        return `</template><template data-bind=\"if:${lastInfo.remain}|not\">`;\r\n      } else {\r\n        raiseError('replaceMustacheToTemplateOrEmbed: else without if');\r\n      }\r\n    } else {\r\n      raiseError('replaceMustacheToTemplateOrEmbed: unknown type');\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n","import { COMMENT_TEMPLATE_MARK, DATA_BIND_ATTRIBUTE } from \"../constants.js\";\r\nimport { generateId } from \"../GlobalId/generateId.js\";\r\nimport { registerTemplate } from \"./registerTemplate.js\";\r\n\r\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\r\n\r\nexport function replaceTemplateTagWithComment(\r\n  id      : number, \r\n  template: HTMLTemplateElement,\r\n  rootId  : number = id\r\n):number {\r\n  // テンプレートの親ノードが存在する場合は、テンプレートをコメントノードに置き換える\r\n  template.parentNode?.replaceChild(document.createComment(`${COMMENT_TEMPLATE_MARK}${id}`), template);\r\n  if (template.namespaceURI === SVG_NS) {\r\n    // SVGタグ内のtemplateタグを想定\r\n    const newTemplate = document.createElement(\"template\");\r\n    for(let childNode of Array.from(template.childNodes)) {\r\n      newTemplate.content.appendChild(childNode);\r\n    }\r\n    const bindText = template.getAttribute(DATA_BIND_ATTRIBUTE);\r\n    newTemplate.setAttribute(DATA_BIND_ATTRIBUTE, bindText ?? \"\");\r\n    template = newTemplate;\r\n  }\r\n  template.content.querySelectorAll(\"template\").forEach(template => {\r\n    replaceTemplateTagWithComment(generateId(), template, rootId);\r\n  });\r\n  registerTemplate(id, template, rootId);\r\n  return id;\r\n}\r\n","import { replaceMustacheWithTemplateTag } from \"./replaceMustacheWithTemplateTag.js\";\r\nimport { replaceTemplateTagWithComment } from \"./replaceTemplateTagWithComment.js\";\r\n\r\nexport function registerHtml(id: number, html:string) {\r\n  const template = document.createElement(\"template\");\r\n  template.dataset.id = id.toString();\r\n  template.innerHTML = replaceMustacheWithTemplateTag(html);\r\n  replaceTemplateTagWithComment(id, template);\r\n}","import { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { IBinding } from \"../DataBinding/types\";\r\nimport { getStructuredPathInfo } from \"../StateProperty/getStructuredPathInfo.js\";\r\nimport { BindParentComponentSymbol, RenderSymbol } from \"./symbols.js\";\r\nimport { IComponentState, IComponentStateHandler, IComponentStateProxy } from \"./types\";\r\n\r\nclass ComponentState implements IComponentState {\r\n  engine: IComponentEngine;\r\n  constructor(engine: IComponentEngine) {\r\n    this.engine = engine;\r\n  }\r\n\r\n  bindParentProperty(binding: IBinding): void {\r\n    const propName = binding.bindingNode.subName;\r\n    Object.defineProperty(this.engine.state, propName, {\r\n      get: () => {\r\n        return binding.bindingState.filteredValue;\r\n      },\r\n      set: (value: any) => {\r\n        return binding.updateStateValue(value);\r\n      },\r\n    });\r\n  }\r\n\r\n  unbindParentProperty(binding: IBinding): void {\r\n    const propName = binding.bindingNode.subName;\r\n    Object.defineProperty(this.engine.state, propName, { value:undefined });\r\n  }\r\n  \r\n  bindParentComponent(): void {\r\n    // bindParentComponent\r\n    const parent = this.engine.owner.parentStructiveComponent;\r\n    if (parent === null) {\r\n      return;\r\n    }\r\n    const bindings = parent.getBindingsFromChild(this.engine.owner);\r\n    for (const binding of bindings ?? []) {\r\n      this.bindParentProperty(binding);\r\n    }\r\n  }\r\n\r\n  render(name: string, value:any): void {\r\n    // render\r\n    const info = getStructuredPathInfo(name);\r\n    this.engine.updater.addUpdatedStatePropertyRefValue(info, null, value)\r\n  }\r\n\r\n  getPropertyValue(name: string): any {\r\n    // getPropertyValue\r\n    const info = getStructuredPathInfo(name);\r\n    return this.engine.getPropertyValue(info, null);\r\n  }\r\n\r\n  setPropertyValue(name: string, value: any): void {\r\n    // setPropertyValue\r\n    const info = getStructuredPathInfo(name);\r\n    this.engine.setPropertyValue(info, null, value); \r\n  }\r\n}\r\n\r\nclass ComponentStateHandler implements IComponentStateHandler {\r\n  get(state: IComponentState, prop: PropertyKey, receiver: IComponentState): any {\r\n    if (prop === RenderSymbol) {\r\n      return state.render.bind(state);\r\n    } else if (prop === BindParentComponentSymbol) {\r\n      return state.bindParentComponent.bind(state);\r\n    } else if (typeof prop === 'string') {\r\n      return state.getPropertyValue(prop);\r\n    } else {\r\n      return Reflect.get(state, prop, receiver);\r\n    }\r\n  }\r\n\r\n  set(state: IComponentState, prop: PropertyKey, value: any, receiver: IComponentState): boolean {\r\n    if (typeof prop === 'string') {\r\n      state.setPropertyValue(prop, value);\r\n      return true;\r\n    } else {\r\n      return Reflect.set(state, prop, value, receiver);\r\n    }\r\n  }\r\n};\r\n\r\nexport const createComponentState = (engine: IComponentEngine): IComponentStateProxy => {\r\n  return new Proxy<IComponentState>(new ComponentState(engine), new ComponentStateHandler()) as IComponentStateProxy;\r\n}","import { inputBuiltinFilters, outputBuiltinFilters } from \"../Filter/builtinFilters.js\";\r\nimport { FilterWithOptions } from \"../Filter/types\";\r\nimport { generateId } from \"../GlobalId/generateId.js\";\r\nimport { getStateClassById, registerStateClass } from \"../StateClass/registerStateClass.js\";\r\nimport { getStyleSheetById } from \"../StyleSheet/registerStyleSheet.js\";\r\nimport { registerCss } from \"../StyleSheet/regsiterCss.js\";\r\nimport { createComponentEngine } from \"../ComponentEngine/ComponentEngine.js\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types.js\";\r\nimport { registerHtml } from \"../Template/registerHtml.js\";\r\nimport { getTemplateById } from \"../Template/registerTemplate.js\";\r\nimport { getBaseClass } from \"./getBaseClass.js\";\r\nimport { getComponentConfig } from \"./getComponentConfig.js\";\r\nimport { IComponent, IUserComponentData, IUserConfig, StructiveComponentClass, StructiveComponent } from \"./types\";\r\nimport { getListPathsSetById, getPathsSetById } from \"../BindingBuilder/registerDataBindAttributes.js\";\r\nimport { IStructiveState, IStructiveStaticState } from \"../StateClass/types\";\r\nimport { IBinding } from \"../DataBinding/types\";\r\nimport { IComponentStateProxy } from \"../ComponentState/types\";\r\nimport { createComponentState } from \"../ComponentState/createComponentState.js\";\r\n\r\nfunction findStructiveParent(el:StructiveComponent): IComponent | null {\r\n  let current = el.parentNode;\r\n  while (current) {\r\n    if ((current as StructiveComponent).state && (current as StructiveComponent).isStructive) {\r\n      return current as StructiveComponent;\r\n    }\r\n    current = current.parentNode;\r\n    if (current instanceof ShadowRoot) {\r\n      if (current.host && (current.host as StructiveComponent).state && (current.host as StructiveComponent).isStructive) {\r\n        return current.host as StructiveComponent;\r\n      }\r\n      current = current.host;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function createComponentClass(componentData: IUserComponentData): StructiveComponentClass {\r\n  const config = (componentData.stateClass.$config ?? {})as IUserConfig;\r\n  const componentConfig = getComponentConfig(config);\r\n  const id = generateId();\r\n  const { html, css, stateClass } = componentData;\r\n  const inputFilters:FilterWithOptions = Object.assign({}, inputBuiltinFilters);\r\n  const outputFilters:FilterWithOptions = Object.assign({}, outputBuiltinFilters);\r\n  stateClass.$isStructive = true;\r\n  registerHtml(id, html);\r\n  registerCss(id, css);\r\n  registerStateClass(id, stateClass);\r\n  const baseClass = getBaseClass(componentConfig.extends);\r\n  const extendTagName = componentConfig.extends;\r\n  return class extends baseClass implements IComponent {\r\n    #engine: IComponentEngine;\r\n    #componentState: IComponentStateProxy;\r\n\r\n    constructor() {\r\n      super();\r\n      this.#engine = createComponentEngine(componentConfig, this as StructiveComponent);\r\n      this.#componentState = createComponentState(this.#engine);\r\n    }\r\n\r\n    connectedCallback() {\r\n      this.#engine.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n      this.#engine.disconnectedCallback();\r\n    }\r\n\r\n    #parentStructiveComponent: IComponent | null | undefined;\r\n    get parentStructiveComponent(): IComponent | null {\r\n      if (typeof this.#parentStructiveComponent === \"undefined\") {\r\n        this.#parentStructiveComponent = findStructiveParent(this as StructiveComponent);\r\n      }\r\n      return this.#parentStructiveComponent;\r\n    }\r\n\r\n    get state(): IComponentStateProxy {\r\n      return this.#componentState;\r\n    }\r\n\r\n    get isStructive(): boolean {\r\n      return this.#engine.stateClass.$isStructive ?? false;\r\n    }\r\n\r\n    getBindingsFromChild(component: IComponent): Set<IBinding> | null {\r\n      return this.#engine.bindingsByComponent.get(component as StructiveComponent) ?? null;\r\n    }\r\n\r\n    static define(tagName:string) {\r\n      if (extendTagName) {\r\n        customElements.define(tagName, this, { extends: extendTagName });\r\n      } else {\r\n        customElements.define(tagName, this);\r\n      }\r\n    }\r\n\r\n    static get id():number {\r\n      return id;\r\n    }\r\n    static #html:string = html;\r\n    static get html():string {\r\n      return this.#html;\r\n    }\r\n    static set html(value:string) {\r\n      this.#html = value;\r\n      registerHtml(this.id, value);\r\n      this.#template = null;\r\n    }\r\n\r\n    static #css:string = css;\r\n    static get css() {\r\n      return this.#css;\r\n    }\r\n    static set css(value:string) {\r\n      this.#css = value;\r\n      registerCss(this.id, value);\r\n      this.#styleSheet = null;\r\n    }\r\n    static #template: HTMLTemplateElement | null = null;\r\n    static get template():HTMLTemplateElement {\r\n      if (!this.#template) {\r\n        this.#template = getTemplateById(this.id);\r\n      }\r\n      return this.#template;\r\n    }\r\n    static #styleSheet: CSSStyleSheet | null = null;\r\n    static get styleSheet():CSSStyleSheet {\r\n      if (!this.#styleSheet) {\r\n        this.#styleSheet = getStyleSheetById(this.id);\r\n      }\r\n      return this.#styleSheet;\r\n    }\r\n    static #stateClass: IStructiveState | null = null;\r\n    static get stateClass():IStructiveState {\r\n      if (!this.#stateClass) {\r\n        this.#stateClass = getStateClassById(this.id) as IStructiveState;\r\n      }\r\n      return this.#stateClass;\r\n    }\r\n    static #inputFilters:FilterWithOptions = inputFilters;\r\n    static get inputFilters():FilterWithOptions {\r\n      return this.#inputFilters;\r\n    }\r\n    static #outputFilters:FilterWithOptions = outputFilters;\r\n    static get outputFilters():FilterWithOptions {\r\n      return this.#outputFilters;\r\n    }\r\n    static get listPaths(): Set<string> {\r\n      return getListPathsSetById(this.id);\r\n    }\r\n    static get paths(): Set<string> {\r\n      return getPathsSetById(this.id);\r\n    }\r\n    static #trackedGetters: Set<string> | null = null;\r\n    static get trackedGetters(): Set<string> {\r\n      if(this.#trackedGetters === null) {\r\n        this.#trackedGetters = new Set<string>();\r\n        let currentProto = this.stateClass.prototype;\r\n        while (currentProto && currentProto !== Object.prototype) {\r\n          const trackedGetters = Object.getOwnPropertyDescriptors(currentProto);\r\n          if (trackedGetters) {\r\n            for (const [key, desc] of Object.entries(trackedGetters)) {\r\n              if ((desc as PropertyDescriptor).get) {\r\n                this.#trackedGetters.add(key);\r\n              }\r\n            }\r\n          }\r\n          currentProto = Object.getPrototypeOf(currentProto);\r\n        }\r\n      }\r\n      return this.#trackedGetters;\r\n\r\n    }\r\n  } as StructiveComponentClass;\r\n}\r\n","import { getGlobalConfig } from \"./getGlobalConfig.js\";\r\nimport { IUserConfig, IComponentConfig } from \"./types\";\r\n\r\nexport function getComponentConfig(userConfig: IUserConfig): IComponentConfig {\r\n  const globalConfig = getGlobalConfig();\r\n  return {\r\n    enableShadowDom: userConfig.enableShadowDom ?? globalConfig.enableShadowDom,\r\n    extends        : userConfig.extends ?? null,\r\n  };\r\n}","import { Constructor } from \"./types\";\r\n\r\nexport function getBaseClass(extendTagName: string | null):Constructor<HTMLElement> {\r\n  return extendTagName ? (document.createElement(extendTagName).constructor as Constructor<HTMLElement>) : HTMLElement;\r\n}","import { IStructiveState } from \"../StateClass/types\";\r\nimport { IUserComponentData } from \"./types\";\r\n\r\nfunction escapeEmbed(html: string): string {\r\n  return html.replaceAll(/\\{\\{([^\\}]+)\\}\\}/g, (match, expr) => {\r\n    return `<!--{{${expr}}}-->`;\r\n  });\r\n}\r\n\r\nfunction unescapeEmbed(html:string):string {\r\n  return html.replaceAll(/<!--\\{\\{([^\\}]+)\\}\\}-->/g, (match, expr) => {\r\n    return `{{${expr}}}`;\r\n  });\r\n}\r\n\r\nexport async function createSingleFileComponent(text: string): Promise<IUserComponentData> {\r\n  const template = document.createElement(\"template\");\r\n  template.innerHTML = escapeEmbed(text);\r\n\r\n  const html = template.content.querySelector(\"template\");\r\n  html?.remove();\r\n\r\n  const script = template.content.querySelector(\"script[type=module]\") as HTMLScriptElement;\r\n  const scriptModule = script ? await import(\"data:text/javascript;charset=utf-8,\" + script.text) : {};\r\n  script?.remove();\r\n\r\n  const style = template.content.querySelector(\"style\");\r\n  style?.remove();\r\n\r\n  const stateClass = (scriptModule.default ?? class {}) as IStructiveState;\r\n  \r\n  return {\r\n    text,\r\n    html      : unescapeEmbed(html?.innerHTML ?? \"\").trim(),\r\n    css       : style?.textContent ?? \"\",\r\n    stateClass,\r\n  }\r\n}","import { createSingleFileComponent } from \"./createSingleFileComponent.js\";\r\nimport { IUserComponentData } from \"./types\";\r\n\r\nexport async function loadSingleFileComponent(path: string): Promise<IUserComponentData> {\r\n  const response = await fetch(import.meta.resolve(path));\r\n  const text = await response.text();\r\n  return createSingleFileComponent(text);\r\n}\r\n","import { StructiveComponentClass } from \"./types\";\r\n\r\nexport function registerComponentClass(tagName: string, componentClass: StructiveComponentClass) {\r\n  componentClass.define(tagName);\r\n}","import { raiseError } from \"../utils\";\r\nimport { config } from \"../WebComponents/getGlobalConfig\";\r\n\r\nconst SLOT_KEY = \"router\";\r\nconst DEFAULT_LAYOUT = `<slot name=\"${SLOT_KEY}\"></slot>`;\r\n\r\nexport class MainWrapper extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    if (config.enableShadowDom) {\r\n      this.attachShadow({ mode: 'open' });\r\n    }\r\n  }\r\n\r\n  async connectedCallback() {\r\n    await this.loadLayout();\r\n    this.render();\r\n  }\r\n\r\n  get root(): ShadowRoot | HTMLElement {\r\n    return this.shadowRoot ?? this;\r\n  }\r\n\r\n  async loadLayout() {\r\n    if (config.layoutPath) {\r\n      const response = await fetch(config.layoutPath);\r\n      if (response.ok) {\r\n        const layoutText = await response.text();\r\n        const workTemplate = document.createElement(\"template\");\r\n        workTemplate.innerHTML = layoutText;\r\n      \r\n        const template = workTemplate.content.querySelector(\"template\");\r\n        const style = workTemplate.content.querySelector(\"style\") as CSSStyleSheet | null;\r\n      \r\n        this.root.appendChild(template?.content ?? document.createDocumentFragment());\r\n        if (style) {\r\n          const shadowRootOrDocument = this.shadowRoot ?? document;\r\n          const styleSheets = shadowRootOrDocument.adoptedStyleSheets;\r\n          if (!styleSheets.includes(style)) {\r\n            shadowRootOrDocument.adoptedStyleSheets = [...styleSheets, style];\r\n          }\r\n        }\r\n      } else {\r\n        raiseError(`Failed to load layout from ${config.layoutPath}`);\r\n      }\r\n    } else {\r\n      this.root.innerHTML = DEFAULT_LAYOUT;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // add router\r\n    if (config.enableRouter) {\r\n      const router = document.createElement(config.routerTagName);\r\n      router.setAttribute('slot', SLOT_KEY);\r\n      this.root.appendChild(router);\r\n    }\r\n  }\r\n}\r\n","import { entryRoute } from \"../Router/Router\";\r\nimport { createComponentClass } from \"./createComponentClass\";\r\nimport { loadImportmap } from \"./loadImportmap\";\r\nimport { loadSingleFileComponent } from \"./loadSingleFileComponent\";\r\nimport { registerComponentClass } from \"./registerComponentClass\";\r\nimport { IUserComponentData } from \"./types\";\r\n\r\nconst ROUTES_KEY = \"@routes/\";\r\nconst COMPONENTS_KEY = \"@components/\";\r\n\r\nexport async function loadFromImportMap(): Promise<void> {\r\n  const importmap = loadImportmap();\r\n  if (importmap.imports) {\r\n    for (const [alias, value] of Object.entries(importmap.imports)) {\r\n      let tagName;\r\n      if (alias.startsWith(ROUTES_KEY)) {\r\n        const path = alias.slice(ROUTES_KEY.length - 1); // remove the prefix '@routes'\r\n        const pathWithoutParams = path.replace(/:[^\\s/]+/g, \"\"); // remove the params\r\n        tagName = \"routes\" + pathWithoutParams.replace(/\\//g, \"-\"); // replace '/' with '-'\r\n        entryRoute(tagName, path === \"/root\" ? \"/\" : path); // routing\r\n      } if (alias.startsWith(COMPONENTS_KEY)) {\r\n        tagName = alias.slice(COMPONENTS_KEY.length - 1); // remove the prefix '@components'\r\n      }\r\n      if (!tagName) {\r\n        continue;\r\n      }\r\n\r\n      let componentData : IUserComponentData | null = null;\r\n      componentData = await loadSingleFileComponent(alias);\r\n      const componentClass = createComponentClass(componentData);\r\n      registerComponentClass(tagName, componentClass);\r\n    }\r\n  }\r\n\r\n} \r\n","import { IImportMap } from \"./types\";\r\n\r\nexport function loadImportmap():IImportMap {\r\n  const importmap: IImportMap = {};\r\n  document.querySelectorAll(\"script[type='importmap']\").forEach(script => {\r\n    const scriptImportmap = JSON.parse(script.innerHTML);\r\n    if (scriptImportmap.imports) {\r\n      importmap.imports = Object.assign(importmap.imports || {}, scriptImportmap.imports);\r\n    }\r\n  });\r\n  return importmap;\r\n}\r\n\r\n","import { registerSingleFileComponents } from \"./WebComponents/registerSingleFIleComponents.js\";\r\nimport { bootstrap } from \"./bootstrap.js\";\r\nimport { config as _config } from \"./WebComponents/getGlobalConfig.js\";\r\nimport { IConfig } from \"./WebComponents/types\";\r\n\r\nexport const config: IConfig = _config;\r\n\r\nlet initialized = false;\r\nexport async function defineComponents(singleFileComponents: Record<string, string>):Promise<void> {\r\n  await registerSingleFileComponents(singleFileComponents);\r\n  if (config.autoInit) {\r\n    await bootstrapStructive();\r\n  }\r\n}\r\n\r\nexport async function bootstrapStructive():Promise<void> {\r\n  if (!initialized) {\r\n    await bootstrap();\r\n    initialized = true;\r\n  }\r\n}\r\n\r\n","import { entryRoute } from \"../Router/Router.js\";\r\nimport { createComponentClass } from \"./createComponentClass.js\";\r\nimport { config } from \"./getGlobalConfig.js\";\r\nimport { loadSingleFileComponent } from \"./loadSingleFileComponent.js\";\r\nimport { registerComponentClass } from \"./registerComponentClass.js\";\r\nimport { IUserComponentData, SingleFileComponents } from \"./types\";\r\n\r\nexport async function registerSingleFileComponents(singleFileComponents:SingleFileComponents):Promise<void> {\r\n  for(const [ tagName, path ] of Object.entries(singleFileComponents)) {\r\n    let componentData : IUserComponentData | null = null;\r\n    if (config.enableRouter) {\r\n      const routePath = path.startsWith(\"@routes\") ? path.slice(7) : path; // remove the prefix 'routes:'\r\n      entryRoute(tagName, routePath === \"/root\" ? \"/\" : routePath); // routing\r\n    }\r\n    componentData = await loadSingleFileComponent(path);\r\n    const componentClass = createComponentClass(componentData);\r\n    registerComponentClass(tagName, componentClass);\r\n  }\r\n}","import { MainWrapper } from \"./MainWrapper/MainWrapper.js\";\r\nimport { Router } from \"./Router/Router.js\";\r\nimport { config } from \"./WebComponents/getGlobalConfig.js\";\r\nimport { loadFromImportMap } from \"./WebComponents/loadFromImportMap.js\";\r\n\r\nexport async function bootstrap(): Promise<void> {\r\n  if (config.autoLoadFromImportMap) {\r\n    await loadFromImportMap();\r\n  }\r\n\r\n  if (config.enableRouter) {\r\n    customElements.define(config.routerTagName, Router);\r\n  }\r\n\r\n  if (config.enableMainWrapper) {\r\n    customElements.define(config.mainTagName, MainWrapper);\r\n    if (config.autoInsertMainWrapper) {\r\n      const mainWrapper = document.createElement(config.mainTagName);\r\n      document.body.appendChild(mainWrapper);\r\n    }\r\n  }\r\n}"],"names":["ROUTE_PATH_PREFIX","routeEntries","globalRouter","Router","HTMLElement","_popstateHandler","constructor","super","this","popstateHandler","bind","connectedCallback","innerHTML","window","addEventListener","dispatchEvent","Event","disconnectedCallback","removeEventListener","event","preventDefault","render","navigate","to","history","pushState","Array","from","childNodes","filter","n","getAttribute","forEach","removeChild","routePath","location","pathname","tagName","params","path","tag","regex","RegExp","replace","test","matches","match","key","index","substring","customElement","document","createElement","setAttribute","JSON","stringify","appendChild","messageElement","textContent","entryRoute","startsWith","push","globalConfig","debug","locale","enableShadowDom","enableMainWrapper","enableRouter","autoInsertMainWrapper","autoInit","mainTagName","routerTagName","layoutPath","autoLoadFromImportMap","getGlobalConfig","config","optionsRequired","fnName","Error","optionMustBeNumber","valueMustBeNumber","valueMustBeDate","builtinFilters","eq","options","opt","optValue","Number","isNaN","value","ne","not","valueMustBeBoolean","lt","le","gt","ge","inc","dec","mul","div","fix","toFixed","toLocaleString","uc","toString","toUpperCase","lc","toLowerCase","cap","v","length","charAt","slice","trim","substr","opt1","opt1Value","opt2","opt2Value","pad","padStart","rep","repeat","rev","split","reverse","join","int","parseInt","float","parseFloat","round","Math","pow","floor","ceil","percent","date","Date","toLocaleDateString","time","toLocaleTimeString","datetime","ymd","year","getFullYear","month","getMonth","day","getDate","falsy","truthy","defaults","boolean","Boolean","number","string","String","null","outputBuiltinFilters","inputBuiltinFilters","id","generateId","raiseError","message","stateClassById","styleSheetById","registerCss","css","styleSheet","CSSStyleSheet","replaceSync","registerStyleSheet","textToFilter","filters","text","name","cache","Map","createFilters","texts","result","get","i","set","BindingNode","binding","node","decorates","bindContents","Set","subName","init","update","assignValue","bindingState","filteredValue","updateElements","listIndexes","values","isSelectElement","HTMLSelectElement","BindingNodeAttribute","BindingNodeCheckbox","isArray","element","checked","map","_val","includes","BindingNodeClassList","className","BindingNodeClassName","classList","add","remove","BindingNodeEvent","e","handler","engine","stateProxy","updater","loopContext","parentBindContent","currentLoopContext","indexes","serialize","context","listIndex","stopPropagation","addProcess","async","typeOfValue","setLoopContext","Reflect","apply","createBindingNodeEvent","filterTexts","filterFns","DATA_BIND_ATTRIBUTE","COMMENT_EMBED_MARK","COMMENT_TEMPLATE_MARK","BindingNodeBlock","BindingNodeIf","bindContent","trueBindContents","falseBindContents","createBindContent","parentNode","mountBefore","nextSibling","unmount","BindingNodeFor","bindContentsSet","bindContentByListIndex","WeakMap","bindContentPool","bindContentLastIndex","assignListIndex","pattern","deleteBindContent","clearListIndex","poolLength","listIndexesSet","getListIndexesSet","info","newBindContensSet","lastBindContent","lastNode","getLastNode","mountAfter","firstChildNode","removeBindContentsSet","difference","oldListValues","getList","currentBindContents","targetBindContents","lastChildNode","oldValue","targetIndex","indexOf","prevBindContent","saveList","createBindingNodeFor","DEFAULT_PROPERTY","defaultPropertyByElementType","Pt","Mt","button","_cache","getDefaultPropertyByNodeType","HTMLTextAreaElement","HTMLOptionElement","HTMLButtonElement","HTMLAnchorElement","HTMLFormElement","HTMLInputElement","type","SVGElement","undefined","Text","Template","defaultEventByName","selected","BindingNodeProperty","defaultName","nodeType","getDefaultName","eventName","updateStateValue","createBindingNodeProperty","BindingNodeRadio","BindingNodeStyle","style","setProperty","symbolName","RenderSymbol","Symbol","for","BindParentComponentSymbol","BindingNodeComponent","bindings","bindingsByComponent","state","nodePropertyConstructorByNameByIsComment","Ft","Ot","nodePropertyConstructorByFirstName","Ht","getBindingNodeCreator","propertyName","isComment","Comment","isElement","Element","fn","bindingNodeCreatorByName","nameElements","bindingNodeCreatorByFirstName","_getBindingNodeCreator","GetByRefSymbol","SetByRefSymbol","SetCacheableSymbol","ConnectedCallbackSymbol","DisconnectedCallbackSymbol","ResolveSymbol","GetAllSymbol","StructuredPathInfo","static","pathSegments","lastSegment","cumulativePaths","cumulativeInfos","wildcardPaths","wildcardInfos","wildcardParentPaths","wildcardParentInfos","lastWildcardPath","lastWildcardInfo","parentPath","parentInfo","wildcardCount","getPattern","_pattern","getStructuredPathInfo","currentPatternPath","prevPatternPath","reservedWords","structuredPath","has","BindingState","listIndexRef","deref","find","saveBinding","BindingStateIndex","indexNumber","loopContexts","bindingsByListIndex","ereg","getBindingStateCreator","createBindingStateIndex","createBindingState","getTextByNodeType","Rt","getTemplateById","nodeTypeByNodeKey","getNodeType","nodeKey","createNodeKey","getNodeTypeByNode","s","re","decode","m","exec","decodeURIComponent","parseFilter","parseProperty","property","parseExpressions","expression","bindExpression","decoratesExpression","nodePropertyText","statePropertyText","nodeProperty","inputFilterTexts","stateProperty","outputFilterTexts","parseExpression","removeAttributeFromElement","removeAttribute","removeAttributeByNodeType","replaceTextNodeFn","textNode","createTextNode","replaceChild","DataBindAttributes","nodePath","bindTexts","creatorByText","bindText","getDataBindText","removeDataBindAttribute","replaceTextNodeFromComment","routeIndexes","getAbsoluteNodePath","parseBindText","creator","createBindingNode","getNodesHavingDataBind","root","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","SHOW_COMMENT","acceptNode","hasAttribute","FILTER_ACCEPT","FILTER_SKIP","isCommentNode","nextNode","currentNode","listDataBindAttributesById","listPathsSetById","pathsSetById","getDataBindAttributesFromTemplate","content","createDataBindAttributes","templateById","registerTemplate","template","rootId","Node","TEXT_NODE","nodeValue","dataBindAttributes","paths","listPaths","attribute","j","registerDataBindAttributes","Binding","bindingNode","inputFilters","outputFilters","createBinding","LoopContext","WeakRef","parentLoopContext","currentBinding","parentBinding","walk","callback","results","unshift","bindingsWithSelectElement","createBindings","attributes","getDataBindAttributesById","reduce","BindContent","fragment","isMounted","lastBinding","size","at","importNode","createContent","createLoopContext","mount","beforeNode","insertBefore","afterNode","ListIndex","parentListIndex","position","truncate","reverseIterator","iterator","next","getStatePropertyRefId","listIndexMaxId","_getByRef","target","receiver","lastTrackingStack","lastPattern","addDependentProp","refId","cacheable","setStatePropertyRef","parentValue","getByRef","trackedGetters","trackingStack","pop","setTracking","prop","methodGetByRef","setByRef","addUpdatedStatePropertyRefValue","methodSetByRef","setCacheable","methodSetChargeable","call","resolve","wildcardParentPattern","getAll","_resolve","wildcardPattern","getContextListIndex","walkWildcardPattern","wildardIndexPos","indexPos","parentIndexes","listIndexSet","concat","resultIndexes","resultValues","ResolvedPathInfo","elements","wildcardType","wildcardIndexes","tmpPatternElements","incompleteCount","completeCount","lastPath","getResolvedPathInfo","getListIndex","matchIndexPropertyName","ref","getLastStatePropertyRef","resolvedInfo","callableApi","StateHandler","apiGetByRef","apiSetByRef","apiSetCacheable","trapGet","trapSet","BLANK_LISTINDEXES_SET","buildListIndexTreeSub","listInfos","oldListIndexesSet","oldListIndexesByItem","groupBy","newListIndexesSet","item","oldListIndexes","curListIndex","shift","addUpdatedListIndex","saveListIndexesSet","searchPath","subListIndex","subValue","buildListIndexTree","listInfoSet","extractListIndexes","_extractListIndexes","pos","currentListIndex","resultListIndexes","wildcardParentInfo","loopListIndex","_collectAffectedGetters","refInfo","refListIndex","resultPathInfos","resultRefs","dependentPathInfos","dependentTree","dependentPathInfo","dependentListIndex","updateList","extractlistIndexes","collectAffectedGetters","updateRefs","Updater","processList","updatedProperties","updatedValues","process","waitForQueueEntry","terminate","waitForMainLoopTerminate","Promise","withResolvers","main","waitForComponentInit","promise","performance","mark","updatingCount","measure","console","log","getEntriesByType","clearMeasures","clearMarks","error","updateState","rebuild","retArrayElementBindings","retBindings","processedListIndexes","processedPropertyRefIdsSet","updatedProiperties","updatedRefs","arrayPropertyRefs","arrayElementPropertyRefs","clear","statePropertyRefId","statePropertyRef","elementInfoSet","getBindings","builtStatePropertyRefIds","arrayPropertyRef","parentRefByRefId","statePropertyRefByStatePropertyRefId","Object","parentRefId","parentRefIdKey","refs","entries","parentRef","arrayElementBinding","updatingRefs","updatingRef","arrayElementBindings","we","Ye","attachShadow","extends","canHaveShadowRoot","mode","adoptedStyleSheets","shadowRootOrDocument","ShadowRoot","getParentShadowRoot","styleSheets","ComponentEngine","stateClass","baseClass","owner","waitForInitialize","stackStructuredPathInfo","stackListIndex","componentClass","Proxy","createUpdater","checkDependentProp","listPath","dataset","json","parse","shadowRoot","asyncSetStatePropertyRef","lastRef","getLoopContexts","saveInfoByListIndexByResolvedPathInfoId","saveInfoByStructuredPathId","createSaveInfo","list","getSaveInfoByStatePropertyRef","saveInfo","saveInfoByListIndex","dependents","getPropertyValue","setPropertyValue","MUSTACHE_REGEXP","MUSTACHE_TYPES","replaceTemplateTagWithComment","createComment","namespaceURI","newTemplate","childNode","querySelectorAll","registerHtml","html","stack","replaceAll","expr","remain","currentInfo","endTags","lastInfo","replaceMustacheWithTemplateTag","ComponentState","bindParentProperty","propName","defineProperty","unbindParentProperty","bindParentComponent","parent","parentStructiveComponent","getBindingsFromChild","ComponentStateHandler","createComponentClass","componentData","componentConfig","userConfig","Ze","getComponentConfig","$config","xn","Sn","en","assign","$isStructive","registerStateClass","extendTagName","getBaseClass","componentState","component","createComponentEngine","el","current","isStructive","host","findStructiveParent","define","customElements","getStyleSheetById","getStateClassById","getListPathsSetById","getPathsSetById","currentProto","prototype","getOwnPropertyDescriptors","desc","getPrototypeOf","unescapeEmbed","loadSingleFileComponent","response","fetch","escapeEmbed","querySelector","script","scriptModule","import","default","createSingleFileComponent","registerComponentClass","SLOT_KEY","DEFAULT_LAYOUT","MainWrapper","loadLayout","ok","layoutText","workTemplate","createDocumentFragment","router","ROUTES_KEY","COMPONENTS_KEY","loadFromImportMap","importmap","scriptImportmap","imports","loadImportmap","alias","_config","initialized","defineComponents","singleFileComponents","registerSingleFileComponents","bootstrapStructive","mainWrapper","body","bootstrap"],"mappings":"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"}