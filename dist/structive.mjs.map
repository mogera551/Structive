{"version":3,"file":"structive.mjs","sources":["../src/WebComponents/getGlobalConfig.ts","../src/Filter/errorMessages.ts","../src/Filter/builtinFilters.ts","../src/GlobalId/generateId.ts","../src/utils.ts","../src/StateClass/registerStateClass.ts","../src/StyleSheet/registerStyleSheet.ts","../src/StyleSheet/regsiterCss.ts","../src/BindingBuilder/resolveNodeFromPath.ts","../src/BindingBuilder/getAbsoluteNodePath.ts","../src/BindingBuilder/createFilters.ts","../src/DataBinding/BindingNode/BindingNode.ts","../src/DataBinding/BindingNode/BindingNodeAttribute.ts","../src/DataBinding/BindingNode/BindingNodeCheckbox.ts","../src/DataBinding/BindingNode/BindingNodeClassList.ts","../src/DataBinding/BindingNode/BindingNodeClassName.ts","../src/DataBinding/BindingNode/BindingNodeEvent.ts","../src/constants.ts","../src/DataBinding/BindingNode/BindingNodeBlock.ts","../src/DataBinding/BindingNode/BindingNodeIf.ts","../src/DataBinding/BindingNode/BindingNodeFor.ts","../src/BindingBuilder/getDefaultName.ts","../src/StateClass/symbols.ts","../src/DataBinding/BindingNode/BindingNodeProperty.ts","../src/DataBinding/BindingNode/BindingNodeRadio.ts","../src/DataBinding/BindingNode/BindingNodeStyle.ts","../src/BindingBuilder/getBindingNodeCreator.ts","../src/StateProperty/getStructuredPathInfo.ts","../src/DataBinding/BindingState/BindingState.ts","../src/DataBinding/BindingState/BindingStateIndex.ts","../src/BindingBuilder/getBindingStateCreator.ts","../src/BindingBuilder/getDataBindText.ts","../src/BindingBuilder/getNodeType.ts","../src/BindingBuilder/parseBindText.ts","../src/BindingBuilder/removeDataBindAttribute.ts","../src/BindingBuilder/replaceTextNodeFromComment.ts","../src/BindingBuilder/createDataBindAttributes.ts","../src/BindingBuilder/getNodesHavingDataBind.ts","../src/BindingBuilder/registerDataBindAttributes.ts","../src/Template/removeEmptyTextNodes.ts","../src/Template/registerTemplate.ts","../src/DataBinding/Binding.ts","../src/LoopContext/createLoopContext.ts","../src/Render/render.ts","../src/DataBinding/BindContent.ts","../src/StateProperty/getResolvedPathInfo.ts","../src/ListIndex/createListIndex.ts","../src/StatePropertyRef/getStatePropertyRefId.ts","../src/StateClass/createStateProxy.ts","../src/StateClass/buildListIndexTree.ts","../src/Updater/collectAffectedGetters.ts","../src/Updater/updater.ts","../src/ComponentEngine/canHaveShadowRoot.ts","../src/ComponentEngine/attachShadow.ts","../src/ComponentEngine/ComponentEngine.ts","../src/Template/replaceMustacheWithTemplateTag.ts","../src/Template/replaceTemplateTagWithComment.ts","../src/Template/registerHtml.ts","../src/WebComponents/getBaseClass.ts","../src/WebComponents/getComponentConfig.ts","../src/WebComponents/createComponentClass.ts","../src/WebComponents/createSingleFileComponent.ts","../src/WebComponents/loadSingleFileComponent.ts","../src/WebComponents/registerComponentClass.ts","../src/WebComponents/registerSingleFIleComponents.ts","../src/exports.ts"],"sourcesContent":["import { IConfig } from \"./types\";\r\n\r\nconst globalConfig: IConfig = {\r\n  debug          : false,\r\n  locale         : \"en-US\", // The locale of the component, ex. \"en-US\", default is \"en-US\"\r\n  enableShadowDom: true,\r\n};\r\n\r\nexport function getGlobalConfig():IConfig {\r\n  return globalConfig;\r\n}","\r\nexport function optionsRequired(fnName:string): never {\r\n  throw new Error(`${fnName} requires at least one option`);\r\n}\r\n\r\nexport function optionMustBeNumber(fnName:string): never {\r\n  throw new Error(`${fnName} requires a number as option`);\r\n}\r\n\r\nexport function valueMustBeNumber(fnName:string): never {\r\n  throw new Error(`${fnName} requires a number value`);\r\n}\r\n\r\nexport function valueMustBeBoolean(fnName:string): never {\r\n  throw new Error(`${fnName} requires a boolean value`);\r\n}\r\n\r\nexport function valueMustBeDate(fnName:string): never {\r\n  throw new Error(`${fnName} requires a date value`);\r\n}","import { getGlobalConfig } from \"../WebComponents/getGlobalConfig\";\r\nimport { optionMustBeNumber, optionsRequired, valueMustBeBoolean, valueMustBeDate, valueMustBeNumber } from \"./errorMessages\";\r\nimport { FilterWithOptions } from \"./types\";\r\n\r\nconst config = getGlobalConfig();\r\n\r\nconst eq = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('eq');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('eq');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('eq');\r\n    return value === optValue;\r\n  }\r\n}\r\n\r\nconst ne = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('ne');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('ne');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('ne');\r\n    return value !== optValue;\r\n  }\r\n}\r\n\r\nconst not = (options?:string[]) => {\r\n  return (value: any) => {\r\n    if (typeof value !== 'boolean') valueMustBeBoolean('not');\r\n    return !value;\r\n  }\r\n}\r\n\r\nconst lt = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('lt');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('lt');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('lt');\r\n    return value < optValue;\r\n  }\r\n}\r\n\r\nconst le = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('le');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('le');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('le');\r\n    return value <= optValue;\r\n  }\r\n}\r\n\r\nconst gt = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('gt');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('gt');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('gt');\r\n    return value > optValue;\r\n  }\r\n}\r\n\r\nconst ge = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('ge');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('ge');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('ge');\r\n    return value >= optValue;\r\n  }\r\n}\r\n\r\nconst inc = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('inc');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('inc');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('inc');\r\n    return value + optValue;\r\n  }\r\n}\r\n\r\nconst dec = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('dec');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('dec');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('dec');\r\n    return value - optValue;\r\n  }\r\n}\r\n\r\nconst mul = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('mul');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('mul');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('mul');\r\n    return value * optValue;\r\n  }\r\n}\r\n\r\nconst div = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('div');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('div');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('div');\r\n    return value / optValue;\r\n  }\r\n}\r\n\r\nconst fix = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('div');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('div');\r\n    return value.toFixed(optValue);\r\n  }\r\n}\r\n\r\nconst locale = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('locale');\r\n    return value.toLocaleString(opt);\r\n  }\r\n}\r\n\r\nconst uc = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().toUpperCase();\r\n  }\r\n}\r\n\r\nconst lc = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().toLowerCase();\r\n  }\r\n}\r\n\r\nconst cap = (options?:string[]) => {\r\n  return (value: any) => {\r\n    const v = value.toString();\r\n    if (v.length === 0) return v;\r\n    if (v.length === 1) return v.toUpperCase();\r\n    return v.charAt(0).toUpperCase() + v.slice(1);\r\n  }\r\n}\r\n\r\nconst trim = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().trim();\r\n  }\r\n}\r\n\r\nconst slice = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('slice');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('slice');\r\n  return (value: any) => {\r\n    return value.toString().slice(optValue);\r\n  }\r\n}\r\n\r\nconst substr = (options?:string[]) => {\r\n  const opt1 = options?.[0] ?? optionsRequired('substr');\r\n  const opt1Value = Number(opt1);\r\n  if (isNaN(opt1Value)) optionMustBeNumber('substr');\r\n  const opt2 = options?.[1] ?? optionsRequired('substr');\r\n  const opt2Value = Number(opt2);\r\n  if (isNaN(opt2Value)) optionMustBeNumber('substr');\r\n  return (value: any) => {\r\n    return value.toString().substr(opt1Value, opt2Value);\r\n  }\r\n}\r\n\r\nconst pad = (options?:string[]) => {\r\n  const opt1 = options?.[0] ?? optionsRequired('pad');\r\n  const opt1Value = Number(opt1);\r\n  if (isNaN(opt1Value)) optionMustBeNumber('pad');\r\n  const opt2 = options?.[1] ?? '0';\r\n  const opt2Value = opt2;\r\n  return (value: any) => {\r\n    return value.toString().padStart(opt1Value, opt2Value);\r\n  }\r\n}\r\n\r\nconst rep = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('rep');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('rep');\r\n  return (value: any) => {\r\n    return value.toString().repeat(optValue);\r\n  }\r\n}\r\n\r\nconst rev = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().split('').reverse().join('');\r\n  }\r\n}\r\n\r\nconst int = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return parseInt(value, 10);\r\n  }\r\n}\r\n\r\nconst float = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return parseFloat(value);\r\n  }\r\n}\r\n\r\nconst round = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Math.pow(10, Number(opt));\r\n  if (isNaN(optValue)) optionMustBeNumber('round');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('round');\r\n    return Math.round(value * optValue) / optValue;\r\n  }\r\n}\r\n\r\nconst floor = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Math.pow(10, Number(opt));\r\n  if (isNaN(optValue)) optionMustBeNumber('floor');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('floor');\r\n    return Math.floor(value * optValue) / optValue;\r\n  }\r\n}\r\n\r\nconst ceil = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Math.pow(10, Number(opt));\r\n  if (isNaN(optValue)) optionMustBeNumber('ceil');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('ceil');\r\n    return Math.ceil(value * optValue) / optValue;\r\n  }\r\n}\r\n\r\nconst percent = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('percent');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('percent');\r\n    return value.toFixed(optValue) + '%';\r\n  }\r\n}\r\n\r\nconst date = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (!(value instanceof Date))  valueMustBeDate('date');\r\n    return value.toLocaleDateString(config.locale);\r\n  }\r\n}\r\n\r\nconst time = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (!(value instanceof Date)) valueMustBeDate('time');\r\n    return value.toLocaleTimeString(config.locale);\r\n  }\r\n}\r\n\r\nconst datetime = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (!(value instanceof Date)) valueMustBeDate('datetime');\r\n    return value.toLocaleString(config.locale);\r\n  }\r\n}\r\n\r\nconst ymd = (options?:string[]) => {\r\n  const opt = options?.[0] ?? '-';\r\n  return (value: any) => {\r\n    if (!(value instanceof Date)) valueMustBeDate('ymd');\r\n    const year = value.getFullYear().toString();\r\n    const month = (value.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = value.getDate().toString().padStart(2, '0');\r\n    return `${year}${opt}${month}${opt}${day}`;\r\n  }\r\n}\r\n\r\nconst falsy = (options?:string[]) => {\r\n  return (value: any) => value === false || value === null || value === undefined || value === 0 || value === '' || Number.isNaN(value);\r\n}\r\n\r\nconst truthy = (options?:string[]) => {\r\n  return (value: any) =>value !== false && value !== null && value !== undefined && value !== 0 && value !== '' && !Number.isNaN(value);\r\n}\r\n\r\nconst defaults = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('defaults');\r\n  return (value: any) => {\r\n    if (value === false || value === null || value === undefined || value === 0 || value === '' || Number.isNaN(value)) return opt;\r\n    return value;\r\n  }\r\n}\r\n\r\nconst boolean = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return Boolean(value);\r\n  }\r\n}\r\n\r\nconst number = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return Number(value);\r\n  }\r\n}\r\n\r\nconst string = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return String(value);\r\n  }\r\n}\r\n\r\nconst _null = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return (value === \"\") ? null : value;\r\n  } \r\n}\r\n\r\nconst builtinFilters: FilterWithOptions = {\r\n  eq,\r\n  ne,\r\n  not,\r\n  \r\n  lt,\r\n  le,\r\n  gt,\r\n  ge,\r\n\r\n  inc,\r\n  dec,\r\n  mul,\r\n  div,\r\n\r\n  fix,\r\n  locale,\r\n  uc,\r\n  lc,\r\n  cap,\r\n  trim,\r\n  slice,\r\n  substr,\r\n  pad,\r\n  rep,\r\n  rev,\r\n\r\n  int,\r\n  float,\r\n  round,\r\n  floor,\r\n  ceil,\r\n  percent,\r\n\r\n  date,\r\n  time,\r\n  datetime,\r\n  ymd,\r\n\r\n  falsy,\r\n  truthy,\r\n  defaults,\r\n\r\n  boolean,\r\n  number,\r\n  string,\r\n  \"null\": _null,\r\n};\r\n\r\nexport const outputBuiltinFilters = builtinFilters;\r\nexport const inputBuiltinFilters = builtinFilters;\r\n\r\nexport const builtinFilterFn = (name:string, options: string[]) => (filters: FilterWithOptions) => {\r\n  const filter = filters[name];\r\n  if (!filter) throw new Error(`outputBuiltinFiltersFn: filter not found: ${name}`);\r\n  return filter(options);\r\n}\r\n\r\n","\r\nlet id = 0;\r\n\r\nexport function generateId(): number {\r\n  return ++id;\r\n}","\r\nexport function raiseError(message: string): never {\r\n  throw new Error(message);\r\n}\r\n","import { raiseError } from \"../utils\";\r\n\r\nconst stateClassById: Record<number,typeof Object> = {};\r\n\r\nexport function registerStateClass(id: number, stateClass: typeof Object) {\r\n  stateClassById[id] = stateClass;\r\n}\r\n\r\nexport function getStateClassById(id: number): typeof Object {\r\n  return stateClassById[id] ?? raiseError(`getStateClassById: stateClass not found: ${id}`);\r\n}\r\n","import { raiseError } from \"../utils\";\r\n\r\nconst styleSheetById: Record<number,CSSStyleSheet> = {};\r\n\r\nexport function registerStyleSheet(id: number, css: CSSStyleSheet) {\r\n  styleSheetById[id] = css;\r\n}\r\n\r\nexport function getStyleSheetById(id: number): CSSStyleSheet {\r\n  return styleSheetById[id] ?? raiseError(`getStyleSheetById: stylesheet not found: ${id}`);\r\n}","import { registerStyleSheet } from \"./registerStyleSheet\";\r\n\r\nexport function registerCss(id: number, css: string) {\r\n  const styleSheet = new CSSStyleSheet();\r\n  styleSheet.replaceSync(css);\r\n  registerStyleSheet(id, styleSheet);\r\n}","import { NodePath } from \"./types\";\r\n\r\nexport function resolveNodeFromPath(root: Node, path: NodePath): Node | null {\r\n  return path.reduce((node, index) => node?.childNodes[index] ?? null, root);\r\n}","import { NodePath } from \"./types\";\r\n\r\nexport function getAbsoluteNodePath(node: Node): NodePath {\r\n  let routeIndexes: NodePath = [];\r\n  while(node.parentNode !== null) {\r\n    const childNodes = Array.from(node.parentNode.childNodes) as Node[];\r\n    routeIndexes = [ childNodes.indexOf(node), ...routeIndexes ];\r\n    node = node.parentNode;\r\n  }\r\n  return routeIndexes;\r\n}","import { FilterFn, Filters, FilterWithOptions } from \"../Filter/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { IFilterText } from \"./types\";\r\n\r\nfunction textToFilter(filters:FilterWithOptions, text: IFilterText): FilterFn {\r\n  const filter = filters[text.name];\r\n  if (!filter) raiseError(`outputBuiltinFiltersFn: filter not found: ${name}`);\r\n  return filter(text.options);\r\n}\r\n\r\nconst cache : Map<IFilterText[], Filters> = new Map();\r\n\r\nexport function createFilters(filters:FilterWithOptions, texts: IFilterText[]): Filters {\r\n  let result = cache.get(texts);\r\n  if (typeof result === \"undefined\") {\r\n    result = [];\r\n    for(let i = 0; i < texts.length; i++) {\r\n      result.push(textToFilter(filters, texts[i]));\r\n    }\r\n    cache.set(texts, result);\r\n  }\r\n  return result;\r\n}\r\n","import { Filters } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBindContent, IBinding } from \"../types\";\r\nimport { IBindingNode } from \"./types\";\r\n\r\nexport class BindingNode implements IBindingNode {\r\n  #binding: IBinding;\r\n  #node: Node;\r\n  #name: string;\r\n  #filters: Filters;\r\n  #event: string | null;\r\n  #bindContents: Set<IBindContent> = new Set<IBindContent>();\r\n  get node(): Node {\r\n    return this.#node;\r\n  }\r\n  get name(): string {\r\n    return this.#name;\r\n  }\r\n  get binding(): IBinding {\r\n    return this.#binding;\r\n  }\r\n  get event(): string | null {\r\n    return this.#event;\r\n  }\r\n  get filters(): Filters {\r\n    return this.#filters;\r\n  }\r\n  get bindContents(): Set<IBindContent> {\r\n    return this.#bindContents;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node  : Node, \r\n    name  : string,\r\n    filters: Filters,\r\n    event : string | null\r\n  ) {\r\n    this.#binding = binding;\r\n    this.#node = node;\r\n    this.#name = name;\r\n    this.#filters = filters;\r\n    this.#event = event;\r\n  }\r\n  init():void {\r\n  }\r\n  update(): void {\r\n    this.assignValue(this.binding.bindingState.filteredValue);\r\n  }\r\n  assignValue(value: any): void {\r\n    raiseError(`BindingNode: assignValue not implemented`);\r\n  }\r\n  updateElements(listIndexes: IListIndex[], values: any[]) {\r\n    raiseError(`BindingNode: updateElements not implemented`);\r\n  }\r\n  get isSelectElement(): boolean {\r\n    return this.node instanceof HTMLSelectElement;\r\n  }\r\n}","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeAttribute extends BindingNode {\r\n  #subName: string;\r\n  get subName():string {\r\n    return this.#subName;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    const [, subName] = this.name.split(\".\");\r\n    this.#subName = subName;\r\n  }\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    const element = this.node as Element;\r\n    element.setAttribute(this.subName, value.toString());\r\n  }\r\n}\r\n\r\nexport const createBindingNodeAttribute: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeAttribute(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeCheckbox extends BindingNode {\r\n  assignValue(value:any) {\r\n    if (!Array.isArray(value)) {\r\n      raiseError(`BindingNodeCheckbox.update: value is not array`, );\r\n    }\r\n    const element = this.node as HTMLInputElement;\r\n    element.checked = value.map(_val => _val.toString()).includes(element.value);\r\n  }\r\n}\r\n\r\nexport const createBindingNodeCheckbox: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeCheckbox(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeClassList extends BindingNode {\r\n  assignValue(value:any) {\r\n    if (!Array.isArray(value)) {\r\n      raiseError(`BindingNodeClassList.update: value is not array`);\r\n    }\r\n    const element = this.node as Element;\r\n    element.className = value.join(\" \");\r\n  }\r\n}\r\n\r\nexport const createBindingNodeClassList: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeClassList(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeClassName extends BindingNode {\r\n  #subName: string;\r\n  get subName(): string {\r\n    return this.#subName;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    const [, subName] = this.name.split(\".\");\r\n    this.#subName = subName;\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (typeof value !== \"boolean\") {\r\n      raiseError(`BindingNodeClassName.update: value is not boolean`);\r\n    }\r\n    const element = this.node as Element;\r\n    if (value) {\r\n      element.classList.add(this.subName);\r\n    } else {\r\n      element.classList.remove(this.subName);\r\n    }\r\n  }\r\n}\r\n\r\nexport const createBindingNodeClassName: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeClassName(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeEvent extends BindingNode {\r\n  #subName    : string;\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    this.#subName = this.name.slice(2); // on～\r\n    const element = node as HTMLElement;\r\n    element.addEventListener(this.subName, (e:Event) => this.handler(e));\r\n  }\r\n  get subName(): string {\r\n    return this.#subName;\r\n  }\r\n  update() {\r\n    // 何もしない\r\n  }\r\n\r\n  handler(e: Event) {\r\n    const bindingState = this.binding.bindingState;\r\n    const engine = this.binding.engine;\r\n    const stateProxy = engine.stateProxy;\r\n    const updater = engine.updater;\r\n    const loopContext = this.binding.parentBindContent.currentLoopContext;\r\n    const indexes = loopContext?.serialize().map((context) => context.listIndex.index) ?? [];\r\n    const option = this.event;\r\n    if (option === \"preventDefault\") {\r\n      e.preventDefault();\r\n    }\r\n    this.binding.engine.updater.addProcess(async () => {\r\n      const value = bindingState.value;\r\n      const typeOfValue = typeof value;\r\n      updater.addProcess(async () => {\r\n        if (loopContext) {\r\n          await engine.setLoopContext(loopContext, async () => {\r\n            if (typeOfValue === \"function\") {\r\n              await Reflect.apply(value, stateProxy, [e, ...indexes]);\r\n            } else {\r\n              // ToDo:error\r\n            }\r\n          });\r\n        } else {\r\n          if (typeOfValue === \"function\") {\r\n            await Reflect.apply(value, stateProxy, [e, ...indexes]);\r\n          } else {\r\n            // ToDo:error\r\n          }\r\n        }\r\n      });\r\n    });\r\n  } \r\n}\r\n\r\nexport const createBindingNodeEvent: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeEvent(binding, node, name, filterFns, event);\r\n  }\r\n","export const DATA_BIND_ATTRIBUTE = \"data-bind\";\r\nexport const COMMENT_EMBED_MARK = \"@@:\"; // 埋め込み変数のマーク\r\nexport const COMMENT_TEMPLATE_MARK = \"@@|\"; // テンプレートのマーク\r\n","import { COMMENT_TEMPLATE_MARK } from \"../../constants\";\r\nimport { Filters } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\n\r\nconst COMMENT_TEMPLATE_MARK_LEN = COMMENT_TEMPLATE_MARK.length;\r\n\r\nexport class BindingNodeBlock extends BindingNode {\r\n  #id: number;\r\n  get id(): number {\r\n    return this.#id;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    const id = this.node.textContent?.slice(COMMENT_TEMPLATE_MARK_LEN) ?? raiseError(\"BindingNodeBlock.id: invalid node\");\r\n    this.#id = Number(id);\r\n  }\r\n    \r\n}","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { createBindContent } from \"../BindContent\";\r\nimport { IBindContent, IBinding } from \"../types\";\r\nimport { BindingNodeBlock } from \"./BindingNodeBlock\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeIf extends BindingNodeBlock {\r\n  #bindContent: IBindContent;\r\n  #trueBindContents: Set<IBindContent>;\r\n  #falseBindContents: Set<IBindContent> = new Set();\r\n  #bindContents: Set<IBindContent>;\r\n\r\n  get bindContents(): Set<IBindContent> {\r\n    return this.#bindContents;\r\n  }\r\n\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    this.#bindContent = createBindContent(\r\n      this.binding, \r\n      this.id, \r\n      this.binding.engine, \r\n      \"\", \r\n      null\r\n    );\r\n    this.#trueBindContents = this.#bindContents = new Set([this.#bindContent]);\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (typeof value !== \"boolean\") {\r\n      raiseError(`BindingNodeIf.update: value is not boolean`);\r\n    }\r\n    const parentNode = this.node.parentNode;\r\n    if (parentNode == null) {\r\n      raiseError(`BindingNodeIf.update: parentNode is null`);\r\n    }\r\n    if (value) {\r\n      this.#bindContent.render();\r\n      this.#bindContent.mountBefore(parentNode, this.node.nextSibling);\r\n      this.#bindContents = this.#trueBindContents;\r\n    } else {\r\n      this.#bindContent.unmount();\r\n      this.#bindContents = this.#falseBindContents;\r\n    }\r\n  }\r\n}\r\n\r\nexport const createBindingNodeIf: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeIf(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { getStructuredPathInfo } from \"../../StateProperty/getStructuredPathInfo\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { createBindContent } from \"../BindContent\";\r\nimport { IBindContent, IBinding } from \"../types\";\r\nimport { BindingNodeBlock } from \"./BindingNodeBlock\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeFor extends BindingNodeBlock {\r\n  #bindContentsSet       : Set<IBindContent> = new Set<IBindContent>();\r\n  #bindContentByListIndex: WeakMap<IListIndex, IBindContent> = new WeakMap();\r\n  #bindContentPool       : IBindContent[] = [];\r\n  #bindContentLastIndex  : number = 0;\r\n\r\n  get bindContents(): Set<IBindContent> {\r\n    return this.#bindContentsSet;\r\n  }\r\n\r\n  init() {\r\n  }\r\n\r\n  createBindContent(listIndex: IListIndex): IBindContent {\r\n    let bindContent: IBindContent;\r\n    if (this.#bindContentLastIndex >= 0) {\r\n      // プールの最後の要素を取得して、プールの長さをあとで縮減する\r\n      // 作るたびにプールを縮減すると、パフォーマンスが悪化するため\r\n      // プールの長さを縮減するのは、全ての要素を作った後に行う\r\n      bindContent = this.#bindContentPool[this.#bindContentLastIndex];\r\n      this.#bindContentLastIndex--;\r\n      bindContent.assignListIndex(listIndex);\r\n    } else {\r\n      bindContent = createBindContent(\r\n        this.binding, \r\n        this.id, \r\n        this.binding.engine, \r\n        this.binding.bindingState.pattern + \".*\", \r\n        listIndex);\r\n    }\r\n    // 登録\r\n    this.#bindContentByListIndex.set(listIndex, bindContent);\r\n    return bindContent;\r\n  }\r\n\r\n  deleteBindContent(bindContent: IBindContent): void {\r\n    bindContent.unmount();\r\n    bindContent.loopContext?.clearListIndex();\r\n  }\r\n\r\n  get bindContentLastIndex():number {\r\n    return this.#bindContentLastIndex;\r\n  }\r\n  set bindContentLastIndex(value:number) {\r\n    this.#bindContentLastIndex = value;\r\n  }\r\n\r\n  get poolLength():number {\r\n    return this.#bindContentPool.length;\r\n  }\r\n  set poolLength(length: number) {\r\n    if (length < 0) {\r\n      raiseError(`BindingNodeFor.setPoolLength: length is negative`);\r\n    }\r\n    this.#bindContentPool.length = length;\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (!Array.isArray(value)) {\r\n      raiseError(`BindingNodeFor.assignValue: value is not array`);\r\n    }\r\n    const listIndexesSet = this.binding.engine.getListIndexesSet(\r\n      this.binding.bindingState.info, \r\n      this.binding.bindingState.listIndex\r\n    );\r\n    if (listIndexesSet === null) {\r\n      raiseError(`BindingNodeFor.assignValue: listIndexes is not found`);\r\n    }\r\n    this.bindContentLastIndex = this.poolLength - 1;\r\n    const newBindContensSet = new Set<IBindContent>();\r\n    let lastBindContent = null;\r\n    const parentNode = this.node.parentNode;\r\n    if (parentNode == null) {\r\n      raiseError(`BindingNodeFor.update: parentNode is null`);\r\n    }\r\n    for(const listIndex of listIndexesSet) {\r\n      const lastNode = lastBindContent?.getLastNode(parentNode) ?? this.node;\r\n      let bindContent = this.#bindContentByListIndex.get(listIndex);\r\n      if (typeof bindContent === \"undefined\") {\r\n        bindContent = this.createBindContent(listIndex);\r\n        bindContent.render();\r\n        bindContent.mountAfter(parentNode, lastNode);\r\n      } else {\r\n        if (lastNode.nextSibling !== bindContent.firstChildNode) {\r\n          bindContent.mountAfter(parentNode, lastNode);\r\n        }\r\n      }\r\n      newBindContensSet.add(bindContent);\r\n      lastBindContent = bindContent;\r\n    }\r\n    // プールの長さを更新する\r\n    // プールの長さは、プールの最後の要素のインデックス+1であるため、\r\n    this.poolLength = this.bindContentLastIndex + 1;\r\n    // 削除\r\n    const removeBindContentsSet = this.#bindContentsSet.difference(newBindContensSet);\r\n    for(const bindContent of removeBindContentsSet) {\r\n      this.deleteBindContent(bindContent);\r\n    }\r\n    this.#bindContentPool.push(...removeBindContentsSet);\r\n    this.#bindContentsSet = newBindContensSet;\r\n  }\r\n\r\n  /**\r\n   * SWAP処理を想定\r\n   * \r\n   * @param listIndexes \r\n   * @param values \r\n   * @returns \r\n   */\r\n  updateElements(listIndexes: IListIndex[], values: any[]) {\r\n    if (typeof values[0] !== \"object\") return;\r\n    const engine = this.binding.engine;\r\n    const oldListValues = \r\n      engine.getList(\r\n        this.binding.bindingState.info, \r\n        this.binding.bindingState.listIndex\r\n      ) ?? raiseError(`BindingNodeFor.updateElements: oldValues is not found`); \r\n    const parentNode = this.node.parentNode ?? raiseError(`BindingNodeFor.update: parentNode is null`);\r\n\r\n    // DOMから削除\r\n    const currentBindContents = Array.from(this.#bindContentsSet);\r\n    const targetBindContents: IBindContent[] = [];\r\n    for(let i = 0; i < listIndexes.length; i++) {\r\n      const listIndex = listIndexes[i];\r\n      const bindContent = currentBindContents[listIndex.index];\r\n      bindContent.unmount();\r\n      targetBindContents.push(bindContent);\r\n    }\r\n\r\n    // DOMに追加、listIndexを更新\r\n    for(let i = 0; i < listIndexes.length; i++) {\r\n      const listIndex = listIndexes[i];\r\n      const index = listIndex.index;\r\n\r\n      const lastBindContent = currentBindContents[index - 1] ?? null;\r\n      const lastNode = lastBindContent?.lastChildNode ?? this.node;\r\n\r\n      const oldValue = oldListValues[index];\r\n      const targetIndex = values.indexOf(oldValue);\r\n      const prevBindContent = targetBindContents[targetIndex];\r\n\r\n      if (typeof prevBindContent === \"undefined\") {\r\n        // 入れ替えるBindContentがない場合は再描画\r\n        const bindContent = targetBindContents[index];\r\n        bindContent.render();\r\n        bindContent.mountAfter(parentNode, lastNode);\r\n      } else {\r\n        prevBindContent.assignListIndex(listIndex);\r\n        prevBindContent.mountAfter(parentNode, lastNode);\r\n        this.#bindContentByListIndex.set(listIndex, prevBindContent);\r\n        currentBindContents[index] = prevBindContent;\r\n      }\r\n      if (targetIndex >= 0) {\r\n        values[targetIndex] = -1;\r\n      }\r\n    }\r\n    this.#bindContentsSet = new Set<IBindContent>(currentBindContents);\r\n    engine.saveList(\r\n      this.binding.bindingState.info, \r\n      this.binding.bindingState.listIndex, \r\n      this.binding.bindingState.value.slice(0)\r\n    );\r\n  }\r\n}\r\n\r\nexport const createBindingNodeFor: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeFor(binding, node, name, filterFns, event);\r\n  }\r\n","import { NodeType } from \"./types\";\r\n\r\nconst DEFAULT_PROPERTY = \"textContent\";\r\n\r\ntype DefaultPropertyByElementType = {\r\n  [key:string]: string;\r\n}\r\n\r\nconst defaultPropertyByElementType:DefaultPropertyByElementType = {\r\n  \"radio\"   : \"checked\",\r\n  \"checkbox\": \"checked\",\r\n  \"button\"  : \"onclick\",\r\n}\r\n\r\n/**\r\n * HTML要素のデフォルトプロパティを取得\r\n */\r\nconst getDefaultPropertyHTMLElement = (node:Node):string => \r\n  node instanceof HTMLSelectElement || node instanceof HTMLTextAreaElement || node instanceof HTMLOptionElement ? \"value\" : \r\n  node instanceof HTMLButtonElement ? \"onclick\" : \r\n  node instanceof HTMLAnchorElement ? \"onclick\" : \r\n  node instanceof HTMLFormElement ? \"onsubmit\" : \r\n  node instanceof HTMLInputElement ? (defaultPropertyByElementType[node.type] ?? \"value\") :\r\n  DEFAULT_PROPERTY;\r\n\r\ntype DefaultPropertyByKey = {\r\n  [key:string]: string | undefined;\r\n}\r\n\r\nconst _cache: DefaultPropertyByKey = {};\r\n\r\nconst textContentProperty = (node:Node):string => DEFAULT_PROPERTY;\r\n\r\ntype GetDefaultPropertyByNodeType = {\r\n  [key in NodeType]: ((node:Node)=>string) | undefined;\r\n}\r\n\r\nconst getDefaultPropertyByNodeType: GetDefaultPropertyByNodeType = {\r\n  HTMLElement: getDefaultPropertyHTMLElement,\r\n  SVGElement : undefined,\r\n  Text       : textContentProperty,\r\n  Template   : undefined,\r\n}\r\n\r\n/**\r\n * バインド情報でノードプロパティを省略された場合のデフォルトのプロパティ名を取得\r\n * @param node ノード\r\n * @param nodeType ノードタイプ\r\n * @returns {string | undefined} デフォルトのプロパティ名\r\n */\r\nexport function getDefaultName(\r\n  node    : Node, \r\n  nodeType: NodeType\r\n): string | undefined {\r\n  const key = node.constructor.name + \"\\t\" + ((node as HTMLInputElement).type ?? \"\"); // type attribute\r\n  return _cache[key] ?? (_cache[key] = getDefaultPropertyByNodeType[nodeType]?.(node));\r\n}\r\n  ","\r\nconst symbolName = \"state\";\r\n\r\nexport const GetByRefSymbol            : unique symbol = Symbol.for(`${symbolName}.GetByRef`);\r\nexport const SetByRefSymbol            : unique symbol = Symbol.for(`${symbolName}.SetByRef`);\r\nexport const SetCacheableSymbol        : unique symbol = Symbol.for(`${symbolName}.SetCacheable`);\r\nexport const ConnectedCallbackSymbol   : unique symbol = Symbol.for(`${symbolName}.ConnectedCallback`);\r\nexport const DisconnectedCallbackSymbol: unique symbol = Symbol.for(`${symbolName}.DisconnectedCallback`);\r\nexport const ResolveSymbol             : unique symbol = Symbol.for(`${symbolName}.Resolve`);\r\nexport const GetAllSymbol              : unique symbol = Symbol.for(`${symbolName}.GetAll`);\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { getDefaultName } from \"../../BindingBuilder/getDefaultName\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { SetByRefSymbol } from \"../../StateClass/symbols\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nfunction isTwoWayBindable(element: HTMLElement): boolean {\r\n  return element instanceof HTMLInputElement || \r\n    element instanceof HTMLTextAreaElement || \r\n    element instanceof HTMLSelectElement;\r\n}\r\n\r\nconst defaultEventByName: {[key:string]: string} = {\r\n  \"value\"   : \"input\",\r\n  \"checked\" : \"change\",\r\n  \"selected\": \"change\",\r\n};\r\n\r\nclass BindingNodeProperty extends BindingNode {\r\n  get value(): any {\r\n    // @ts-ignore\r\n    return this.node[this.name];\r\n  }\r\n  get filteredValue(): any {\r\n    let value = this.value;\r\n    for(let i = 0; i < this.filters.length; i++) {\r\n      value = this.filters[i](value);\r\n    }\r\n    return value;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n\r\n    const isElement = this.node instanceof HTMLElement;\r\n    if (!isElement) return;\r\n    if (!isTwoWayBindable(this.node)) return;\r\n    const defaultName = getDefaultName(this.node, \"HTMLElement\");\r\n    if (defaultName !== this.name) return;\r\n    const eventName = this.event ?? defaultEventByName[this.name] ?? \"readonly\";\r\n    if (event === \"readonly\" || event === \"ro\") return;\r\n    this.node.addEventListener(eventName, () => {\r\n      const loopContext = this.binding.parentBindContent.currentLoopContext;\r\n      const engine = this.binding.engine;\r\n      const stateProxy = engine.stateProxy;\r\n      const bindingState = this.binding.bindingState;\r\n      const value = this.filteredValue;\r\n      engine.updater.addProcess(() => {\r\n        if (loopContext) {\r\n          engine.setLoopContext(loopContext, async () => {\r\n            // @ts-ignore\r\n            stateProxy[SetByRefSymbol](bindingState.info, bindingState.listIndex, value);\r\n          });\r\n        } else {\r\n          // @ts-ignore\r\n          stateProxy[SetByRefSymbol](bindingState.info, bindingState.listIndex, value);\r\n        }\r\n\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  init() {\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    // @ts-ignore\r\n    this.node[this.name] = value;\r\n  }\r\n}\r\n\r\nexport const createBindingNodeProperty: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeProperty(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeRadio extends BindingNode {\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    const element = this.node as HTMLInputElement;\r\n    element.checked = value.toString() === element.value.toString();\r\n  }\r\n}\r\n\r\nexport const createBindingNodeRadio: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeRadio(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeByNodeFn, CreateBindingNodeFn, IBindingNode } from \"./types\";\r\n\r\nclass BindingNodeStyle extends BindingNode {\r\n  #subName: string;\r\n  get subName():string {\r\n    return this.#subName;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    const [, subName] = this.name.split(\".\");\r\n    this.#subName = subName;\r\n  }\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    const element = this.node as HTMLElement;\r\n    element.style.setProperty(this.subName, value.toString());\r\n  }\r\n}\r\n\r\nexport const createBindingNodeStyle: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeStyle(binding, node, name, filterFns, event);\r\n  }\r\n","import { createBindingNodeAttribute } from \"../DataBinding/BindingNode/BindingNodeAttribute\";\r\nimport { createBindingNodeCheckbox } from \"../DataBinding/BindingNode/BindingNodeCheckbox\";\r\nimport { createBindingNodeClassList } from \"../DataBinding/BindingNode/BindingNodeClassList\";\r\nimport { createBindingNodeClassName } from \"../DataBinding/BindingNode/BindingNodeClassName\";\r\nimport { createBindingNodeEvent } from \"../DataBinding/BindingNode/BindingNodeEvent\";\r\nimport { createBindingNodeIf } from \"../DataBinding/BindingNode/BindingNodeIf\";\r\nimport { createBindingNodeFor } from \"../DataBinding/BindingNode/BindingNodeFor\";\r\nimport { createBindingNodeProperty } from \"../DataBinding/BindingNode/BindingNodeProperty\";\r\nimport { createBindingNodeRadio } from \"../DataBinding/BindingNode/BindingNodeRadio\";\r\nimport { createBindingNodeStyle } from \"../DataBinding/BindingNode/BindingNodeStyle\";\r\nimport { CreateBindingNodeByNodeFn, CreateBindingNodeFn } from \"../DataBinding/BindingNode/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { IFilterText } from \"./types\";\r\n\r\ntype NodePropertyConstructorByName = {[key:string]:CreateBindingNodeFn};\r\ntype NodePropertyConstructorByNameByIsComment = {[key:number]:NodePropertyConstructorByName};\r\n\r\nconst nodePropertyConstructorByNameByIsComment:NodePropertyConstructorByNameByIsComment = {\r\n  0: {\r\n    \"class\"   : createBindingNodeClassList,\r\n    \"checkbox\": createBindingNodeCheckbox,\r\n    \"radio\"   : createBindingNodeRadio,\r\n  },\r\n  1: {\r\n    \"if\" : createBindingNodeIf,\r\n  },\r\n};\r\n\r\ntype NodePropertyConstructorByFirstName = {[key:string]:CreateBindingNodeFn};\r\n\r\nconst nodePropertyConstructorByFirstName:NodePropertyConstructorByFirstName = {\r\n  \"class\": createBindingNodeClassName,\r\n  \"attr\" : createBindingNodeAttribute,\r\n  \"style\": createBindingNodeStyle,\r\n//  \"props\": ComponentProperty,\r\n//  \"popover\": PopoverTarget,\r\n//  \"commandfor\": CommandForTarget,\r\n};\r\n\r\nfunction _getBindingNodeCreator(isComment:boolean, isElement: boolean, propertyName: string): CreateBindingNodeFn {\r\n  const bindingNodeCreatorByName = nodePropertyConstructorByNameByIsComment[isComment ? 1 : 0][propertyName];\r\n  if (typeof bindingNodeCreatorByName !== \"undefined\") {\r\n    return bindingNodeCreatorByName;\r\n  }\r\n  if (isComment && propertyName === \"for\") {\r\n    return createBindingNodeFor;\r\n  }\r\n  if (isComment) {\r\n    raiseError(`getBindingNodeCreator: unknown node property ${propertyName}`);\r\n  }\r\n  const nameElements = propertyName.split(\".\");\r\n  const bindingNodeCreatorByFirstName = nodePropertyConstructorByFirstName[nameElements[0]];\r\n  if (typeof bindingNodeCreatorByFirstName !== \"undefined\") {\r\n    return bindingNodeCreatorByFirstName;\r\n  }\r\n  if (isElement) {\r\n    if (propertyName.startsWith(\"on\")) {\r\n      return createBindingNodeEvent;\r\n    } else {\r\n      return createBindingNodeProperty;\r\n    }\r\n  } else {\r\n    return createBindingNodeProperty;\r\n  }\r\n}\r\n\r\nconst _cache: {[key:string]:CreateBindingNodeFn} = {};\r\n\r\n/**\r\n * バインドのノードプロパティの生成関数を取得する\r\n * @param node ノード\r\n * @param propertyName プロパティ名\r\n * @returns {CreateBindingNodeFn} ノードプロパティのコンストラクタ\r\n */\r\nexport function getBindingNodeCreator(\r\n  node        : Node, \r\n  propertyName: string,\r\n  filterTexts: IFilterText[],\r\n  event       : string | null\r\n): CreateBindingNodeByNodeFn {\r\n  const isComment = node instanceof Comment;\r\n  const isElement = node instanceof Element;\r\n  const key = isComment + \"\\t\" + isElement + \"\\t\" + propertyName;\r\n  const fn = _cache[key] ?? (_cache[key] = _getBindingNodeCreator(isComment, isElement, propertyName));\r\n  return fn(propertyName, filterTexts, event);\r\n}\r\n","import { raiseError } from '../utils';\r\nimport { getResolvedPathInfo } from './getResolvedPathInfo';\r\nimport { IResolvedPathInfo, IStructuredPathInfo } from './types';\r\n\r\n/**\r\n * プロパティ名に\"constructor\"や\"toString\"などの予約語やオブジェクトのプロパティ名を\r\n * 上書きするような名前も指定できるように、Mapを検討したが、そもそもそのような名前を\r\n * 指定することはないと考え、Mapを使わないことにした。\r\n */\r\nconst _cache: { [key:string]: IStructuredPathInfo } = {};\r\n//const _cache: Map<string, IStructuredPathInfo> = new Map();\r\n\r\n/**\r\n * パターン情報を取得します\r\n * @param pattern パターン\r\n * @returns {IPatternInfo} パターン情報\r\n */\r\nclass StructuredPathInfo implements IStructuredPathInfo {\r\n  static id = 0;\r\n  id = ++StructuredPathInfo.id;\r\n  pattern;\r\n  pathSegments;\r\n  lastSegment;\r\n  cumulativePaths;\r\n  cumulativeInfos;\r\n  wildcardPaths;\r\n  wildcardInfos;\r\n  wildcardParentPaths;\r\n  wildcardParentInfos;\r\n  lastWildcardPath;\r\n  lastWildcardInfo;\r\n  parentPath;\r\n  parentInfo;\r\n  wildcardCount;\r\n\r\n  constructor(pattern: string) {\r\n    const getPattern = (_pattern: string): IStructuredPathInfo => {\r\n      return (pattern === _pattern) ? this : getStructuredPathInfo(_pattern);\r\n    };\r\n    const pathSegments = pattern.split(\".\");\r\n    const cumulativePaths = [];\r\n    const cumulativeInfos: IStructuredPathInfo[] = [];\r\n    const wildcardPaths = [];\r\n    const wildcardInfos = [];\r\n    const wildcardParentPaths = [];\r\n    const wildcardParentInfos = [];\r\n    let currentPatternPath = \"\", prevPatternPath = \"\";\r\n    let wildcardCount = 0;\r\n    for(let i = 0; i < pathSegments.length; i++) {\r\n      currentPatternPath += pathSegments[i];\r\n      if (pathSegments[i] === \"*\") {\r\n        wildcardPaths.push(currentPatternPath);\r\n        wildcardInfos.push(getPattern(currentPatternPath));\r\n        wildcardParentPaths.push(prevPatternPath);\r\n        wildcardParentInfos.push(getPattern(prevPatternPath));\r\n        wildcardCount++;\r\n      }\r\n      cumulativePaths.push(currentPatternPath);\r\n      cumulativeInfos.push(getPattern(currentPatternPath));\r\n      prevPatternPath = currentPatternPath;\r\n      currentPatternPath += \".\";\r\n    }\r\n    const lastWildcardPath = wildcardPaths.length > 0 ? wildcardPaths[wildcardPaths.length - 1] : null;\r\n    const parentPath = cumulativePaths.length > 1 ? cumulativePaths[cumulativePaths.length - 2] : null;\r\n    this.pattern = pattern;\r\n    this.pathSegments = pathSegments;\r\n    this.lastSegment = pathSegments[pathSegments.length - 1];\r\n    this.cumulativePaths = cumulativePaths;\r\n    this.cumulativeInfos = cumulativeInfos;\r\n    this.wildcardPaths = wildcardPaths;\r\n    this.wildcardInfos = wildcardInfos;\r\n    this.wildcardParentPaths = wildcardParentPaths;\r\n    this.wildcardParentInfos = wildcardParentInfos;\r\n    this.lastWildcardPath = lastWildcardPath;\r\n    this.lastWildcardInfo = lastWildcardPath ? getPattern(lastWildcardPath) : null;\r\n    this.parentPath = parentPath;\r\n    this.parentInfo = parentPath ? getPattern(parentPath) : null;\r\n    this.wildcardCount = wildcardCount;\r\n  }\r\n}\r\n\r\nconst reservedWords = new Set([\r\n  \"constructor\", \"prototype\", \"__proto__\", \"toString\",\r\n  \"valueOf\", \"hasOwnProperty\", \"isPrototypeOf\",\r\n  \"watch\", \"unwatch\", \"eval\", \"arguments\",\r\n  \"let\", \"var\", \"const\", \"class\", \"function\",\r\n  \"null\", \"true\", \"false\", \"new\", \"return\",\r\n]);\r\n\r\nexport function getStructuredPathInfo(structuredPath: string): IStructuredPathInfo {\r\n  let info: IStructuredPathInfo | undefined;\r\n  info = _cache[structuredPath];\r\n  if (typeof info !== \"undefined\") {\r\n    return info;\r\n  }\r\n  if (reservedWords.has(structuredPath)) {\r\n    raiseError(`getStructuredPathInfo: pattern is reserved word: ${structuredPath}`);\r\n  }\r\n  return (_cache[structuredPath] = new StructuredPathInfo(structuredPath));\r\n}\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { GetByRefSymbol } from \"../../StateClass/symbols\";\r\nimport { IStateProxy } from \"../../StateClass/types\";\r\nimport { getStructuredPathInfo } from \"../../StateProperty/getStructuredPathInfo\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { CreateBindingStateFn, IBindingState } from \"./types\";\r\n\r\nclass BindingState implements IBindingState {\r\n  #binding     : IBinding;\r\n  #pattern     : string;\r\n  #info        : IStructuredPathInfo;\r\n  #listIndexRef: WeakRef<IListIndex> | null = null;\r\n  #state       : IStateProxy;\r\n  #filters     : Filters;\r\n  get pattern(): string {\r\n    return this.#pattern;\r\n  }\r\n  get info() {\r\n    return this.#info;\r\n  }\r\n  get listIndex() {\r\n    if (this.#listIndexRef === null) return null;\r\n    return this.#listIndexRef.deref() ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get state() {\r\n    return this.#state;\r\n  }\r\n  get filters() {\r\n    return this.#filters;\r\n  }\r\n  get binding() {\r\n    return this.#binding;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    state  : IStateProxy, \r\n    pattern: string, \r\n    filters: Filters\r\n  ) {\r\n    this.#binding = binding;\r\n    this.#pattern = pattern;\r\n    this.#info = getStructuredPathInfo(pattern);\r\n    this.#state = state;\r\n    this.#filters = filters;\r\n  }\r\n  get value(): any {\r\n    return this.#state[GetByRefSymbol](this.info, this.listIndex);\r\n  }\r\n  get filteredValue(): any {\r\n    let value = this.value;\r\n    for(let i = 0; i < this.#filters.length; i++) {\r\n      value = this.#filters[i](value);\r\n    }\r\n    return value;\r\n  }\r\n  init(): void {\r\n    if (this.info.wildcardCount > 0) {\r\n      const lastWildcardPath = this.info.lastWildcardPath ?? \r\n        raiseError(`BindingState.init: wildcardLastParentPath is null`);\r\n      const loopContext = this.binding.parentBindContent.loopContext?.find(lastWildcardPath) ?? \r\n        raiseError(`BindingState.init: loopContext is null`);\r\n      this.#listIndexRef = loopContext.listIndexRef;\r\n    }\r\n    this.binding.engine.saveBinding(this.info, this.listIndex, this.binding);\r\n  }\r\n}\r\n\r\nexport const createBindingState: CreateBindingStateFn = \r\n(name: string, filterTexts: IFilterText[]) => \r\n  (binding:IBinding, state: IStateProxy, filters:FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts); // ToDo:ここは、メモ化できる\r\n    return new BindingState(binding, state, name, filterFns);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStateProxy } from \"../../StateClass/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { CreateBindingStateFn, IBindingState } from \"./types\";\r\n\r\nclass BindingStateIndex implements IBindingState {\r\n  #binding     : IBinding;\r\n  #indexNumber : number;\r\n  #listIndexRef: WeakRef<IListIndex> | null = null;\r\n  #state       : IStateProxy;\r\n  #filters     : Filters;\r\n  get pattern(): string {\r\n    return raiseError(\"Not implemented\");\r\n  }\r\n  get info() {\r\n    return raiseError(\"Not implemented\");\r\n  }\r\n  get listIndex() {\r\n    if (this.#listIndexRef === null) return null;\r\n    return this.#listIndexRef.deref() ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get state() {\r\n    return this.#state;\r\n  }\r\n  get filters() {\r\n    return this.#filters;\r\n  }\r\n  get binding() {\r\n    return this.#binding;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    state  : IStateProxy, \r\n    pattern: string, \r\n    filters: Filters\r\n  ) {\r\n    this.#binding = binding;\r\n    const indexNumber = Number(pattern.slice(1));\r\n    if (isNaN(indexNumber)) {\r\n      raiseError(\"BindingStateIndex: pattern is not a number\");\r\n    }\r\n    this.#indexNumber = indexNumber;\r\n    this.#state = state;\r\n    this.#filters = filters;\r\n  }\r\n  get value(): any {\r\n    return this.listIndex?.index ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get filteredValue(): any {\r\n    let value = this.value;\r\n    for(let i = 0; i < this.#filters.length; i++) {\r\n      value = this.#filters[i](value);\r\n    }\r\n    return value;\r\n  }\r\n  init(): void {\r\n    const loopContext = this.binding.parentBindContent.currentLoopContext ??\r\n      raiseError(`BindingState.init: loopContext is null`);\r\n    const loopContexts = loopContext.serialize();\r\n    this.#listIndexRef = loopContexts[this.#indexNumber - 1].listIndexRef ??\r\n      raiseError(`BindingState.init: listIndexRef is null`);\r\n    const listIndex = this.listIndex ?? raiseError(\"listIndex is null\");\r\n    const bindings = this.binding.engine.bindingsByListIndex.get(listIndex);\r\n    if (bindings === undefined) {\r\n      this.binding.engine.bindingsByListIndex.set(listIndex, new Set([this.binding]));\r\n    } else {\r\n      bindings.add(this.binding);\r\n    }\r\n  }\r\n}\r\n\r\nexport const createBindingStateIndex: CreateBindingStateFn = \r\n(name: string, filterTexts: IFilterText[]) => \r\n  (binding:IBinding, state: IStateProxy, filters:FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts); // ToDo:ここは、メモ化できる\r\n\r\n    return new BindingStateIndex(binding, state, name, filterFns);\r\n  }\r\n","import { createBindingState } from \"../DataBinding/BindingState/BindingState\";\r\nimport { createBindingStateIndex } from \"../DataBinding/BindingState/BindingStateIndex\";\r\nimport { CreateBindingStateByStateFn } from \"../DataBinding/BindingState/types\";\r\nimport { IFilterText } from \"./types\";\r\n\r\nconst ereg = new RegExp(/^\\$\\d+$/);\r\n\r\nexport function getBindingStateCreator(\r\n  name       : string, \r\n  filterTexts: IFilterText[]\r\n): CreateBindingStateByStateFn {\r\n  if (ereg.test(name)) {\r\n    return createBindingStateIndex(name, filterTexts);\r\n  } else {\r\n    return createBindingState(name, filterTexts);\r\n  }\r\n}","import { COMMENT_EMBED_MARK, COMMENT_TEMPLATE_MARK, DATA_BIND_ATTRIBUTE } from \"../constants\";\r\nimport { getTemplateById } from \"../Template/registerTemplate\";\r\nimport { raiseError } from \"../utils\";\r\nimport { NodeType } from \"./types\";\r\n\r\nconst COMMENT_EMBED_MARK_LEN = COMMENT_EMBED_MARK.length;\r\nconst COMMENT_TEMPLATE_MARK_LEN = COMMENT_TEMPLATE_MARK.length;\r\n\r\nconst getTextFromContent   = (node:Node):string        => node.textContent?.slice(COMMENT_EMBED_MARK_LEN).trim() ?? \"\";\r\nconst getTextFromAttribute = (node:HTMLElement):string => node.getAttribute(DATA_BIND_ATTRIBUTE) ?? \"\";\r\nconst getTextFromTemplate  = (node:Node):string        => {\r\n  const text = node.textContent?.slice(COMMENT_TEMPLATE_MARK_LEN).trim(); \r\n  const id = Number(text);\r\n  const template = getTemplateById(id) ?? raiseError(`Template not found: ${text}`);\r\n  return template.getAttribute(DATA_BIND_ATTRIBUTE) ?? \"\";\r\n};\r\nconst getTextFromSVGElement = (node:SVGElement):string => node.getAttribute(DATA_BIND_ATTRIBUTE) ?? \"\";\r\n\r\nconst getTextByNodeType = {\r\n  \"Text\":        getTextFromContent,\r\n  \"HTMLElement\": getTextFromAttribute,\r\n  \"Template\":    getTextFromTemplate,\r\n  \"SVGElement\":  getTextFromSVGElement\r\n};\r\n\r\nexport function getDataBindText(nodeType: NodeType, node: Node): string {\r\n  const bindText = getTextByNodeType[nodeType](node as any) ?? \"\";\r\n  if (nodeType === \"Text\") {\r\n    return \"textContent:\" + bindText;\r\n  } else {\r\n    return bindText;\r\n  }\r\n}\r\n","import { raiseError } from \"../utils\";\r\nimport { NodeType } from \"./types\";\r\n\r\nconst createNodeKey = (node:Node):string => node.constructor.name + \"\\t\" + ((node instanceof Comment) ? (node.textContent?.[2] ?? \"\") : \"\");\r\n\r\ntype NodeTypeByNodeKey = {\r\n  [nodeKey:string]:NodeType;\r\n};\r\n\r\nconst nodeTypeByNodeKey:NodeTypeByNodeKey = {};\r\n\r\nconst getNodeTypeByNode = (node:Node):NodeType =>\r\n  (node instanceof Comment && node.textContent?.[2] === \":\") ? \"Text\" : \r\n  (node instanceof HTMLElement) ? \"HTMLElement\" :\r\n  (node instanceof Comment && node.textContent?.[2] === \"|\") ? \"Template\" : \r\n  (node instanceof SVGElement) ? \"SVGElement\" : raiseError(`Unknown NodeType: ${node.nodeType}`);\r\n\r\n/**\r\n * ノードのタイプを取得\r\n * @param node ノード\r\n * @param nodeKey ノードキー\r\n * @returns {NodeType} ノードタイプ\r\n */\r\nexport function getNodeType(\r\n  node   : Node, \r\n  nodeKey: string = createNodeKey(node)\r\n): NodeType {\r\n  return nodeTypeByNodeKey[nodeKey] ?? (nodeTypeByNodeKey[nodeKey] = getNodeTypeByNode(node));\r\n}\r\n","import { IFilterText, IBindText } from \"./types\";\r\n\r\nconst trim = (s:string):string => s.trim();\r\n\r\nconst has = (s:string):boolean => s.length > 0; // check length\r\n\r\nconst re = new RegExp(/^#(.*)#$/);\r\nconst decode = (s:string):string => {\r\n  const m = re.exec(s);\r\n  return m ? decodeURIComponent(m[1]) : s;\r\n};\r\n\r\n/**\r\n * parse filter part\r\n * \"eq,100|falsey\" ---> [Filter(eq, [100]), Filter(falsey)]\r\n */\r\nconst parseFilter = (text:string): IFilterText => {\r\n  const [name, ...options] = text.split(\",\").map(trim);\r\n  return {name, options:options.map(decode)};\r\n};\r\n\r\ntype ReturnParseStateProperty = {property:string,filters:IFilterText[]};\r\n/**\r\n * parse expression\r\n * \"value|eq,100|falsey\" ---> [\"value\", Filter[]]\r\n */\r\nconst parseProperty = (text:string): ReturnParseStateProperty => {\r\n  const [property, ...filterTexts] = text.split(\"|\").map(trim);\r\n  return {property, filters:filterTexts.map(parseFilter)};\r\n};\r\n\r\n/**\r\n * parse expressions\r\n * \"textContent:value|eq,100|falsey\" ---> [\"textContent\", \"value\", Filter[eq, falsey]]\r\n */\r\nconst parseExpression = (expression:string): IBindText => {\r\n  const [ bindExpression, event = null ] = expression.split(\"@\").map(trim);\r\n  const [nodePropertyText, statePropertyText] = bindExpression.split(\":\").map(trim);\r\n  const { property:nodeProperty, filters:inputFilterTexts } = parseProperty(nodePropertyText);\r\n  const { property:stateProperty, filters:outputFilterTexts } = parseProperty(statePropertyText);\r\n  return { nodeProperty, stateProperty, inputFilterTexts, outputFilterTexts, event };\r\n};\r\n\r\n/**\r\n * parse bind text and return BindText[]\r\n */\r\nconst parseExpressions = (text:string): IBindText[] => {\r\n  return text.split(\";\").map(trim).filter(has).map(s => parseExpression(s));\r\n};\r\n\r\nconst cache:{[key:string]: IBindText[]} = {};\r\n\r\n/**\r\n * 取得したバインドテキスト(getBindTextByNodeType)を解析して、バインド情報を取得する\r\n * @param text バインドテキスト\r\n * @param defaultName デフォルト名\r\n * @returns {IBindText[]} バインド情報\r\n */\r\nexport function parseBindText(\r\n  text: string\r\n): IBindText[] {\r\n  if (text.trim() === \"\") {\r\n    return [];\r\n  }\r\n  return cache[text] ?? (cache[text] = parseExpressions(text));\r\n}\r\n","import { NodeType } from \"./types\";\r\n\r\nconst DATASET_BIND_PROPERTY = 'data-bind';\r\n\r\nconst removeAttributeFromElement = (node:Node):void => {\r\n  const element = node as Element;\r\n  element.removeAttribute(DATASET_BIND_PROPERTY);\r\n}\r\n\r\ntype RemoveAttributeByNodeType = {\r\n  [key in NodeType]: ((node:Node)=>void) | undefined;\r\n}\r\n\r\nconst removeAttributeByNodeType:RemoveAttributeByNodeType = {\r\n  HTMLElement: removeAttributeFromElement,\r\n  SVGElement : removeAttributeFromElement,\r\n  Text       : undefined,\r\n  Template   : undefined,\r\n}\r\n\r\n/**\r\n * ノードからdata-bind属性を削除\r\n * @param node ノード\r\n * @param nodeType ノードタイプ\r\n * @returns {Node} ノード\r\n */\r\nexport function removeDataBindAttribute(\r\n  node    : Node, \r\n  nodeType: NodeType\r\n):void {\r\n  return removeAttributeByNodeType[nodeType]?.(node);\r\n}\r\n","import { NodeType } from \"./types\";\r\n\r\nconst replaceTextNodeText = (node:Node):Node => {\r\n  const textNode = document.createTextNode(\"\");\r\n  node.parentNode?.replaceChild(textNode, node);\r\n  return textNode;\r\n}\r\n\r\ntype ReplaceTextNodeFn = {\r\n  [key in NodeType]: ((node:Node)=>Node) | undefined;\r\n}\r\n\r\nconst replaceTextNodeFn:ReplaceTextNodeFn = {\r\n  Text       : replaceTextNodeText,\r\n  HTMLElement: undefined,\r\n  Template   : undefined,\r\n  SVGElement : undefined\r\n}\r\n\r\n/**\r\n * コメントノードをテキストノードに置き換える\r\n * @param node ノード\r\n * @param nodeType ノードタイプ\r\n * @returns {Node} ノード\r\n */\r\nexport function replaceTextNodeFromComment(\r\n  node    : Node, \r\n  nodeType: NodeType\r\n): Node {\r\n  return replaceTextNodeFn[nodeType]?.(node) ?? node;\r\n}\r\n","import { getAbsoluteNodePath } from \"./getAbsoluteNodePath\";\r\nimport { getBindingNodeCreator } from \"./getBindingNodeCreator\";\r\nimport { getBindingStateCreator } from \"./getBindingStateCreator\";\r\nimport { getDataBindText } from \"./getDataBindText\";\r\nimport { getNodeType } from \"./getNodeType\";\r\nimport { parseBindText } from \"./parseBindText\";\r\nimport { removeDataBindAttribute } from \"./removeDataBindAttribute\";\r\nimport { replaceTextNodeFromComment } from \"./replaceTextNodeFromComment\";\r\nimport { IBindingCreator, IBindText, IDataBindAttributes, NodePath, NodeType } from \"./types\";\r\n\r\nclass DataBindAttributes implements IDataBindAttributes {\r\n  nodeType     : NodeType; // ノードの種別\r\n  nodePath     : NodePath; // ノードのルート\r\n  bindTexts    : IBindText[]; // BINDテキストの解析結果\r\n  creatorByText: Map<IBindText, IBindingCreator> = new Map(); // BINDテキストからバインディングクリエイターを取得\r\n  constructor(node: Node) {\r\n    this.nodeType = getNodeType(node);\r\n    const text = getDataBindText(this.nodeType, node);\r\n    // CommentNodeをTextに置換、template.contentの内容が書き換わることに注意\r\n    node = replaceTextNodeFromComment(node, this.nodeType);\r\n    // data-bind属性を削除する\r\n    removeDataBindAttribute(node, this.nodeType);\r\n\r\n    this.nodePath = getAbsoluteNodePath(node);\r\n    this.bindTexts = parseBindText(text);\r\n    for(let i = 0; i < this.bindTexts.length; i++) {\r\n      const bindText = this.bindTexts[i];\r\n      const creator: IBindingCreator = {\r\n        createBindingNode : getBindingNodeCreator(\r\n          node, \r\n          bindText.nodeProperty, \r\n          bindText.inputFilterTexts,\r\n          bindText.event\r\n        ),\r\n        createBindingState: getBindingStateCreator(\r\n          bindText.stateProperty, \r\n          bindText.outputFilterTexts\r\n        ),\r\n      }\r\n      this.creatorByText.set(bindText, creator);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function createDataBindAttributes(node: Node): IDataBindAttributes {\r\n  return new DataBindAttributes(node);\r\n}","import { DATA_BIND_ATTRIBUTE, COMMENT_EMBED_MARK, COMMENT_TEMPLATE_MARK } from \"../constants\";\r\n\r\n/**\r\n * \"@@:\"もしくは\"@@|\"で始まるコメントノードを取得する\r\n */\r\nfunction isCommentNode(node: Node): boolean {\r\n  return node instanceof Comment && (\r\n    (node.textContent?.indexOf(COMMENT_EMBED_MARK) === 0) || (node.textContent?.indexOf(COMMENT_TEMPLATE_MARK) === 0)\r\n  );\r\n} \r\n\r\nexport function getNodesHavingDataBind(root: Node): Node[] {\r\n  const nodes: Node[] = [];\r\n  const walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT, {\r\n    acceptNode(node:Node) {\r\n      return (node instanceof Element) ? \r\n        (node.hasAttribute(DATA_BIND_ATTRIBUTE) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP)\r\n        : (isCommentNode(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP);\r\n    }\r\n  });\r\n  while (walker.nextNode()) {\r\n    nodes.push(walker.currentNode);\r\n  }\r\n  return nodes;\r\n}\r\n\r\n","import { createDataBindAttributes } from \"./createDataBindAttributes\";\r\nimport { getNodesHavingDataBind } from \"./getNodesHavingDataBind\";\r\nimport { IDataBindAttributes } from \"./types\";\r\n\r\nconst listDataBindAttributesById: {[key:number]:IDataBindAttributes[]} = {};\r\n\r\nconst listPathsSetById: {[key:number]:Set<string>} = {};\r\n\r\nconst pathsSetById: {[key:number]:Set<string>} = {};\r\n\r\nfunction getDataBindAttributesFromTemplate(content: DocumentFragment): IDataBindAttributes[] {\r\n  const nodes = getNodesHavingDataBind(content);\r\n  return nodes.map(node => createDataBindAttributes(node));\r\n}\r\n\r\nexport function registerDataBindAttributes(\r\n  id     : number, \r\n  content: DocumentFragment,\r\n  rootId : number = id\r\n): IDataBindAttributes[] {\r\n  const dataBindAttributes = getDataBindAttributesFromTemplate(content);\r\n  const paths = pathsSetById[rootId] ?? (pathsSetById[rootId] = new Set<string>());\r\n  const listPaths = listPathsSetById[rootId] ?? (listPathsSetById[rootId] = new Set<string>());\r\n  for(let i = 0; i < dataBindAttributes.length; i++) {\r\n    const attribute = dataBindAttributes[i];\r\n    for(let j = 0; j < attribute.bindTexts.length; j++) {\r\n      const bindText = attribute.bindTexts[j];\r\n      paths.add(bindText.stateProperty);\r\n      if (bindText.nodeProperty === \"for\") {\r\n        listPaths.add(bindText.stateProperty);\r\n      }\r\n    }\r\n  }\r\n  return listDataBindAttributesById[id] = dataBindAttributes;\r\n}\r\n\r\nexport const getDataBindAttributesById = (id: number): IDataBindAttributes[] => {\r\n  return listDataBindAttributesById[id];\r\n}\r\n\r\nexport const getListPathsSetById = (id: number): Set<string> => {\r\n  return listPathsSetById[id] ?? [];\r\n};\r\n\r\nexport const getPathsSetById = (id: number): Set<string> => {\r\n  return pathsSetById[id] ?? [];\r\n};","\r\nexport function removeEmptyTextNodes(content:DocumentFragment):void {\r\n  Array.from(content.childNodes).forEach(node => {\r\n    if (node.nodeType === Node.TEXT_NODE && !(node.nodeValue ?? \"\").trim()) {\r\n      content.removeChild(node);\r\n    }\r\n  });  \r\n}\r\n","import { registerDataBindAttributes } from \"../BindingBuilder/registerDataBindAttributes\";\r\nimport { raiseError } from \"../utils\";\r\nimport { removeEmptyTextNodes } from \"./removeEmptyTextNodes\";\r\n\r\nconst templateById:Record<number, HTMLTemplateElement> = {};\r\n\r\nexport function registerTemplate(\r\n  id      : number, \r\n  template: HTMLTemplateElement,\r\n  rootId  : number\r\n): number {\r\n  removeEmptyTextNodes(template.content);\r\n  registerDataBindAttributes(id, template.content, rootId);  \r\n  templateById[id] = template;\r\n  return id;\r\n}\r\n\r\nexport function getTemplateById(id: number): HTMLTemplateElement {\r\n  return templateById[id] ?? raiseError(`getTemplateById: template not found: ${id}`);\r\n}","import { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { CreateBindingNodeByNodeFn, IBindingNode } from \"./BindingNode/types\";\r\nimport { CreateBindingStateByStateFn, IBindingState } from \"./BindingState/types\";\r\nimport { IBindContent, IBinding } from \"./types\";\r\n\r\nclass Binding implements IBinding {\r\n  parentBindContent: IBindContent;\r\n  node             : Node;\r\n  engine           : IComponentEngine;\r\n  bindingNode      : IBindingNode;\r\n  bindingState     : IBindingState;\r\n  constructor(\r\n    parentBindContent : IBindContent,\r\n    node              : Node,\r\n    engine            : IComponentEngine,\r\n    createBindingNode : CreateBindingNodeByNodeFn, \r\n    createBindingState: CreateBindingStateByStateFn,\r\n  ) {\r\n    this.parentBindContent = parentBindContent\r\n    this.node = node;\r\n    this.engine = engine\r\n    this.bindingNode = createBindingNode(this, node, engine.inputFilters);\r\n    this.bindingState = createBindingState(this, engine.stateProxy, engine.outputFilters);\r\n  }\r\n\r\n  get bindContents() {\r\n    return this.bindingNode.bindContents;\r\n  }\r\n\r\n  init() {\r\n    this.bindingNode.init();\r\n    this.bindingState.init();\r\n  }\r\n\r\n  render() {\r\n    this.bindingNode.update();\r\n  }\r\n}\r\n\r\nexport function createBinding(\r\n  parentBindContent : IBindContent,\r\n  node              : Node, \r\n  engine            : IComponentEngine, \r\n  createBindingNode : CreateBindingNodeByNodeFn, \r\n  createBindingState: CreateBindingStateByStateFn\r\n): IBinding {\r\n  return new Binding(\r\n    parentBindContent, \r\n    node, \r\n    engine, \r\n    createBindingNode, \r\n    createBindingState\r\n  );\r\n}","import { IBindContent } from \"../DataBinding/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { getStructuredPathInfo } from \"../StateProperty/getStructuredPathInfo\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { ILoopContext } from \"./types\";\r\n\r\nclass LoopContext implements ILoopContext {\r\n  #path     : string;\r\n  #info        : IStructuredPathInfo;\r\n  #listIndexRef: WeakRef<IListIndex> | null;\r\n  #bindContent : IBindContent;\r\n  constructor(\r\n    path    : string | null,\r\n    listIndex  : IListIndex,\r\n    bindContent: IBindContent\r\n  ) {\r\n    this.#path = path ?? raiseError(\"name is required\");\r\n    this.#info = getStructuredPathInfo(this.#path);\r\n    this.#listIndexRef = new WeakRef(listIndex);\r\n    this.#bindContent = bindContent;\r\n  }\r\n  get path(): string {\r\n    return this.#path;\r\n  }\r\n  get info(): IStructuredPathInfo {\r\n    return this.#info;\r\n  }\r\n  get listIndex(): IListIndex {\r\n    return this.#listIndexRef?.deref() ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get listIndexRef(): WeakRef<IListIndex> {\r\n    return this.#listIndexRef ?? raiseError(\"listIndexRef is null\");\r\n  }\r\n  assignListIndex(listIndex: IListIndex): void {\r\n    this.#listIndexRef = new WeakRef(listIndex);\r\n    // 構造は変わらないので、#parentLoopContext、#cacheはクリアする必要はない\r\n  }\r\n  clearListIndex():void {\r\n    this.#listIndexRef = null;\r\n  }\r\n  get bindContent(): IBindContent {\r\n    return this.#bindContent;\r\n  }\r\n\r\n  #parentLoopContext: ILoopContext | null | undefined;\r\n  get parentLoopContext(): ILoopContext | null {\r\n    if (typeof this.#parentLoopContext === \"undefined\") {\r\n      let currentBinding: IBindContent | null = this.bindContent;\r\n      while(currentBinding !== null) {\r\n        if (currentBinding.loopContext !== null && currentBinding.loopContext !== this) {\r\n          this.#parentLoopContext = currentBinding.loopContext;\r\n          break;\r\n        }\r\n        currentBinding = currentBinding.parentBinding?.parentBindContent ?? null;\r\n      }\r\n      if (typeof this.#parentLoopContext === \"undefined\") this.#parentLoopContext = null;\r\n    }\r\n    return this.#parentLoopContext;\r\n  }\r\n\r\n  #cache:Record<string, ILoopContext | null> = {};\r\n  find(name: string): ILoopContext | null {\r\n    let loopContext = this.#cache[name];\r\n    if (typeof loopContext === \"undefined\") {\r\n      let currentLoopContext: ILoopContext | null = this;\r\n      while(currentLoopContext !== null) {\r\n        if (currentLoopContext.path === name) break;\r\n        currentLoopContext = currentLoopContext.parentLoopContext;\r\n      }\r\n      loopContext = this.#cache[name] = currentLoopContext;\r\n    }\r\n    return loopContext;\r\n  }\r\n\r\n  walk(callback: (loopContext: ILoopContext) => void): void {\r\n    let currentLoopContext: ILoopContext | null = this;\r\n    while(currentLoopContext !== null) {\r\n      callback(currentLoopContext);\r\n      currentLoopContext = currentLoopContext.parentLoopContext;\r\n    }\r\n  }\r\n\r\n  serialize(): ILoopContext[] {\r\n    const results: ILoopContext[] = [];\r\n    this.walk((loopContext) => {\r\n      results.unshift(loopContext);\r\n    });\r\n    return results;\r\n  }\r\n\r\n}\r\n\r\n// 生成されたあと、IBindContentのloopContextに登録される\r\n// IBindContentにずっと保持される\r\nexport function createLoopContext(\r\n  pattern: string | null,\r\n  listIndex: IListIndex,\r\n  bindContent: IBindContent\r\n): ILoopContext {\r\n  return new LoopContext(pattern, listIndex, bindContent);\r\n}","import { IBinding } from \"../DataBinding/types\";\r\n\r\nexport function render(bindings: IBinding[]) {\r\n  const bindingsWithSelectElement = [];\r\n  for(let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i];\r\n    if (binding.bindingNode.isSelectElement) {\r\n      bindingsWithSelectElement.push(binding);\r\n    } else {\r\n      binding.render();\r\n    }\r\n  }\r\n  for(let i = 0; i < bindingsWithSelectElement.length; i++) {\r\n    bindingsWithSelectElement[i].render();\r\n  }\r\n}\r\n","import { resolveNodeFromPath } from \"../BindingBuilder/resolveNodeFromPath\";\r\nimport { ILoopContext } from \"../LoopContext/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { getTemplateById } from \"../Template/registerTemplate\";\r\nimport { raiseError } from \"../utils\";\r\nimport { createBinding } from \"./Binding\";\r\nimport { IBindContent, IBinding } from \"./types\";\r\nimport { createLoopContext } from \"../LoopContext/createLoopContext\";\r\nimport { render } from \"../Render/render\";\r\nimport { getDataBindAttributesById } from \"../BindingBuilder/registerDataBindAttributes\";\r\n\r\nfunction createContent(id: number): DocumentFragment {\r\n  const template = getTemplateById(id) ?? \r\n    raiseError(`BindContent: template is not found: ${id}`);\r\n  return document.importNode(template.content, true);\r\n}\r\n\r\nfunction createBindings(\r\n  bindContent: IBindContent, \r\n  id         : number, \r\n  engine     : IComponentEngine, \r\n  content    : DocumentFragment\r\n): IBinding[] {\r\n  const attributes = getDataBindAttributesById(id) ?? \r\n    raiseError(`BindContent: data-bind is not set`);\r\n  const bindings: IBinding[] = [];\r\n  for(let i = 0; i < attributes.length; i++) {\r\n    const attribute = attributes[i];\r\n    const node = resolveNodeFromPath(content, attribute.nodePath) ?? \r\n      raiseError(`BindContent: node is not found: ${attribute.nodePath}`);\r\n    for(let j = 0; j < attribute.bindTexts.length; j++) {\r\n      const bindText = attribute.bindTexts[j];\r\n      const creator = attribute.creatorByText.get(bindText) ?? \r\n        raiseError(`BindContent: creator is not found: ${bindText}`);\r\n      const binding = createBinding(\r\n        bindContent, \r\n        node, \r\n        engine, \r\n        creator.createBindingNode, \r\n        creator.createBindingState\r\n      );\r\n      bindings.push(binding);\r\n    }\r\n  }\r\n  return bindings;\r\n}\r\n\r\nclass BindContent implements IBindContent {\r\n  loopContext  : ILoopContext | null;\r\n  parentBinding: IBinding | null;\r\n  childNodes   : Node[];\r\n  fragment     : DocumentFragment;\r\n  engine       : IComponentEngine | undefined;\r\n  #id;\r\n  get id() {\r\n    return this.#id;\r\n  }\r\n  get isMounted() {\r\n    return this.childNodes.length > 0 && this.childNodes[0].parentNode !== this.fragment;\r\n  }\r\n  get firstChildNode() {\r\n    return this.childNodes[0] ?? null;\r\n  }\r\n  get lastChildNode() {\r\n    return this.childNodes[this.childNodes.length - 1] ?? null;\r\n  }\r\n  getLastNode(parentNode: Node): Node | null {\r\n    const lastBinding = this.bindings[this.bindings.length - 1];\r\n    const lastChildNode = this.lastChildNode;\r\n    if (lastBinding.node === lastChildNode) {\r\n      if (lastBinding.bindContents.size > 0) {\r\n        const childBindContent = Array.from(lastBinding.bindContents).at(-1) ?? raiseError(`BindContent: childBindContent is not found`);\r\n        const lastNode = childBindContent.getLastNode(parentNode);\r\n        if (lastNode !== null) {\r\n          return lastNode;\r\n        }\r\n      }\r\n    }\r\n    if (parentNode !== lastChildNode?.parentNode) {\r\n      return null;\r\n    }\r\n    return lastChildNode;\r\n  }\r\n  #currentLoopContext: ILoopContext | null | undefined;\r\n  get currentLoopContext(): ILoopContext | null {\r\n    if (typeof this.#currentLoopContext === \"undefined\") {\r\n      let bindContent: IBindContent | null = this;\r\n      while(bindContent !== null) {\r\n        if (bindContent.loopContext !== null) break; ;\r\n        bindContent = bindContent.parentBinding?.parentBindContent ?? null;\r\n      }\r\n      this.#currentLoopContext = bindContent?.loopContext ?? null;\r\n    }\r\n    return this.#currentLoopContext;\r\n  }\r\n  constructor(\r\n    parentBinding: IBinding | null,\r\n    id           : number, \r\n    engine       : IComponentEngine, \r\n    loopContext  : string | null,\r\n    listIndex    : IListIndex | null\r\n  ) {\r\n    this.parentBinding = parentBinding;\r\n    this.#id = id;\r\n    this.fragment = createContent(id);\r\n    this.childNodes = Array.from(this.fragment.childNodes);\r\n    this.engine = engine;\r\n    this.loopContext = (listIndex !== null) ? createLoopContext(loopContext, listIndex, this) : null;\r\n    this.bindings = createBindings(\r\n      this, \r\n      id, \r\n      engine, \r\n      this.fragment\r\n    );\r\n  }\r\n  mount(parentNode: Node) {\r\n    parentNode.appendChild(this.fragment);\r\n  }\r\n  mountBefore(parentNode: Node, beforeNode: Node | null) {\r\n    parentNode.insertBefore(this.fragment, beforeNode);\r\n  }\r\n  mountAfter(parentNode: Node, afterNode: Node | null) {\r\n    parentNode.insertBefore(\r\n      this.fragment, \r\n      afterNode?.nextSibling ?? null\r\n    );\r\n  }\r\n  unmount() {\r\n    for(let i = 0; i < this.childNodes.length; i++) {\r\n      this.fragment.appendChild(this.childNodes[i]);\r\n    }\r\n  }\r\n  bindings: IBinding[] = [];\r\n  render() {\r\n    render(this.bindings);\r\n  }\r\n  init() {\r\n    this.bindings.forEach(binding => binding.init());\r\n  }\r\n  assignListIndex(listIndex: IListIndex): void {\r\n    if (this.loopContext == null) raiseError(`BindContent: loopContext is null`);\r\n    this.loopContext.assignListIndex(listIndex);\r\n    this.init();\r\n  }\r\n}\r\n\r\nexport function createBindContent(\r\n  parentBinding: IBinding | null,\r\n  id           : number, \r\n  engine       :IComponentEngine, \r\n  loopContext  : string | null, \r\n  listIndex    :IListIndex | null\r\n):IBindContent {\r\n  const bindContent = new BindContent(\r\n    parentBinding, \r\n    id, \r\n    engine, \r\n    loopContext, \r\n    listIndex\r\n  );\r\n  bindContent.init();\r\n  return bindContent;\r\n}","\r\nimport { IResolvedPathInfo, WildcardType } from './types';\r\nimport { getStructuredPathInfo } from './getStructuredPathInfo';\r\n\r\n/**\r\n * プロパティ名に\"constructor\"や\"toString\"などの予約語やオブジェクトのプロパティ名を\r\n * 上書きするような名前も指定できるように、Mapを検討したが、そもそもそのような名前を\r\n * 指定することはないと考え、Mapを使わないことにした。\r\n */\r\nconst _cache: { [key:string]: IResolvedPathInfo } = {};\r\n//const _cache: Map<string, IResolvedPathInfo> = new Map();\r\n\r\nclass ResolvedPathInfo implements IResolvedPathInfo {\r\n  static id = 0;\r\n  id = ++ResolvedPathInfo.id;\r\n  name;\r\n  elements;\r\n  paths;\r\n  wildcardCount;\r\n  wildcardType;\r\n  wildcardIndexes;\r\n  info;\r\n  constructor(name: string) {\r\n    const elements = name.split(\".\");\r\n    const tmpPatternElements = elements.slice();\r\n    const paths = [];\r\n    let incompleteCount = 0;\r\n    let completeCount = 0;\r\n    let lastPath = \"\";\r\n    let wildcardCount = 0;\r\n    let wildcardType: WildcardType = \"none\";\r\n    let wildcardIndexes: (number | null)[] = [];\r\n    for(let i = 0; i < elements.length; i++) {\r\n      const element = elements[i];\r\n      if (element === \"*\") {\r\n        tmpPatternElements[i] = \"*\";\r\n        wildcardIndexes.push(null);\r\n        incompleteCount++;\r\n        wildcardCount++;\r\n      } else {\r\n        const number = Number(element);\r\n        if (!Number.isNaN(number)) {\r\n          tmpPatternElements[i] = \"*\";\r\n          wildcardIndexes.push(number);\r\n          completeCount++;\r\n          wildcardCount++;\r\n        }\r\n      }\r\n      lastPath += element;\r\n      paths.push(lastPath);\r\n      lastPath += (i < elements.length - 1 ? \".\" : \"\");\r\n    }\r\n    const pattern = tmpPatternElements.join(\".\");\r\n    const info = getStructuredPathInfo(pattern);\r\n    if (incompleteCount > 0 || completeCount > 0) {\r\n      if (incompleteCount === wildcardCount) {\r\n        wildcardType = \"context\";\r\n      } else if (completeCount === wildcardCount) {\r\n        wildcardType = \"all\";\r\n      } else {\r\n        wildcardType = \"partial\";\r\n      }\r\n    }\r\n    this.name = name;\r\n    this.elements = elements;\r\n    this.paths = paths;\r\n    this.wildcardCount = wildcardCount;\r\n    this.wildcardType = wildcardType;\r\n    this.wildcardIndexes = wildcardIndexes;\r\n    this.info = info;\r\n  }\r\n}\r\n\r\nexport function getResolvedPathInfo(name:string):IResolvedPathInfo {\r\n  let nameInfo: IResolvedPathInfo | undefined;\r\n//  return _cache.get(name) ?? (_cache.set(name, nameInfo = new ResolvedPathInfo(name)), nameInfo);\r\n  return _cache[name] ?? (_cache[name] = new ResolvedPathInfo(name));\r\n}","import { IListIndex } from \"./types\";\r\n\r\nclass ListIndex implements IListIndex {\r\n  static id: number = 0;\r\n  id              : number = ++ListIndex.id;\r\n  #parentListIndex: IListIndex | null = null;\r\n  get parentListIndex(): IListIndex | null {\r\n    return this.#parentListIndex;\r\n  }\r\n  index: number;\r\n  get indexes(): number[] {\r\n    const indexes = this.parentListIndex?.indexes ?? [];\r\n    indexes.push(this.index);\r\n    return indexes;\r\n  }\r\n\r\n  get position(): number {\r\n    return (this.parentListIndex?.position ?? -1) + 1;\r\n  }\r\n\r\n  constructor(\r\n    parentListIndex: IListIndex | null,\r\n    index: number\r\n  ) {\r\n    this.#parentListIndex = parentListIndex;\r\n    this.index = index;\r\n  }\r\n  \r\n  truncate(length: number): IListIndex | null {\r\n    let listIndex: IListIndex | null = this;\r\n    while(listIndex !== null) {\r\n      if (listIndex.position < length) return listIndex;\r\n      listIndex = listIndex.parentListIndex;\r\n    }\r\n    return null;\r\n  }\r\n  add(value: number): IListIndex {\r\n    return new ListIndex(this, value);\r\n  }\r\n\r\n  *reverseIterator(): Generator<IListIndex> {\r\n    yield this;\r\n    if (this.parentListIndex !== null) {\r\n      yield* this.parentListIndex.reverseIterator();\r\n    }\r\n    return;\r\n  }\r\n\r\n  *iterator(): Generator<IListIndex> {\r\n    if (this.parentListIndex !== null) {\r\n      yield* this.parentListIndex.iterator();\r\n    }\r\n    yield this;\r\n    return;\r\n  }\r\n\r\n  toString(): string {\r\n    const parentListIndex = this.parentListIndex?.toString();\r\n    return (parentListIndex !== null) ? parentListIndex + \",\" + this.index.toString() : this.index.toString();\r\n  }\r\n\r\n  at(position: number): IListIndex | null {\r\n    let iterator;\r\n    if (position >= 0) {\r\n      iterator = this.iterator();\r\n    } else {\r\n      position = - position - 1 \r\n      iterator = this.reverseIterator();\r\n    }\r\n    let next;\r\n    while(position >= 0) {\r\n      next = iterator.next();\r\n      position--;\r\n    }\r\n    return next?.value ?? null;\r\n  }\r\n  \r\n}\r\n\r\nexport function createListIndex(\r\n  parentListIndex: IListIndex | null,\r\n  index          : number\r\n): IListIndex {\r\n  return new ListIndex(parentListIndex, index);\r\n}\r\n\r\nexport function getMaxListIndexId(): number {\r\n  return ListIndex.id;\r\n}\r\n","import { getMaxListIndexId } from \"../ListIndex/createListIndex\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\n\r\n/**\r\n * 参照用のIDを生成する\r\n * ListIndexのIDは最大値を取得してから計算するため、ListIndexの構築が完了していない場合、重複が発生する可能性がある\r\n */\r\n/**\r\n * ToDo:ListIndexの構築が完了していない状態で、IDを取得すると例外を発生させる仕組みが必要\r\n */\r\nexport function getStatePropertyRefId(info: IStructuredPathInfo, listIndex: IListIndex | null): number {\r\n  const listIndexMaxId = getMaxListIndexId();\r\n  return info.id * (listIndexMaxId + 1) + (listIndex?.id ?? 0);\r\n}","import { IListIndex } from \"../ListIndex/types\";\r\nimport { getResolvedPathInfo } from \"../StateProperty/getResolvedPathInfo\";\r\nimport { IResolvedPathInfo, IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { getStatePropertyRefId } from \"../StatePropertyRef/getStatePropertyRefId\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { ConnectedCallbackSymbol, DisconnectedCallbackSymbol, GetAllSymbol, GetByRefSymbol, ResolveSymbol, SetByRefSymbol, SetCacheableSymbol } from \"./symbols\";\r\nimport { IState, IStateProxy } from \"./types\";\r\nimport { getStructuredPathInfo } from \"../StateProperty/getStructuredPathInfo\";\r\n\r\nconst matchIndexPropertyName = new RegExp(/^\\$(\\d+)$/);\r\nconst CONNECTED_CALLBACK = \"$connectedCallback\";\r\nconst DISCONNECTED_CALLBACK = \"$disconnectedCallback\";\r\n\r\nfunction getListIndex(\r\n  info: IResolvedPathInfo, \r\n  engine: IComponentEngine\r\n): IListIndex | null {\r\n  if (info.info.wildcardCount === 0) {\r\n    return null;\r\n  }\r\n  let listIndex: IListIndex | null = null;\r\n  const lastWildcardPath = info.info.lastWildcardPath ?? \r\n    raiseError(`lastWildcardPath is null`);\r\n  if (info.wildcardType === \"context\") {\r\n    listIndex = engine.getContextListIndex(lastWildcardPath) ?? \r\n      raiseError(`ListIndex not found: ${info.info.pattern}`);\r\n  } else if (info.wildcardType === \"all\") {\r\n    let parentListIndex = null;\r\n    for(let i = 0; i < info.info.wildcardCount; i++) {\r\n      const wildcardParentPattern = info.info.wildcardParentInfos[i] ?? raiseError(`wildcardParentPattern is null`);\r\n      const listIndexes: IListIndex[] = Array.from(engine.getListIndexesSet(wildcardParentPattern, parentListIndex) ?? []);\r\n      const wildcardIndex = info.wildcardIndexes[i] ?? raiseError(`wildcardIndex is null`);\r\n      parentListIndex = listIndexes[wildcardIndex] ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n    }\r\n    listIndex = parentListIndex;\r\n  } else if (info.wildcardType === \"partial\") {\r\n    // ToDo:listIndexを取得する必要がある\r\n  } else if (info.wildcardType === \"none\") {\r\n  }\r\n  return listIndex;\r\n}\r\n\r\nclass StateHandler {\r\n  engine   : IComponentEngine;\r\n  cacheable: boolean = false;\r\n  cache    : {[key:number]:any} = {};\r\n  constructor(engine: IComponentEngine) {\r\n    this.engine = engine;\r\n  }\r\n\r\n  _getByRef(\r\n    target   : Object, \r\n    info     : IStructuredPathInfo,\r\n    listIndex: IListIndex | null,\r\n    receiver : IStateProxy\r\n  ): any {\r\n    if (this.#lastTrackingStack != null && this.#lastTrackingStack !== info) {\r\n      const lastPattern = this.#lastTrackingStack;\r\n      if (lastPattern.parentInfo !== info) {\r\n        this.engine.addDependentProp(lastPattern, info);\r\n      }\r\n    }\r\n\r\n    let refId = 0;\r\n    if (this.cacheable) {\r\n      refId = getStatePropertyRefId(info, listIndex);\r\n      const value = this.cache[refId];\r\n      if (typeof value !== \"undefined\") {\r\n        return value;\r\n      }\r\n      if (refId in this.cache) {\r\n        return undefined;\r\n      }\r\n    }\r\n\r\n    let value;\r\n    try {\r\n      if (info.pattern in target) {\r\n        if (info.wildcardCount > 0) {\r\n          if (listIndex === null) {\r\n            raiseError(`propRef.listIndex is null`);\r\n          }\r\n          return (value = this.engine.setStatePropertyRef(info, listIndex, () => {\r\n            return Reflect.get(target, info.pattern, receiver);\r\n          }));\r\n        } else {\r\n          return (value = Reflect.get(target, info.pattern, receiver));\r\n        }\r\n      } else {\r\n        const parentInfo = info.parentInfo ?? raiseError(`propRef.stateProp.parentInfo is undefined`);\r\n        const parentListIndex = parentInfo.wildcardCount < info.wildcardCount ? (listIndex?.parentListIndex ?? null) : listIndex;\r\n        const parentValue = this.getByRef(target, parentInfo, parentListIndex, receiver);\r\n        const lastSegment = info.lastSegment;\r\n        if (lastSegment === \"*\") {\r\n          const index = listIndex?.index ?? raiseError(`propRef.listIndex?.index is undefined`);\r\n          return (value = Reflect.get(parentValue, index));\r\n        } else {\r\n          return (value = Reflect.get(parentValue, lastSegment));\r\n        }\r\n      }\r\n    } finally {\r\n      if (this.cacheable && !(refId in this.cache)) {\r\n        this.cache[refId] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  #trackingStack: IStructuredPathInfo[] = [];\r\n  #lastTrackingStack: IStructuredPathInfo | null = null;\r\n  setTracking(info: IStructuredPathInfo, callback: () => any): any {\r\n    this.#trackingStack.push(info);\r\n    this.#lastTrackingStack = info;\r\n    try {\r\n      return callback();\r\n    } finally {\r\n      this.#trackingStack.pop();\r\n      this.#lastTrackingStack = this.#trackingStack[this.#trackingStack.length - 1] ?? null;\r\n    }\r\n  }\r\n\r\n  getByRef(\r\n    target   : Object, \r\n    info     : IStructuredPathInfo,\r\n    listIndex: IListIndex | null,\r\n    receiver : IStateProxy\r\n  ): any {\r\n    if (this.engine.trackedGetters.has(info.pattern)) {\r\n      return this.setTracking(info, () => {\r\n        return this._getByRef(target, info, listIndex, receiver);\r\n      });\r\n    } else {\r\n      return this._getByRef(target, info, listIndex, receiver);\r\n    }\r\n\r\n  }\r\n\r\n  setByRef(\r\n    target   : Object, \r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    value    : any, \r\n    receiver : IStateProxy\r\n  ): any {\r\n    try {\r\n      if (info.pattern in target) {\r\n        if (info.wildcardCount > 0) {\r\n          if (listIndex === null) {\r\n            raiseError(`propRef.listIndex is null`);\r\n          }\r\n          return this.engine.setStatePropertyRef(info, listIndex, () => {\r\n            return Reflect.set(target, info.pattern, value, receiver);\r\n          });\r\n        } else {\r\n          return Reflect.set(target, info.pattern, value, receiver);\r\n        }\r\n      } else {\r\n        const parentInfo = info.parentInfo ?? raiseError(`propRef.stateProp.parentInfo is undefined`);\r\n        const parentListIndex = parentInfo.wildcardCount < info.wildcardCount ? (listIndex?.parentListIndex ?? null) : listIndex;\r\n        const parentValue = this.getByRef(target, parentInfo, parentListIndex, receiver);\r\n        const lastSegment = info.lastSegment;\r\n        if (lastSegment === \"*\") {\r\n          const index = listIndex?.index ?? raiseError(`propRef.listIndex?.index is undefined`);\r\n          return Reflect.set(parentValue, index, value);\r\n        } else {\r\n          return Reflect.set(parentValue, lastSegment, value);\r\n        }\r\n      }\r\n    } finally {\r\n      this.engine.updater.addUpdatedStatePropertyRefValue(info, listIndex, value);\r\n    }\r\n  }\r\n\r\n  async setCacheable(callback: () => Promise<void>): Promise<void> {\r\n    this.cacheable = true;\r\n    this.cache = {}\r\n    try {\r\n      await callback();\r\n    } finally {\r\n      this.cacheable = false;\r\n    }\r\n  }\r\n\r\n  [GetByRefSymbol](\r\n    target: Object, \r\n    prop: PropertyKey, \r\n    receiver: IStateProxy\r\n  ):Function {\r\n    const self = this;\r\n    return (pattern: IStructuredPathInfo, listIndex: IListIndex) => \r\n      self.getByRef(target, pattern, listIndex, receiver);\r\n  } \r\n\r\n  [SetByRefSymbol](target: Object, prop: PropertyKey, receiver: IStateProxy):Function {\r\n    const self = this;\r\n    return (pattern: IStructuredPathInfo, listIndex: IListIndex, value: any) => \r\n      self.setByRef(target, pattern, listIndex, value, receiver);\r\n\r\n  }\r\n  [SetCacheableSymbol](target: Object, prop: PropertyKey, receiver: IStateProxy):Function {\r\n    const self = this;\r\n    return async (callback: () => Promise<void>) => {\r\n      await self.setCacheable(callback);\r\n    }\r\n  }\r\n  [ConnectedCallbackSymbol](target: Object, prop: PropertyKey, receiver: IStateProxy):Function {\r\n    return async () => {\r\n      const callback = Reflect.get(target, CONNECTED_CALLBACK);\r\n      if (typeof callback === \"function\") {\r\n        await callback.call(target, receiver);\r\n      }\r\n    };\r\n  }\r\n  [DisconnectedCallbackSymbol](target: Object, prop: PropertyKey, receiver: IStateProxy):Function {\r\n    return async () => {\r\n      const callback = Reflect.get(target, DISCONNECTED_CALLBACK);\r\n      if (typeof callback === \"function\") {\r\n        await callback.call(target, receiver);\r\n      }\r\n    };\r\n  }\r\n  [ResolveSymbol](target: Object, prop: PropertyKey, receiver: IStateProxy):Function {\r\n    const self = this;\r\n    return (path: string, indexes: number[], value?:any): any => {\r\n      const info = getStructuredPathInfo(path);\r\n      let listIndex: IListIndex | null = null;\r\n      for(let i = 0; i < info.wildcardParentInfos.length; i++) {\r\n        const wildcardParentPattern = info.wildcardParentInfos[i] ?? raiseError(`wildcardParentPath is null`);\r\n        const listIndexes: IListIndex[] = Array.from(self.engine.getListIndexesSet(wildcardParentPattern, listIndex) ?? []);\r\n        const index = indexes[i] ?? raiseError(`index is null`);\r\n        listIndex = listIndexes[index] ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n      }\r\n      if (typeof value === \"undefined\") {\r\n        return self.getByRef(target, info, listIndex, receiver);\r\n      } else {\r\n        return self.setByRef(target, info, listIndex, value, receiver);\r\n      }\r\n    };\r\n  } \r\n  [GetAllSymbol](target: Object, prop: PropertyKey, receiver: IStateProxy):Function {\r\n    const self = this;\r\n    const resolve = this[ResolveSymbol](target, prop, receiver);\r\n    return (path: string, indexes?: number[]): any[] => {\r\n      const info = getStructuredPathInfo(path);\r\n      if (this.#lastTrackingStack != null && this.#lastTrackingStack !== info) {\r\n        const lastPattern = this.#lastTrackingStack;\r\n        if (lastPattern.parentInfo !== info) {\r\n          this.engine.addDependentProp(lastPattern, info);\r\n        }\r\n      }\r\n  \r\n      if (typeof indexes === \"undefined\") {\r\n        for(let i = 0; i < info.wildcardInfos.length; i++) {\r\n          const wildcardPattern = info.wildcardInfos[i] ?? raiseError(`wildcardPattern is null`);\r\n          const listIndex = this.engine.getContextListIndex(wildcardPattern.pattern);\r\n          if (listIndex) {\r\n            indexes = listIndex.indexes;\r\n            break;\r\n          }\r\n        }\r\n        if (typeof indexes === \"undefined\") {\r\n          indexes = [];\r\n        }\r\n      }\r\n      const walkWildcardPattern = (\r\n        wildcardParentInfos: IStructuredPathInfo[],\r\n        wildardIndexPos: number,\r\n        listIndex: IListIndex | null,\r\n        indexes: number[],\r\n        indexPos: number,\r\n        parentIndexes: number[],\r\n        results: number[][]\r\n      ) => {\r\n        const wildcardParentPattern = wildcardParentInfos[wildardIndexPos] ?? null;\r\n        if (wildcardParentPattern === null) {\r\n          results.push(parentIndexes);\r\n          return;\r\n        }\r\n        const listIndexSet = self.engine.getListIndexesSet(wildcardParentPattern, listIndex) ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n        const listIndexes = Array.from(listIndexSet);\r\n        const index = indexes[indexPos] ?? null;\r\n        if (index === null) {\r\n          for(let i = 0; i < listIndexes.length; i++) {\r\n            const listIndex = listIndexes[i];\r\n            walkWildcardPattern(\r\n              wildcardParentInfos, \r\n              wildardIndexPos + 1, \r\n              listIndex, \r\n              indexes, \r\n              indexPos + 1, \r\n              parentIndexes.concat(listIndex.index),\r\n              results);\r\n          }\r\n        } else {\r\n          const listIndex = listIndexes[index] ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n          if ((wildardIndexPos + 1) < wildcardParentInfos.length) {\r\n            walkWildcardPattern(\r\n              wildcardParentInfos, \r\n              wildardIndexPos + 1, \r\n              listIndex, \r\n              indexes, \r\n              indexPos + 1, \r\n              parentIndexes.concat(listIndex.index),\r\n              results\r\n            );\r\n          }\r\n        }\r\n      }\r\n      const resultIndexes: number[][] = [];\r\n      walkWildcardPattern(\r\n        info.wildcardParentInfos, \r\n        0, \r\n        null, \r\n        indexes, \r\n        0, \r\n        [], \r\n        resultIndexes\r\n      );\r\n      const resultValues: any[] = [];\r\n      for(let i = 0; i < resultIndexes.length; i++) {\r\n        resultValues.push(resolve(\r\n          info.pattern,\r\n          resultIndexes[i]\r\n        ));\r\n      }\r\n      return resultValues;\r\n    }\r\n  }\r\n\r\n  callableSymbols = new Set([\r\n    GetByRefSymbol, \r\n    SetByRefSymbol, \r\n    SetCacheableSymbol, \r\n    ConnectedCallbackSymbol, \r\n    DisconnectedCallbackSymbol, \r\n    ResolveSymbol, \r\n    GetAllSymbol\r\n  ]);\r\n\r\n  get(\r\n    target  : Object, \r\n    prop    : PropertyKey, \r\n    receiver: IStateProxy\r\n  ): any {\r\n    let value;\r\n    if (typeof prop === \"string\") {\r\n      if (matchIndexPropertyName.test(prop)) {\r\n        const number = prop.slice(1);\r\n        const index = Number(number);\r\n        const ref = this.engine.getLastStatePropertyRef() ?? \r\n          raiseError(`get: this.engine.getLastStatePropertyRef() is null`);\r\n        return ref.listIndex?.at(index - 1)?.index ?? raiseError(`ListIndex not found: ${prop}`);\r\n      } else if (prop === \"$resolve\") {\r\n        return this[ResolveSymbol].apply(this, [target, prop, receiver]);\r\n      } else if (prop === \"$getAll\") {\r\n        return this[GetAllSymbol].apply(this, [target, prop, receiver]);\r\n      } else {\r\n        const resolvedInfo = getResolvedPathInfo(prop);\r\n        const listIndex = getListIndex(resolvedInfo, this.engine);\r\n        value = this.getByRef(\r\n          target, \r\n          resolvedInfo.info, \r\n          listIndex, \r\n          receiver\r\n        );\r\n      }\r\n    } else if (typeof prop === \"symbol\") {\r\n      if (this.callableSymbols.has(prop)) {\r\n        const func = Reflect.get(this, prop) as Function;\r\n        return func.apply(this, [target, prop, receiver]);\r\n      }\r\n      value = Reflect.get(\r\n        target, \r\n        prop, \r\n        receiver\r\n      );\r\n    }\r\n    return value;\r\n  }\r\n\r\n  set(\r\n    target  : Object, \r\n    prop    : PropertyKey, \r\n    value   : any, \r\n    receiver: IStateProxy\r\n  ): boolean {\r\n    if (typeof prop === \"string\") {\r\n      const resolvedInfo = getResolvedPathInfo(prop);\r\n      const listIndex = getListIndex(resolvedInfo, this.engine);\r\n      return this.setByRef(\r\n        target, \r\n        resolvedInfo.info, \r\n        listIndex, \r\n        value, \r\n        receiver\r\n      );\r\n    } else {\r\n      return Reflect.set(\r\n        target, \r\n        prop, \r\n        value, \r\n        receiver\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function createStateProxy(\r\n  engine: IComponentEngine, \r\n  state: Object\r\n): IStateProxy {\r\n  return new Proxy<IState>(state, new StateHandler(engine)) as IStateProxy;\r\n}\r\n\r\n","import { createListIndex } from \"../ListIndex/createListIndex\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { GetByRefSymbol } from \"./symbols\";\r\n\r\nconst BLANK_LISTINDEXES_SET = new Set<IListIndex>();\r\n\r\nfunction buildListIndexTreeSub(\r\n  engine   : IComponentEngine, \r\n  listInfos: Set<IStructuredPathInfo>,\r\n  info     : IStructuredPathInfo,\r\n  listIndex: IListIndex | null, \r\n  value: any[]\r\n): void {\r\n  const oldValue = engine.getList(info, listIndex) ?? [];\r\n  if (oldValue === value) {\r\n    return;\r\n  }\r\n  const oldListIndexesSet = engine.getListIndexesSet(info, listIndex) ?? BLANK_LISTINDEXES_SET;\r\n  const oldListIndexesByItem = Map.groupBy(oldListIndexesSet, listIndex => oldValue[listIndex.index]);\r\n  const newListIndexesSet:Set<IListIndex> = new Set();\r\n  for(let i = 0; i < value.length; i++) {\r\n    const item = value[i];\r\n    const oldListIndexes = oldListIndexesByItem.get(item);\r\n    let curListIndex = oldListIndexes?.shift();\r\n    if (!curListIndex) {\r\n      curListIndex = createListIndex(listIndex, i);\r\n    } else {\r\n      if (curListIndex.index !== i) {\r\n        curListIndex.index = i;\r\n        engine.updater.addUpdatedListIndex(curListIndex);\r\n      }\r\n    }\r\n    newListIndexesSet.add(curListIndex);\r\n  }\r\n  engine.saveListIndexesSet(info, listIndex, newListIndexesSet);\r\n  engine.saveList(info, listIndex, value.slice(0));\r\n\r\n  const searchPath = info.pattern + \".*\";\r\n  for(const info of listInfos) {\r\n    if (searchPath !== info.lastWildcardPath) {\r\n      continue;\r\n    }\r\n    for(const subListIndex of newListIndexesSet) {\r\n      const subValue = engine.stateProxy[GetByRefSymbol](info, subListIndex);\r\n      buildListIndexTreeSub(\r\n        engine, \r\n        listInfos, \r\n        info, \r\n        subListIndex, \r\n        subValue ?? []\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function buildListIndexTree(\r\n  engine   : IComponentEngine, \r\n  info     : IStructuredPathInfo,\r\n  listIndex: IListIndex | null, \r\n  value    : any\r\n): void {\r\n  const listInfos = engine.listInfoSet;\r\n  // 配列じゃなければ何もしない\r\n  if (!engine.listInfoSet.has(info)) {\r\n    return;\r\n  }\r\n  const values = (value ?? []) as any[];\r\n  buildListIndexTreeSub(\r\n    engine, \r\n    engine.listInfoSet, \r\n    info, \r\n    listIndex, \r\n    values\r\n  );\r\n}\r\n","import { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\n\r\nfunction extractListIndexes(\r\n  info: IStructuredPathInfo,\r\n  listIndex: IListIndex | null,\r\n  engine: IComponentEngine,\r\n): IListIndex[] {\r\n  const wildcardParentInfos: IStructuredPathInfo[] = info.wildcardParentInfos ?? [];\r\n  const _extractListIndexes = (pos:number, currentListIndex: IListIndex | null, resultListIndexes: IListIndex[]) => {\r\n    const wildcardParentInfo = wildcardParentInfos[pos];\r\n    if (!wildcardParentInfo) {\r\n      if (currentListIndex) {\r\n        resultListIndexes.push(currentListIndex);\r\n      }\r\n      return;\r\n    }\r\n    const subListIndex = listIndex?.at(pos) ?? null;\r\n    if (subListIndex) {\r\n      _extractListIndexes(pos + 1, subListIndex, resultListIndexes);\r\n    } else {\r\n      const listIndexes = engine.getListIndexesSet(wildcardParentInfo, currentListIndex);\r\n      for(const loopListIndex of listIndexes ?? []) {\r\n        _extractListIndexes(pos + 1, loopListIndex, resultListIndexes);\r\n      }\r\n    }\r\n  }\r\n  const resultListIndexes: IListIndex[] = [];\r\n  _extractListIndexes(0, listIndex, resultListIndexes);\r\n  return resultListIndexes;\r\n}\r\n\r\nfunction _collectAffectedGetters(\r\n  refInfo        : IStructuredPathInfo,\r\n  refListIndex   : IListIndex | null,\r\n  engine         : IComponentEngine,\r\n  resultPathInfos: Set<IStructuredPathInfo>,\r\n  resultRefs     : {info:IStructuredPathInfo, listIndex:IListIndex | null}[],\r\n) {\r\n//  if (engine.listInfoSet.has(refInfo)) return;\r\n  if (resultPathInfos.has(refInfo)) return;\r\n  const dependentPathInfos = engine.dependentTree.get(refInfo);\r\n  for(const dependentPathInfo of dependentPathInfos ?? []) {\r\n    if (engine.listInfoSet.has(refInfo) && dependentPathInfo.parentInfo === refInfo && dependentPathInfo.lastSegment === \"*\") {\r\n      continue;\r\n    }\r\n    let dependentListIndex = null;\r\n    let updateList = false;\r\n    for(let i = dependentPathInfo.wildcardParentInfos.length - 1; i >= 0; i--) {\r\n      const wildcardParentInfo = dependentPathInfo.wildcardParentInfos[i];\r\n      if (resultPathInfos.has(wildcardParentInfo)) {\r\n        updateList = true;\r\n        break;\r\n      }\r\n      const pos = refInfo.wildcardParentInfos.indexOf(wildcardParentInfo);\r\n      if (pos < 0) continue;\r\n      dependentListIndex = refListIndex?.at(pos) ?? null;\r\n      if (dependentListIndex !== null) break;\r\n    }\r\n    if (updateList) {\r\n      continue;\r\n    }\r\n    if (dependentPathInfo.wildcardParentInfos.length > 0) {\r\n      const extractlistIndexes = extractListIndexes(dependentPathInfo, dependentListIndex, engine);\r\n      for(const listIndex of extractlistIndexes) {\r\n        resultRefs.push({info: dependentPathInfo, listIndex});\r\n        _collectAffectedGetters(dependentPathInfo, listIndex, engine, resultPathInfos, resultRefs);\r\n      }\r\n    } else {\r\n      resultRefs.push({info: dependentPathInfo, listIndex: null});\r\n      _collectAffectedGetters(dependentPathInfo, null, engine, resultPathInfos, resultRefs);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport function collectAffectedGetters(\r\n  updateRefs: {info:IStructuredPathInfo, listIndex:IListIndex | null}[],\r\n  engine: IComponentEngine,\r\n): {info:IStructuredPathInfo, listIndex:IListIndex | null}[] {\r\n  const resultPathInfos = new Set<IStructuredPathInfo>();\r\n  const resultRefs: {info:IStructuredPathInfo, listIndex:IListIndex | null}[] = [];\r\n  for(const ref of updateRefs) {\r\n    const info = ref.info;\r\n    const listIndex = ref.listIndex;\r\n    if (resultPathInfos.has(info)) continue;\r\n    _collectAffectedGetters(info, listIndex, engine, resultPathInfos, resultRefs);\r\n    resultPathInfos.add(info);\r\n  }\r\n  return resultRefs;\r\n\r\n}\r\n\r\n","import { IBinding } from \"../DataBinding/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { render } from \"../Render/render\";\r\nimport { buildListIndexTree } from \"../StateClass/buildListIndexTree\";\r\nimport { SetCacheableSymbol } from \"../StateClass/symbols\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { getStatePropertyRefId } from \"../StatePropertyRef/getStatePropertyRefId\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { getGlobalConfig } from \"../WebComponents/getGlobalConfig\";\r\nimport { IUpdater } from \"./types\";\r\nimport { collectAffectedGetters } from \"./collectAffectedGetters\";\r\n\r\ntype UpdatedArrayElementBinding = {\r\n  parentRef: {info: IStructuredPathInfo, listIndex: IListIndex | null};\r\n  binding: IBinding;\r\n  listIndexes: IListIndex[];\r\n  values: any[];\r\n};\r\n\r\nclass Updater implements IUpdater {\r\n  processList      : (() => Promise<void> | void)[] = [];\r\n  updatedProperties: Set<{info:IStructuredPathInfo, listIndex:IListIndex | null} | IListIndex> = \r\n    new Set<{info:IStructuredPathInfo, listIndex:IListIndex | null} | IListIndex>();\r\n  updatedValues    : {[key:number]: any} = {};\r\n  engine           : IComponentEngine;\r\n\r\n  constructor(engine: IComponentEngine) {\r\n    this.engine = engine;\r\n  }\r\n\r\n  addProcess(process: () => Promise<void> | void): void {\r\n    this.processList.push(process);\r\n    this.waitForQueueEntry.resolve();\r\n  }\r\n\r\n  addUpdatedStatePropertyRefValue(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    value    : any\r\n  ): void {\r\n    const refId = getStatePropertyRefId(info, listIndex);\r\n    this.updatedProperties.add({info, listIndex});\r\n    this.updatedValues[refId] = value;\r\n    this.waitForQueueEntry.resolve();\r\n  }\r\n\r\n  addUpdatedListIndex(listIndex: IListIndex): void {\r\n    this.updatedProperties.add(listIndex);\r\n    this.waitForQueueEntry.resolve();\r\n  }\r\n\r\n  terminate(): PromiseWithResolvers<void> {\r\n    const waitForMainLoopTerminate = Promise.withResolvers<void>();\r\n    this.waitForQueueEntry.resolve(waitForMainLoopTerminate);\r\n    return waitForMainLoopTerminate;\r\n  }\r\n\r\n  waitForQueueEntry: PromiseWithResolvers<PromiseWithResolvers<void> | void> = \r\n    Promise.withResolvers<PromiseWithResolvers<void> | void>();\r\n  async main(waitForComponentInit: PromiseWithResolvers<void>) {\r\n    await waitForComponentInit.promise;\r\n    const config = getGlobalConfig();\r\n    while (true) {\r\n      try {\r\n        const waitForMainLoopTerminate: (PromiseWithResolvers<void> | void) = \r\n          await this.waitForQueueEntry.promise;\r\n          config.debug && performance.mark(`start`);\r\n        Updater.updatingCount++;\r\n        try {\r\n          await this.exec();\r\n          if (config.debug) {\r\n            performance.mark(`end`);\r\n            performance.measure(`exec`, `start`, `end`);\r\n            console.log(performance.getEntriesByType(\"measure\"));    \r\n            performance.clearMeasures(`exec`);\r\n            performance.clearMarks(`start`);\r\n            performance.clearMarks(`end`);\r\n          }\r\n        } finally {\r\n          Updater.updatingCount--;\r\n          if (waitForMainLoopTerminate) {\r\n            waitForMainLoopTerminate.resolve();\r\n            break;\r\n          }\r\n        }\r\n      } catch(e) {\r\n        console.error(e);\r\n      } finally {\r\n        this.waitForQueueEntry = Promise.withResolvers<PromiseWithResolvers<void> | void>();\r\n      }\r\n    }\r\n  }\r\n\r\n  async updateState() {\r\n    while(this.processList.length > 0) {\r\n      const processList = this.processList;\r\n      this.processList = [];\r\n      for(let i = 0; i < processList.length; i++) {\r\n        const process = processList[i];\r\n        await process();\r\n      }\r\n    }\r\n  }\r\n\r\n  async rebuild(): Promise<{bindings: IBinding[], arrayElementBindings: UpdatedArrayElementBinding[]}> {\r\n    const retArrayElementBindings: UpdatedArrayElementBinding[] = [];\r\n    const retBindings: IBinding[] = [];\r\n    const engine = this.engine;\r\n    const processedListIndexes = new Set<IListIndex>();\r\n    const processedPropertyRefIdsSet = new Set<number>();\r\n    while(this.updatedProperties.size > 0) {\r\n      const updatedProiperties = Array.from(this.updatedProperties.values());\r\n\r\n      const updatedRefs = []; // 更新されたプロパティ参照のリスト\r\n      const arrayPropertyRefs = [];\r\n      const arrayElementPropertyRefs = [];\r\n      this.updatedProperties.clear();\r\n      for(let i = 0; i < updatedProiperties.length; i++) {\r\n        const item = updatedProiperties[i];\r\n        let bindings;\r\n        if (\"index\" in item) {\r\n          if (processedListIndexes.has(item)) continue;\r\n          const listIndex = item as IListIndex;\r\n          bindings = engine.bindingsByListIndex.get(listIndex);\r\n          processedListIndexes.add(listIndex);\r\n        } else {\r\n          const statePropertyRefId = getStatePropertyRefId(item.info, item.listIndex);\r\n          if (processedPropertyRefIdsSet.has(statePropertyRefId)) continue;\r\n          const statePropertyRef = item as {info:IStructuredPathInfo, listIndex:IListIndex | null};\r\n          if (engine.listInfoSet.has(statePropertyRef.info)) {\r\n            arrayPropertyRefs.push(statePropertyRef);\r\n          }\r\n          if (engine.elementInfoSet.has(statePropertyRef.info)) {\r\n            arrayElementPropertyRefs.push(statePropertyRef);\r\n          }\r\n          bindings = engine.getBindings(item.info, item.listIndex);\r\n          processedPropertyRefIdsSet.add(statePropertyRefId);\r\n          updatedRefs.push(statePropertyRef);\r\n        }\r\n        retBindings.push(...bindings ?? []);\r\n      }\r\n\r\n      // リストインデックスの構築\r\n      const builtStatePropertyRefIds = new Set<number>();\r\n      for(let i = 0; i < arrayPropertyRefs.length; i++) {\r\n        const arrayPropertyRef = arrayPropertyRefs[i];\r\n        const statePropertyRefId = getStatePropertyRefId(arrayPropertyRef.info, arrayPropertyRef.listIndex);\r\n        const value = this.updatedValues[statePropertyRefId] ?? null;\r\n        buildListIndexTree(engine, arrayPropertyRef.info, arrayPropertyRef.listIndex, value);\r\n        builtStatePropertyRefIds.add(statePropertyRefId);\r\n      }\r\n\r\n      const parentRefByRefId: {[parentRefId: number]: {info: IStructuredPathInfo, listIndex: IListIndex | null }} = {};\r\n      const statePropertyRefByStatePropertyRefId = Object.groupBy(arrayElementPropertyRefs, ref => {\r\n        if (ref.info.parentInfo === null) raiseError(`parentInfo is null`);\r\n        const parentInfo = ref.info.parentInfo;\r\n        const parentListIndex = (ref.info.wildcardCount === ref.info.parentInfo.wildcardCount) ?\r\n          ref.listIndex : (ref.listIndex?.parentListIndex ?? null);\r\n        const parentRefId = getStatePropertyRefId(parentInfo, parentListIndex);\r\n        if (!(parentRefId in parentRefByRefId)) {\r\n          parentRefByRefId[parentRefId] = {info: parentInfo, listIndex: parentListIndex};\r\n        }\r\n        return parentRefId;\r\n      });\r\n      for(const [parentRefIdKey, refs] of Object.entries(statePropertyRefByStatePropertyRefId)) {\r\n        const parentRefId = Number(parentRefIdKey);\r\n        if (builtStatePropertyRefIds.has(parentRefId)) continue;\r\n        if (typeof refs === \"undefined\") continue;\r\n        const parentRef = parentRefByRefId[parentRefId];\r\n        if (parentRef === null) continue;\r\n\r\n        const values = [];\r\n        const listIndexes = [];\r\n        for(let j = 0; j < refs.length; j++) {\r\n          const ref = refs[j];\r\n          const statePropertyRefId = getStatePropertyRefId(ref.info, ref.listIndex);\r\n          const value = this.updatedValues[statePropertyRefId] ?? null;\r\n          values.push(value);\r\n          const listIndex = ref.listIndex;\r\n          if (listIndex === null) {\r\n            throw new Error(\"listIndex is null\");\r\n          }\r\n          listIndexes.push(listIndex);\r\n        }\r\n        const bindings = engine.getBindings(parentRef.info, parentRef.listIndex);\r\n        for(const binding of bindings) {\r\n          const arrayElementBinding: UpdatedArrayElementBinding = {\r\n            parentRef,\r\n            binding,\r\n            listIndexes,\r\n            values\r\n          };\r\n          retArrayElementBindings.push(arrayElementBinding);\r\n        }\r\n      }\r\n      \r\n      const updatingRefs = collectAffectedGetters(updatedRefs, engine);\r\n      for(const updatingRef of updatingRefs) {\r\n        const bindings = engine.getBindings(updatingRef.info, updatingRef.listIndex);\r\n        retBindings.push(...bindings ?? []);\r\n      }\r\n      \r\n    }\r\n    this.updatedValues = {};\r\n    return {bindings: retBindings, arrayElementBindings: retArrayElementBindings};\r\n  }\r\n\r\n  async render(bindings: IBinding[]) {\r\n    await this.engine.stateProxy[SetCacheableSymbol](async () => {\r\n      return render(bindings);\r\n    });\r\n  }\r\n\r\n  async exec() {\r\n    while(this.processList.length !== 0 || this.updatedProperties.size !== 0) {\r\n      // update state\r\n      await this.updateState();\r\n      // rebuild\r\n      const { bindings, arrayElementBindings } = await this.rebuild();\r\n      // render\r\n      for(const arrayElementBinding of arrayElementBindings) {\r\n        arrayElementBinding.binding.bindingNode.updateElements(arrayElementBinding.listIndexes, arrayElementBinding.values);\r\n      }\r\n      if (bindings.length > 0) {\r\n        await this.render(bindings);\r\n      }\r\n    }\r\n  }\r\n\r\n  static updatingCount = 0;\r\n}\r\n\r\nexport function createUpdater(engine: IComponentEngine): IUpdater {\r\n  return new Updater(engine);\r\n}\r\n\r\nexport function getUpdatingCount(): number {\r\n  return Updater.updatingCount;\r\n}","export function canHaveShadowRoot(tagName: string): boolean {\r\n  try {\r\n    // 一時的に要素を作成\r\n    const element = document.createElement(tagName);\r\n    // `attachShadow` メソッドが存在し、実行可能かを確認\r\n    return typeof element.attachShadow === \"function\";\r\n  } catch {\r\n    // 無効なタグ名などが渡された場合は false を返す\r\n    return false;\r\n  }\r\n}","import { raiseError } from \"../utils\";\r\nimport { IComponentConfig } from \"../WebComponents/types\";\r\nimport { canHaveShadowRoot } from \"./canHaveShadowRoot\";\r\n\r\nfunction getParentShadowRoot(parentNode: Node | null): ShadowRoot|undefined{\r\n  let node: Node | null = parentNode;\r\n  while(node) {\r\n    if (node instanceof ShadowRoot) {\r\n      return node;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n}\r\n\r\nexport function attachShadow(element: HTMLElement, config: IComponentConfig, styleSheet: CSSStyleSheet): void {\r\n    if (config.enableShadowDom) {\r\n      if (config.extends === null || canHaveShadowRoot(config.extends)) {\r\n        const shadowRoot = element.attachShadow({ mode: 'open' });\r\n        shadowRoot.adoptedStyleSheets = [styleSheet];\r\n      } else {\r\n        raiseError(`ComponentEngine: Shadow DOM not supported for builtin components that extend ${config.extends}`);\r\n      }\r\n    } else {\r\n      const shadowRootOrDocument = getParentShadowRoot(element.parentNode) || document;\r\n      const styleSheets = shadowRootOrDocument.adoptedStyleSheets;\r\n      if (!styleSheets.includes(styleSheet)) {\r\n        shadowRootOrDocument.adoptedStyleSheets = [...styleSheets, styleSheet];\r\n      }\r\n    }\r\n\r\n}","import { createBindContent } from \"../DataBinding/BindContent\";\r\nimport { IBindContent, IBinding } from \"../DataBinding/types\";\r\nimport { FilterWithOptions } from \"../Filter/types\";\r\nimport { IState, IStateProxy } from \"../StateClass/types\";\r\nimport { createStateProxy } from \"../StateClass/createStateProxy\";\r\nimport { IUpdater } from \"../Updater/types\";\r\nimport { createUpdater } from \"../Updater/updater\";\r\nimport { ComponentType, IComponentConfig, IComponentStatic, QuelComponent } from \"../WebComponents/types\";\r\nimport { attachShadow } from \"./attachShadow\";\r\nimport { ISaveInfoByResolvedPathInfo, IComponentEngine } from \"./types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { buildListIndexTree } from \"../StateClass/buildListIndexTree\";\r\nimport { ConnectedCallbackSymbol, DisconnectedCallbackSymbol, GetByRefSymbol, SetCacheableSymbol } from \"../StateClass/symbols\";\r\nimport { ILoopContext } from \"../LoopContext/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { getStructuredPathInfo } from \"../StateProperty/getStructuredPathInfo\";\r\n\r\nexport class ComponentEngine implements IComponentEngine {\r\n  type          : ComponentType = 'autonomous';\r\n  config        : IComponentConfig;\r\n  template      : HTMLTemplateElement;\r\n  styleSheet    : CSSStyleSheet;\r\n  stateClass    : typeof Object;\r\n  state         : IState;\r\n  stateProxy    : IStateProxy;\r\n  updater       : IUpdater;\r\n  inputFilters  : FilterWithOptions;\r\n  outputFilters : FilterWithOptions;\r\n  bindContent   : IBindContent;\r\n  baseClass     : typeof HTMLElement = HTMLElement;\r\n  owner         : QuelComponent;\r\n  trackedGetters: Set<string>;\r\n\r\n  listInfoSet       : Set<IStructuredPathInfo> = new Set();\r\n  elementInfoSet: Set<IStructuredPathInfo> = new Set();\r\n  bindingsByListIndex                  : WeakMap<IListIndex, Set<IBinding>> = new WeakMap();\r\n  dependentTree                        : Map<IStructuredPathInfo, Set<IStructuredPathInfo>> = new Map();\r\n\r\n  #waitForInitialize : PromiseWithResolvers<void> = Promise.withResolvers<void>();\r\n  #loopContext       : ILoopContext | null = null;\r\n  #stackStructuredPathInfo  : IStructuredPathInfo[] = [];\r\n  #stackListIndex    : IListIndex[] = [];\r\n\r\n  constructor(config: IComponentConfig, owner: QuelComponent) {\r\n    this.config = config;\r\n    if (this.config.extends) {\r\n      this.type = 'builtin';\r\n    }\r\n    const componentClass = owner.constructor as IComponentStatic;\r\n    this.template = componentClass.template;\r\n    this.styleSheet = componentClass.styleSheet;\r\n    this.stateClass = componentClass.stateClass;\r\n    this.state = new this.stateClass();\r\n    this.stateProxy = createStateProxy(this, this.state);\r\n    this.updater = createUpdater(this);\r\n    this.inputFilters = componentClass.inputFilters;\r\n    this.outputFilters = componentClass.outputFilters;\r\n    this.owner = owner;\r\n    this.trackedGetters = componentClass.trackedGetters;\r\n    // 依存関係の木を作成する\r\n    const checkDependentProp = (info: IStructuredPathInfo) => {\r\n      const parentInfo = info.parentInfo;\r\n      if (parentInfo === null) return;\r\n      this.addDependentProp(info, parentInfo);\r\n      checkDependentProp(parentInfo);\r\n    }\r\n    for(const path of componentClass.paths) {\r\n      const info = getStructuredPathInfo(path);\r\n      checkDependentProp(info);\r\n    }\r\n    // 配列のプロパティ、配列要素のプロパティを登録する\r\n    for(const listPath of componentClass.listPaths) {\r\n      this.listInfoSet.add(getStructuredPathInfo(listPath));\r\n      this.elementInfoSet.add(getStructuredPathInfo(listPath + \".*\"));\r\n    }\r\n    this.bindContent = createBindContent(null, componentClass.id, this, null, null); // this.stateArrayPropertyNamePatternsが変更になる可能性がある\r\n    for(const info of this.listInfoSet) {\r\n      if (info.wildcardCount > 0) continue;\r\n      const value = this.stateProxy[GetByRefSymbol](info, null)\r\n      buildListIndexTree(this, info, null, value);\r\n    }\r\n  \r\n    this.updater.main(this.#waitForInitialize);\r\n  }\r\n\r\n  async connectedCallback(): Promise<void> {\r\n    attachShadow(this.owner, this.config, this.styleSheet);\r\n    await this.stateProxy[ConnectedCallbackSymbol]();\r\n    await this.stateProxy[SetCacheableSymbol](async () => {\r\n      this.bindContent.render();\r\n    });\r\n    this.bindContent.mount(this.owner.shadowRoot ?? this.owner);\r\n    this.#waitForInitialize.resolve();\r\n  }\r\n\r\n  async disconnectedCallback(): Promise<void> {\r\n    await this.stateProxy[DisconnectedCallbackSymbol]();\r\n  }\r\n\r\n  async setLoopContext(loopContext: ILoopContext, callback: ()=>Promise<void>): Promise<void> {\r\n    try {\r\n      if (this.#loopContext !== null) {\r\n        throw new Error(\"loopContext is already set\");\r\n      }\r\n      this.#loopContext = loopContext;\r\n      await this.asyncSetStatePropertyRef(loopContext.info, loopContext.listIndex, async () => {\r\n        await callback();\r\n      });\r\n    } finally {\r\n      this.#loopContext = null;\r\n    }\r\n  }\r\n\r\n  async asyncSetStatePropertyRef(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex, \r\n    callback : ()=>Promise<any>\r\n  ): Promise<any> {\r\n    this.#stackStructuredPathInfo.push(info);\r\n    this.#stackListIndex.push(listIndex);\r\n    try {\r\n      return await callback();\r\n    } finally {\r\n      this.#stackStructuredPathInfo.pop();\r\n      this.#stackListIndex.pop();\r\n    }\r\n  }\r\n\r\n  setStatePropertyRef(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex, \r\n    callback : ()=>any\r\n  ): any {\r\n    this.#stackStructuredPathInfo.push(info);\r\n    this.#stackListIndex.push(listIndex);\r\n    try {\r\n      return callback();\r\n    } finally {\r\n      this.#stackStructuredPathInfo.pop();\r\n      this.#stackListIndex.pop();\r\n    }\r\n  }\r\n\r\n  getLastStatePropertyRef(): {info:IStructuredPathInfo, listIndex:IListIndex} | null {\r\n    if (this.#stackStructuredPathInfo.length === 0) {\r\n      return null;\r\n    }\r\n    const info = this.#stackStructuredPathInfo[this.#stackStructuredPathInfo.length - 1];\r\n    if (typeof info === \"undefined\") {\r\n      return null;\r\n    }\r\n    const listIndex = this.#stackListIndex[this.#stackListIndex.length - 1];\r\n    if (typeof listIndex === \"undefined\") {\r\n      return null;\r\n    }\r\n    return {info, listIndex};\r\n  }\r\n\r\n  getContextListIndex(structuredPath: string): IListIndex | null{\r\n    const lastRef = this.getLastStatePropertyRef();\r\n    if (lastRef === null) {\r\n      return null;\r\n    }\r\n    const info = lastRef.info;\r\n    const index = info.wildcardPaths.indexOf(structuredPath);\r\n    if (index >= 0) {\r\n      return lastRef.listIndex.at(index) ?? null;\r\n    }\r\n    return null;\r\n  }\r\n  getLoopContexts():ILoopContext[] {\r\n    if (this.#loopContext === null) {\r\n      throw new Error(\"loopContext is null\");\r\n    }\r\n    return this.#loopContext.serialize();\r\n  }\r\n\r\n  #saveInfoByListIndexByResolvedPathInfoId: { [id:number]: WeakMap<IListIndex,ISaveInfoByResolvedPathInfo> } = {};\r\n  #saveInfoByStructuredPathId: { [id:number]: ISaveInfoByResolvedPathInfo } = {};\r\n\r\n  createSaveInfo():ISaveInfoByResolvedPathInfo {\r\n    return {\r\n      list          : null,\r\n      listIndexesSet: null,\r\n      bindings      : [],\r\n    }\r\n  }\r\n\r\n  getSaveInfoByStatePropertyRef(info:IStructuredPathInfo, listIndex:IListIndex | null): ISaveInfoByResolvedPathInfo {\r\n    if (listIndex === null) {\r\n      let saveInfo = this.#saveInfoByStructuredPathId[info.id];\r\n      if (typeof saveInfo === \"undefined\") {\r\n        saveInfo = this.createSaveInfo();\r\n        this.#saveInfoByStructuredPathId[info.id] = saveInfo;\r\n      }\r\n      return saveInfo;\r\n    } else {\r\n      let saveInfoByListIndex = this.#saveInfoByListIndexByResolvedPathInfoId[info.id];\r\n      if (typeof saveInfoByListIndex === \"undefined\") {\r\n        saveInfoByListIndex = new WeakMap<IListIndex, ISaveInfoByResolvedPathInfo>();\r\n        this.#saveInfoByListIndexByResolvedPathInfoId[info.id] = saveInfoByListIndex;\r\n      }\r\n      let saveInfo = saveInfoByListIndex.get(listIndex);\r\n      if (typeof saveInfo === \"undefined\") {\r\n        saveInfo = this.createSaveInfo();\r\n        saveInfoByListIndex.set(listIndex, saveInfo);\r\n      }\r\n      return saveInfo;\r\n    }\r\n  }\r\n  saveBinding(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    binding  : IBinding\r\n  ): void {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    saveInfo.bindings.push(binding);\r\n  }\r\n  saveListIndexesSet(\r\n    info              :IStructuredPathInfo, \r\n    listIndex         :IListIndex | null, \r\n    saveListIndexesSet:Set<IListIndex>\r\n  ): void {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    saveInfo.listIndexesSet = saveListIndexesSet;\r\n  }\r\n  saveList(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null, \r\n    list     :any[]\r\n  ): void {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    saveInfo.list = list;\r\n  }\r\n  getBindings(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null\r\n  ): IBinding[] {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    return saveInfo.bindings;\r\n  }\r\n  getListIndexesSet(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null\r\n  ): Set<IListIndex> | null {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    return saveInfo.listIndexesSet;\r\n  }\r\n  getList(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null\r\n  ): any[] | null {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    return saveInfo.list;\r\n  }\r\n\r\n  addDependentProp(info: IStructuredPathInfo, refInfo: IStructuredPathInfo) {\r\n    let dependents = this.dependentTree.get(refInfo);\r\n    if (typeof dependents === \"undefined\") {\r\n      dependents = new Set<IStructuredPathInfo>();\r\n      this.dependentTree.set(refInfo, dependents);\r\n    }\r\n    dependents.add(info);\r\n  }\r\n}\r\n\r\nexport function createComponentEngine(config: IComponentConfig, component: QuelComponent): IComponentEngine {\r\n  return new ComponentEngine(config, component);\r\n}","import { COMMENT_EMBED_MARK } from \"../constants\";\r\nimport { raiseError } from \"../utils\";\r\n\r\nconst MUSTACHE_REGEXP = /\\{\\{([^\\}]+)\\}\\}/g;\r\nconst MUSTACHE_TYPES:Set<string> = new Set(['if', 'for', 'endif', 'endfor', 'elseif', 'else']);\r\n\r\ntype MustacheType = 'if' | 'for' | 'endif' | 'endfor' | 'elseif' | 'else';\r\ntype MustacheInfo = {\r\n  type: MustacheType;\r\n  remain: string; // after first ':'\r\n  expr: string;\r\n}\r\n\r\nexport function replaceMustacheWithTemplateTag(html: string): string {\r\n  const stack:MustacheInfo[] = [];\r\n  return html.replaceAll(MUSTACHE_REGEXP, (match, expr) => {\r\n    expr = expr.trim();\r\n    const [ type ] = expr.split(':');\r\n    if (!MUSTACHE_TYPES.has(type)) {\r\n      // embed\r\n      return `<!--${COMMENT_EMBED_MARK}${expr}-->`;\r\n    }\r\n    const remain = expr.slice(type.length + 1).trim();\r\n    const currentInfo:MustacheInfo = { type, expr, remain };\r\n    if (type === 'if' || type === 'for') {\r\n      stack.push(currentInfo);\r\n      return `<template data-bind=\"${expr}\">`;\r\n    } else if (type === 'endif') {\r\n      const endTags = [];\r\n      do {\r\n        const info = stack.pop() ?? raiseError('replaceMustacheToTemplateOrEmbed: endif without if');\r\n        if (info.type === 'if') {\r\n          endTags.push('</template>');\r\n          break;\r\n        } else if (info.type === 'elseif') {\r\n          endTags.push('</template>');\r\n        } else {\r\n          raiseError('replaceMustacheToTemplateOrEmbed: endif without if');\r\n        }\r\n      } while(true);\r\n      return endTags.join('');\r\n    } else if (type === 'endfor') {\r\n      const info = stack.pop() ?? raiseError('replaceMustacheToTemplateOrEmbed: endif without if');\r\n      if (info.type === 'for') {\r\n        return '</template>';\r\n      } else {\r\n        raiseError('replaceMustacheToTemplateOrEmbed: endfor without for');\r\n      }\r\n    } else if (type === 'elseif') {\r\n      const lastInfo = stack.at(-1) ?? raiseError('replaceMustacheToTemplateOrEmbed: elseif without if');\r\n      if (lastInfo.type === 'if' || lastInfo.type === 'elseif') {\r\n        stack.push(currentInfo);\r\n        return `</template><template data-bind=\"if:${lastInfo.remain}|not\"><template data-bind=\"if:${remain}\">`;\r\n      } else {\r\n        raiseError('replaceMustacheToTemplateOrEmbed: elseif without if');\r\n      }\r\n    } else if (type === 'else') {\r\n      const lastInfo = stack.at(-1) ?? raiseError('replaceMustacheToTemplateOrEmbed: else without if');\r\n      if (lastInfo.type === 'if') {\r\n        return `</template><template data-bind=\"if:${lastInfo.remain}|not\">`;\r\n      } else {\r\n        raiseError('replaceMustacheToTemplateOrEmbed: else without if');\r\n      }\r\n    } else {\r\n      raiseError('replaceMustacheToTemplateOrEmbed: unknown type');\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n","import { COMMENT_TEMPLATE_MARK, DATA_BIND_ATTRIBUTE } from \"../constants\";\r\nimport { generateId } from \"../GlobalId/generateId\";\r\nimport { registerTemplate } from \"./registerTemplate\";\r\n\r\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\r\n\r\nexport function replaceTemplateTagWithComment(\r\n  id      : number, \r\n  template: HTMLTemplateElement,\r\n  rootId  : number = id\r\n):number {\r\n  // テンプレートの親ノードが存在する場合は、テンプレートをコメントノードに置き換える\r\n  template.parentNode?.replaceChild(document.createComment(`${COMMENT_TEMPLATE_MARK}${id}`), template);\r\n  if (template.namespaceURI === SVG_NS) {\r\n    // SVGタグ内のtemplateタグを想定\r\n    const newTemplate = document.createElement(\"template\");\r\n    for(let childNode of Array.from(template.childNodes)) {\r\n      newTemplate.content.appendChild(childNode);\r\n    }\r\n    const bindText = template.getAttribute(DATA_BIND_ATTRIBUTE);\r\n    newTemplate.setAttribute(DATA_BIND_ATTRIBUTE, bindText ?? \"\");\r\n    template = newTemplate;\r\n  }\r\n  template.content.querySelectorAll(\"template\").forEach(template => {\r\n    replaceTemplateTagWithComment(generateId(), template, rootId);\r\n  });\r\n  registerTemplate(id, template, rootId);\r\n  return id;\r\n}\r\n","import { replaceMustacheWithTemplateTag } from \"./replaceMustacheWithTemplateTag\";\r\nimport { replaceTemplateTagWithComment } from \"./replaceTemplateTagWithComment\";\r\n\r\nexport function registerHtml(id: number, html:string) {\r\n  const template = document.createElement(\"template\");\r\n  template.dataset.id = id.toString();\r\n  template.innerHTML = replaceMustacheWithTemplateTag(html);\r\n  replaceTemplateTagWithComment(id, template);\r\n}","import { Constructor } from \"./types\";\r\n\r\nexport function getBaseClass(extendTagName: string | null):Constructor<HTMLElement> {\r\n  return extendTagName ? (document.createElement(extendTagName).constructor as Constructor<HTMLElement>) : HTMLElement;\r\n}","import { getGlobalConfig } from \"./getGlobalConfig\";\r\nimport { IUserConfig, IComponentConfig } from \"./types\";\r\n\r\nexport function getComponentConfig(userConfig: IUserConfig): IComponentConfig {\r\n  const globalConfig = getGlobalConfig();\r\n  return {\r\n    enableShadowDom: userConfig.enableShadowDom ?? globalConfig.enableShadowDom,\r\n    extends        : userConfig.extends ?? null,\r\n  };\r\n}","import { inputBuiltinFilters, outputBuiltinFilters } from \"../Filter/builtinFilters\";\r\nimport { FilterWithOptions } from \"../Filter/types\";\r\nimport { generateId } from \"../GlobalId/generateId\";\r\nimport { getStateClassById, registerStateClass } from \"../StateClass/registerStateClass\";\r\nimport { getStyleSheetById } from \"../StyleSheet/registerStyleSheet\";\r\nimport { registerCss } from \"../StyleSheet/regsiterCss\";\r\nimport { createComponentEngine } from \"../ComponentEngine/ComponentEngine\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { registerHtml } from \"../Template/registerHtml\";\r\nimport { getTemplateById } from \"../Template/registerTemplate\";\r\nimport { getBaseClass } from \"./getBaseClass\";\r\nimport { getComponentConfig } from \"./getComponentConfig\";\r\nimport { IComponent, QuelComponent, IUserComponentData, IComponentStatic, QuelComponentClass } from \"./types\";\r\nimport { getListPathsSetById, getPathsSetById } from \"../BindingBuilder/registerDataBindAttributes\";\r\n\r\nexport function createComponentClass(componentData: IUserComponentData): QuelComponentClass {\r\n  const componentConfig = getComponentConfig(componentData.config);\r\n  const id = generateId();\r\n  const { html, css, stateClass } = componentData;\r\n  const inputFilters:FilterWithOptions = Object.assign({}, inputBuiltinFilters);\r\n  const outputFilters:FilterWithOptions = Object.assign({}, outputBuiltinFilters);\r\n  registerHtml(id, html);\r\n  registerCss(id, css);\r\n  registerStateClass(id, stateClass);\r\n  const baseClass = getBaseClass(componentConfig.extends);\r\n  const extendTagName = componentConfig.extends;\r\n  return class extends baseClass implements IComponent {\r\n    #engine: IComponentEngine;\r\n\r\n    constructor() {\r\n      super();\r\n      this.#engine = createComponentEngine(componentConfig, this as QuelComponent);\r\n    }\r\n\r\n    connectedCallback() {\r\n      this.#engine.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n      this.#engine.disconnectedCallback();\r\n    }\r\n\r\n    static define(tagName:string) {\r\n      if (extendTagName) {\r\n        customElements.define(tagName, this, { extends: extendTagName });\r\n      } else {\r\n        customElements.define(tagName, this);\r\n      }\r\n    }\r\n\r\n    static get id():number {\r\n      return id;\r\n    }\r\n    static #html:string = html;\r\n    static get html():string {\r\n      return this.#html;\r\n    }\r\n    static set html(value:string) {\r\n      this.#html = value;\r\n      registerHtml(this.id, value);\r\n      this.#template = null;\r\n    }\r\n\r\n    static #css:string = css;\r\n    static get css() {\r\n      return this.#css;\r\n    }\r\n    static set css(value:string) {\r\n      this.#css = value;\r\n      registerCss(this.id, value);\r\n      this.#styleSheet = null;\r\n    }\r\n    static #template: HTMLTemplateElement | null = null;\r\n    static get template():HTMLTemplateElement {\r\n      if (!this.#template) {\r\n        this.#template = getTemplateById(this.id);\r\n      }\r\n      return this.#template;\r\n    }\r\n    static #styleSheet: CSSStyleSheet | null = null;\r\n    static get styleSheet():CSSStyleSheet {\r\n      if (!this.#styleSheet) {\r\n        this.#styleSheet = getStyleSheetById(this.id);\r\n      }\r\n      return this.#styleSheet;\r\n    }\r\n    static #stateClass: typeof Object | null = null;\r\n    static get stateClass():typeof Object {\r\n      if (!this.#stateClass) {\r\n        this.#stateClass = getStateClassById(this.id);\r\n      }\r\n      return this.#stateClass;\r\n    }\r\n    static #inputFilters:FilterWithOptions = inputFilters;\r\n    static get inputFilters():FilterWithOptions {\r\n      return this.#inputFilters;\r\n    }\r\n    static #outputFilters:FilterWithOptions = outputFilters;\r\n    static get outputFilters():FilterWithOptions {\r\n      return this.#outputFilters;\r\n    }\r\n    static get listPaths(): Set<string> {\r\n      return getListPathsSetById(this.id);\r\n    }\r\n    static get paths(): Set<string> {\r\n      return getPathsSetById(this.id);\r\n    }\r\n    static #trackedGetters: Set<string> | null = null;\r\n    static get trackedGetters(): Set<string> {\r\n      if(this.#trackedGetters === null) {\r\n        this.#trackedGetters = new Set<string>();\r\n        let currentProto = this.stateClass.prototype;\r\n        while (currentProto && currentProto !== Object.prototype) {\r\n          const trackedGetters = Object.getOwnPropertyDescriptors(currentProto);\r\n          if (trackedGetters) {\r\n            for (const [key, desc] of Object.entries(trackedGetters)) {\r\n              if (desc.get) {\r\n                this.#trackedGetters.add(key);\r\n              }\r\n            }\r\n          }\r\n          currentProto = Object.getPrototypeOf(currentProto);\r\n        }\r\n      }\r\n      return this.#trackedGetters;\r\n\r\n    }\r\n  } as QuelComponentClass;\r\n}\r\n","import { IUserComponentData } from \"./types\";\r\n\r\nfunction escapeEmbed(html: string): string {\r\n  return html.replaceAll(/\\{\\{([^\\}]+)\\}\\}/g, (match, expr) => {\r\n    return `<!--{{${expr}}}-->`;\r\n  });\r\n}\r\n\r\nfunction unescapeEmbed(html:string):string {\r\n  return html.replaceAll(/<!--\\{\\{([^\\}]+)\\}\\}-->/g, (match, expr) => {\r\n    return `{{${expr}}}`;\r\n  });\r\n}\r\n\r\nexport async function createSingleFileComponent(text: string): Promise<IUserComponentData> {\r\n  const template = document.createElement(\"template\");\r\n  template.innerHTML = escapeEmbed(text);\r\n\r\n  const html = template.content.querySelector(\"template\");\r\n  html?.remove();\r\n\r\n  const script = template.content.querySelector(\"script\");\r\n  const scriptModule = script ? await import(\"data:text/javascript;charset=utf-8,\" + script.text) : {};\r\n  script?.remove();\r\n\r\n  const style = template.content.querySelector(\"style\");\r\n  style?.remove();\r\n\r\n  const stateClass = scriptModule.default ?? class {};\r\n  return {\r\n    text,\r\n    html      : unescapeEmbed(html?.innerHTML ?? \"\").trim(),\r\n    css       : style?.textContent ?? \"\",\r\n    stateClass,\r\n    config    : stateClass.$config ?? {}\r\n  }\r\n}","import { createSingleFileComponent } from \"./createSingleFileComponent\";\r\nimport { IUserComponentData } from \"./types\";\r\n\r\nexport async function loadSingleFileComponent(path: string): Promise<IUserComponentData> {\r\n  const response = await fetch(import.meta.resolve(path));\r\n  const text = await response.text();\r\n  return createSingleFileComponent(text);\r\n}\r\n","import { QuelComponentClass } from \"./types\";\r\n\r\nexport function registerComponentClass(tagName: string, componentClass: QuelComponentClass) {\r\n  componentClass.define(tagName);\r\n}","import { createComponentClass } from \"./createComponentClass\";\r\nimport { loadSingleFileComponent } from \"./loadSingleFileComponent\";\r\nimport { registerComponentClass } from \"./registerComponentClass\";\r\nimport { SingleFileComponents } from \"./types\";\r\n\r\nexport async function registerSingleFileComponents(singleFileComponents:SingleFileComponents):Promise<void> {\r\n  const promises = Promise.all(Object.entries(singleFileComponents).map(async ([tagName, path]) => {\r\n    const componentData = await loadSingleFileComponent(path);\r\n    const componentClass = createComponentClass(componentData);\r\n    registerComponentClass(tagName, componentClass);\r\n  }));\r\n  await promises;\r\n}","import { registerSingleFileComponents as _registerSingleFileComponents } from \"./WebComponents/registerSingleFIleComponents\";\r\nimport { getGlobalConfig as _getGlobalConfig } from \"./WebComponents/getGlobalConfig\";\r\nimport { IConfig } from \"./WebComponents/types\";\r\n\r\nexport function registerSingleFileComponents(singleFileComponents: Record<string, string>) {\r\n  _registerSingleFileComponents(singleFileComponents);\r\n}\r\n\r\nexport const defineComponents = registerSingleFileComponents;\r\n\r\nexport function getGlobalConfig(): IConfig {\r\n  return _getGlobalConfig();\r\n}\r\n\r\n"],"names":["getGlobalConfig","trim","cache","COMMENT_TEMPLATE_MARK_LEN","_cache","registerSingleFileComponents","_registerSingleFileComponents","_getGlobalConfig"],"mappings":"AAEA,MAAM,YAAY,GAAY;AAC5B,IAAA,KAAK,EAAY,KAAK;IACtB,MAAM,EAAW,OAAO;AACxB,IAAA,eAAe,EAAE,IAAI;CACtB,CAAC;SAEcA,iBAAe,GAAA;AAC7B,IAAA,OAAO,YAAY,CAAC;AACtB;;ACTM,SAAU,eAAe,CAAC,MAAa,EAAA;AAC3C,IAAA,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,CAAA,6BAAA,CAA+B,CAAC,CAAC;AAC5D,CAAC;AAEK,SAAU,kBAAkB,CAAC,MAAa,EAAA;AAC9C,IAAA,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,CAAA,4BAAA,CAA8B,CAAC,CAAC;AAC3D,CAAC;AAEK,SAAU,iBAAiB,CAAC,MAAa,EAAA;AAC7C,IAAA,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,CAAA,wBAAA,CAA0B,CAAC,CAAC;AACvD,CAAC;AAEK,SAAU,kBAAkB,CAAC,MAAa,EAAA;AAC9C,IAAA,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,CAAA,yBAAA,CAA2B,CAAC,CAAC;AACxD,CAAC;AAEK,SAAU,eAAe,CAAC,MAAa,EAAA;AAC3C,IAAA,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,CAAA,sBAAA,CAAwB,CAAC,CAAC;AACrD;;ACfA,MAAM,MAAM,GAAGA,iBAAe,EAAE,CAAC;AAEjC,MAAM,EAAE,GAAG,CAAC,OAAiB,KAAI;AAC/B,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AAClD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC9C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACvD,OAAO,KAAK,KAAK,QAAQ,CAAC;AAC5B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,EAAE,GAAG,CAAC,OAAiB,KAAI;AAC/B,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AAClD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC9C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACvD,OAAO,KAAK,KAAK,QAAQ,CAAC;AAC5B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;IAChC,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,SAAS;YAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC1D,OAAO,CAAC,KAAK,CAAC;AAChB,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,EAAE,GAAG,CAAC,OAAiB,KAAI;AAC/B,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AAClD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC9C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACvD,OAAO,KAAK,GAAG,QAAQ,CAAC;AAC1B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,EAAE,GAAG,CAAC,OAAiB,KAAI;AAC/B,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AAClD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC9C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACvD,OAAO,KAAK,IAAI,QAAQ,CAAC;AAC3B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,EAAE,GAAG,CAAC,OAAiB,KAAI;AAC/B,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AAClD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC9C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACvD,OAAO,KAAK,GAAG,QAAQ,CAAC;AAC1B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,EAAE,GAAG,CAAC,OAAiB,KAAI;AAC/B,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AAClD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC9C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACvD,OAAO,KAAK,IAAI,QAAQ,CAAC;AAC3B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;AAChC,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;AACnD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC/C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACxD,OAAO,KAAK,GAAG,QAAQ,CAAC;AAC1B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;AAChC,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;AACnD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC/C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACxD,OAAO,KAAK,GAAG,QAAQ,CAAC;AAC1B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;AAChC,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;AACnD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC/C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACxD,OAAO,KAAK,GAAG,QAAQ,CAAC;AAC1B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;AAChC,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;AACnD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC/C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACxD,OAAO,KAAK,GAAG,QAAQ,CAAC;AAC1B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;IAChC,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAC9B,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC/C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;AACxD,QAAA,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjC,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,OAAiB,KAAI;IACnC,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC;IAC1C,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAC;AAC3D,QAAA,OAAO,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;AACnC,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,EAAE,GAAG,CAAC,OAAiB,KAAI;IAC/B,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;AACxC,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,EAAE,GAAG,CAAC,OAAiB,KAAI;IAC/B,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;AACxC,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;IAChC,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,MAAM,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;AAC3B,QAAA,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC;AAAE,YAAA,OAAO,CAAC,CAAC;AAC7B,QAAA,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC;AAAE,YAAA,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;AAC3C,QAAA,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAChD,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAMC,MAAI,GAAG,CAAC,OAAiB,KAAI;IACjC,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;AACjC,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,OAAiB,KAAI;AAClC,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC;AACrD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,OAAO,CAAC,CAAC;IACjD,OAAO,CAAC,KAAU,KAAI;QACpB,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC1C,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,OAAiB,KAAI;AACnC,IAAA,MAAM,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC;AACvD,IAAA,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAI,KAAK,CAAC,SAAS,CAAC;QAAE,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AACnD,IAAA,MAAM,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC;AACvD,IAAA,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAI,KAAK,CAAC,SAAS,CAAC;QAAE,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IACnD,OAAO,CAAC,KAAU,KAAI;QACpB,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AACvD,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;AAChC,IAAA,MAAM,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;AACpD,IAAA,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAI,KAAK,CAAC,SAAS,CAAC;QAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAChD,MAAM,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC;IACjC,MAAM,SAAS,GAAG,IAAI,CAAC;IACvB,OAAO,CAAC,KAAU,KAAI;QACpB,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AACzD,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;AAChC,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;AACnD,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC/C,OAAO,CAAC,KAAU,KAAI;QACpB,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC3C,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;IAChC,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACvD,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;IAChC,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,OAAO,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC7B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,OAAiB,KAAI;IAClC,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;AAC3B,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,OAAiB,KAAI;IAClC,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAC9B,IAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,OAAO,CAAC,CAAC;IACjD,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC;AACjD,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,OAAiB,KAAI;IAClC,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAC9B,IAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,OAAO,CAAC,CAAC;IACjD,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC;AACjD,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,IAAI,GAAG,CAAC,OAAiB,KAAI;IACjC,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAC9B,IAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAChD,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC;AAChD,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,OAAO,GAAG,CAAC,OAAiB,KAAI;IACpC,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAC9B,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,CAAC,QAAQ,CAAC;QAAE,kBAAkB,CAAC,SAAS,CAAC,CAAC;IACnD,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,OAAO,KAAK,KAAK,QAAQ;YAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAC5D,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;AACvC,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,IAAI,GAAG,CAAC,OAAiB,KAAI;IACrB,OAAO,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO;IAC1C,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,IAAI,EAAE,KAAK,YAAY,IAAI,CAAC;YAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QACvD,OAAO,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjD,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,IAAI,GAAG,CAAC,OAAiB,KAAI;IACrB,OAAO,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO;IAC1C,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,IAAI,EAAE,KAAK,YAAY,IAAI,CAAC;YAAE,eAAe,CAAC,MAAM,CAAC,CAAC;QACtD,OAAO,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjD,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,OAAiB,KAAI;IACzB,OAAO,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO;IAC1C,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,IAAI,EAAE,KAAK,YAAY,IAAI,CAAC;YAAE,eAAe,CAAC,UAAU,CAAC,CAAC;QAC1D,OAAO,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC7C,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,GAAG,GAAG,CAAC,OAAiB,KAAI;IAChC,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC;IAChC,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,IAAI,EAAE,KAAK,YAAY,IAAI,CAAC;YAAE,eAAe,CAAC,KAAK,CAAC,CAAC;QACrD,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC5C,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACjE,QAAA,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACxD,OAAO,CAAA,EAAG,IAAI,CAAA,EAAG,GAAG,CAAA,EAAG,KAAK,CAAA,EAAG,GAAG,CAAA,EAAG,GAAG,CAAA,CAAE,CAAC;AAC7C,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,OAAiB,KAAI;AAClC,IAAA,OAAO,CAAC,KAAU,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACxI,CAAC,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,OAAiB,KAAI;AACnC,IAAA,OAAO,CAAC,KAAU,KAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACxI,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,OAAiB,KAAI;AACrC,IAAA,MAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC;IACxD,OAAO,CAAC,KAAU,KAAI;QACpB,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;AAAE,YAAA,OAAO,GAAG,CAAC;AAC/H,QAAA,OAAO,KAAK,CAAC;AACf,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,OAAO,GAAG,CAAC,OAAiB,KAAI;IACpC,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;AACxB,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,OAAiB,KAAI;IACnC,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AACvB,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,OAAiB,KAAI;IACnC,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AACvB,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,OAAiB,KAAI;IAClC,OAAO,CAAC,KAAU,KAAI;AACpB,QAAA,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC;AACvC,KAAC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,cAAc,GAAsB;IACxC,EAAE;IACF,EAAE;IACF,GAAG;IAEH,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IAEF,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IAEH,GAAG;IACH,MAAM;IACN,EAAE;IACF,EAAE;IACF,GAAG;UACHA,MAAI;IACJ,KAAK;IACL,MAAM;IACN,GAAG;IACH,GAAG;IACH,GAAG;IAEH,GAAG;IACH,KAAK;IACL,KAAK;IACL,KAAK;IACL,IAAI;IACJ,OAAO;IAEP,IAAI;IACJ,IAAI;IACJ,QAAQ;IACR,GAAG;IAEH,KAAK;IACL,MAAM;IACN,QAAQ;IAER,OAAO;IACP,MAAM;IACN,MAAM;AACN,IAAA,MAAM,EAAE,KAAK;CACd,CAAC;AAEK,MAAM,oBAAoB,GAAG,cAAc,CAAC;AAC5C,MAAM,mBAAmB,GAAG,cAAc;;AC7XjD,IAAI,EAAE,GAAG,CAAC,CAAC;SAEK,UAAU,GAAA;IACxB,OAAO,EAAE,EAAE,CAAC;AACd;;ACJM,SAAU,UAAU,CAAC,OAAe,EAAA;AACxC,IAAA,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3B;;ACDA,MAAM,cAAc,GAAiC,EAAE,CAAC;AAExC,SAAA,kBAAkB,CAAC,EAAU,EAAE,UAAyB,EAAA;AACtE,IAAA,cAAc,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;AAClC,CAAC;AAEK,SAAU,iBAAiB,CAAC,EAAU,EAAA;IAC1C,OAAO,cAAc,CAAC,EAAE,CAAC,IAAI,UAAU,CAAC,CAA4C,yCAAA,EAAA,EAAE,CAAE,CAAA,CAAC,CAAC;AAC5F;;ACRA,MAAM,cAAc,GAAiC,EAAE,CAAC;AAExC,SAAA,kBAAkB,CAAC,EAAU,EAAE,GAAkB,EAAA;AAC/D,IAAA,cAAc,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;AAC3B,CAAC;AAEK,SAAU,iBAAiB,CAAC,EAAU,EAAA;IAC1C,OAAO,cAAc,CAAC,EAAE,CAAC,IAAI,UAAU,CAAC,CAA4C,yCAAA,EAAA,EAAE,CAAE,CAAA,CAAC,CAAC;AAC5F;;ACRgB,SAAA,WAAW,CAAC,EAAU,EAAE,GAAW,EAAA;AACjD,IAAA,MAAM,UAAU,GAAG,IAAI,aAAa,EAAE,CAAC;AACvC,IAAA,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC5B,IAAA,kBAAkB,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;AACrC;;ACJgB,SAAA,mBAAmB,CAAC,IAAU,EAAE,IAAc,EAAA;IAC5D,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7E;;ACFM,SAAU,mBAAmB,CAAC,IAAU,EAAA;IAC5C,IAAI,YAAY,GAAa,EAAE,CAAC;AAChC,IAAA,OAAM,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;AAC9B,QAAA,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAW,CAAC;AACpE,QAAA,YAAY,GAAG,CAAE,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,YAAY,CAAE,CAAC;AAC7D,QAAA,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;KACxB;AACD,IAAA,OAAO,YAAY,CAAC;AACtB;;ACNA,SAAS,YAAY,CAAC,OAAyB,EAAE,IAAiB,EAAA;IAChE,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,IAAA,IAAI,CAAC,MAAM;AAAE,QAAA,UAAU,CAAC,CAAA,0CAAA,EAA6C,IAAI,CAAA,CAAE,CAAC,CAAC;AAC7E,IAAA,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC9B,CAAC;AAED,MAAMC,OAAK,GAAiC,IAAI,GAAG,EAAE,CAAC;AAEtC,SAAA,aAAa,CAAC,OAAyB,EAAE,KAAoB,EAAA;IAC3E,IAAI,MAAM,GAAGA,OAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC9B,IAAA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QACjC,MAAM,GAAG,EAAE,CAAC;AACZ,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,YAAA,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9C;AACD,QAAAA,OAAK,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAC1B;AACD,IAAA,OAAO,MAAM,CAAC;AAChB;;MChBa,WAAW,CAAA;AACtB,IAAA,QAAQ,CAAW;AACnB,IAAA,KAAK,CAAO;AACZ,IAAA,KAAK,CAAS;AACd,IAAA,QAAQ,CAAU;AAClB,IAAA,MAAM,CAAgB;AACtB,IAAA,aAAa,GAAsB,IAAI,GAAG,EAAgB,CAAC;AAC3D,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AACD,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;AACD,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AACD,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IACD,WACE,CAAA,OAAiB,EACjB,IAAY,EACZ,IAAc,EACd,OAAgB,EAChB,KAAqB,EAAA;AAErB,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;IACD,IAAI,GAAA;KACH;IACD,MAAM,GAAA;QACJ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;KAC3D;AACD,IAAA,WAAW,CAAC,KAAU,EAAA;QACpB,UAAU,CAAC,CAA0C,wCAAA,CAAA,CAAC,CAAC;KACxD;IACD,cAAc,CAAC,WAAyB,EAAE,MAAa,EAAA;QACrD,UAAU,CAAC,CAA6C,2CAAA,CAAA,CAAC,CAAC;KAC3D;AACD,IAAA,IAAI,eAAe,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,IAAI,YAAY,iBAAiB,CAAC;KAC/C;AACF;;ACnDD,MAAM,oBAAqB,SAAQ,WAAW,CAAA;AAC5C,IAAA,QAAQ,CAAS;AACjB,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,WACE,CAAA,OAAiB,EACjB,IAAa,EACb,IAAe,EACf,OAAgB,EAChB,KAAsB,EAAA;QAEtB,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3C,QAAA,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KACzB;AACD,IAAA,WAAW,CAAC,KAAS,EAAA;AACnB,QAAA,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAChE,KAAK,GAAG,EAAE,CAAC;SACZ;AACD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAe,CAAC;AACrC,QAAA,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;KACtD;AACF,CAAA;AAEM,MAAM,0BAA0B,GACvC,CAAC,IAAY,EAAE,WAA0B,EAAE,KAAoB,KAC7D,CAAC,OAAgB,EAAE,IAAU,EAAE,OAA0B,KAAI;IAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,IAAA,OAAO,IAAI,oBAAoB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACzE,CAAC;;AC7BH,MAAM,mBAAoB,SAAQ,WAAW,CAAA;AAC3C,IAAA,WAAW,CAAC,KAAS,EAAA;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACzB,UAAU,CAAC,CAAgD,8CAAA,CAAA,CAAG,CAAC;SAChE;AACD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAwB,CAAC;QAC9C,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAC9E;AACF,CAAA;AAEM,MAAM,yBAAyB,GACtC,CAAC,IAAY,EAAE,WAA0B,EAAE,KAAoB,KAC7D,CAAC,OAAgB,EAAE,IAAU,EAAE,OAA0B,KAAI;IAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,IAAA,OAAO,IAAI,mBAAmB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACxE,CAAC;;ACfH,MAAM,oBAAqB,SAAQ,WAAW,CAAA;AAC5C,IAAA,WAAW,CAAC,KAAS,EAAA;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACzB,UAAU,CAAC,CAAiD,+CAAA,CAAA,CAAC,CAAC;SAC/D;AACD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAe,CAAC;QACrC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACrC;AACF,CAAA;AAEM,MAAM,0BAA0B,GACvC,CAAC,IAAY,EAAE,WAA0B,EAAE,KAAoB,KAC7D,CAAC,OAAgB,EAAE,IAAU,EAAE,OAA0B,KAAI;IAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,IAAA,OAAO,IAAI,oBAAoB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACzE,CAAC;;ACfH,MAAM,oBAAqB,SAAQ,WAAW,CAAA;AAC5C,IAAA,QAAQ,CAAS;AACjB,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,WACE,CAAA,OAAiB,EACjB,IAAa,EACb,IAAe,EACf,OAAgB,EAChB,KAAsB,EAAA;QAEtB,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3C,QAAA,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KACzB;AAED,IAAA,WAAW,CAAC,KAAS,EAAA;AACnB,QAAA,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;YAC9B,UAAU,CAAC,CAAmD,iDAAA,CAAA,CAAC,CAAC;SACjE;AACD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAe,CAAC;QACrC,IAAI,KAAK,EAAE;YACT,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACrC;aAAM;YACL,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxC;KACF;AACF,CAAA;AAEM,MAAM,0BAA0B,GACvC,CAAC,IAAY,EAAE,WAA0B,EAAE,KAAoB,KAC7D,CAAC,OAAgB,EAAE,IAAU,EAAE,OAA0B,KAAI;IAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,IAAA,OAAO,IAAI,oBAAoB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACzE,CAAC;;ACpCH,MAAM,gBAAiB,SAAQ,WAAW,CAAA;AACxC,IAAA,QAAQ,CAAa;IACrB,WACE,CAAA,OAAiB,EACjB,IAAa,EACb,IAAe,EACf,OAAgB,EAChB,KAAsB,EAAA;QAEtB,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,OAAO,GAAG,IAAmB,CAAC;AACpC,QAAA,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAO,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KACtE;AACD,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,MAAM,GAAA;;KAEL;AAED,IAAA,OAAO,CAAC,CAAQ,EAAA;AACd,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;AAC/C,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AACnC,QAAA,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AACrC,QAAA,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;QACtE,MAAM,OAAO,GAAG,WAAW,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AACzF,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;AAC1B,QAAA,IAAI,MAAM,KAAK,gBAAgB,EAAE;YAC/B,CAAC,CAAC,cAAc,EAAE,CAAC;SACpB;QACD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,YAAW;AAChD,YAAA,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;AACjC,YAAA,MAAM,WAAW,GAAG,OAAO,KAAK,CAAC;AACjC,YAAA,OAAO,CAAC,UAAU,CAAC,YAAW;gBAC5B,IAAI,WAAW,EAAE;oBACf,MAAM,MAAM,CAAC,cAAc,CAAC,WAAW,EAAE,YAAW;AAClD,wBAAA,IAAI,WAAW,KAAK,UAAU,EAAE;AAC9B,4BAAA,MAAM,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC;yBAGzD;AACH,qBAAC,CAAC,CAAC;iBACJ;qBAAM;AACL,oBAAA,IAAI,WAAW,KAAK,UAAU,EAAE;AAC9B,wBAAA,MAAM,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC;qBAGzD;iBACF;AACH,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;AACF,CAAA;AAEM,MAAM,sBAAsB,GACnC,CAAC,IAAY,EAAE,WAA0B,EAAE,KAAoB,KAC7D,CAAC,OAAgB,EAAE,IAAU,EAAE,OAA0B,KAAI;IAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,IAAA,OAAO,IAAI,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACrE,CAAC;;ACpEI,MAAM,mBAAmB,GAAG,WAAW,CAAC;AACxC,MAAM,kBAAkB,GAAG,KAAK,CAAC;AACjC,MAAM,qBAAqB,GAAG,KAAK,CAAC;;ACI3C,MAAMC,2BAAyB,GAAG,qBAAqB,CAAC,MAAM,CAAC;AAEzD,MAAO,gBAAiB,SAAQ,WAAW,CAAA;AAC/C,IAAA,GAAG,CAAS;AACZ,IAAA,IAAI,EAAE,GAAA;QACJ,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;IACD,WACE,CAAA,OAAiB,EACjB,IAAa,EACb,IAAe,EACf,OAAgB,EAChB,KAAsB,EAAA;QAEtB,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3C,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAACA,2BAAyB,CAAC,IAAI,UAAU,CAAC,mCAAmC,CAAC,CAAC;AACtH,QAAA,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;KACvB;AAEF;;AChBD,MAAM,aAAc,SAAQ,gBAAgB,CAAA;AAC1C,IAAA,YAAY,CAAe;AAC3B,IAAA,iBAAiB,CAAoB;AACrC,IAAA,kBAAkB,GAAsB,IAAI,GAAG,EAAE,CAAC;AAClD,IAAA,aAAa,CAAoB;AAEjC,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAED,WACE,CAAA,OAAiB,EACjB,IAAa,EACb,IAAe,EACf,OAAgB,EAChB,KAAsB,EAAA;QAEtB,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,iBAAiB,CACnC,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,OAAO,CAAC,MAAM,EACnB,EAAE,EACF,IAAI,CACL,CAAC;AACF,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;KAC5E;AAED,IAAA,WAAW,CAAC,KAAS,EAAA;AACnB,QAAA,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;YAC9B,UAAU,CAAC,CAA4C,0CAAA,CAAA,CAAC,CAAC;SAC1D;AACD,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;AACxC,QAAA,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,UAAU,CAAC,CAA0C,wCAAA,CAAA,CAAC,CAAC;SACxD;QACD,IAAI,KAAK,EAAE;AACT,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;AAC3B,YAAA,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACjE,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC;SAC7C;aAAM;AACL,YAAA,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;AAC5B,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC;SAC9C;KACF;AACF,CAAA;AAEM,MAAM,mBAAmB,GAChC,CAAC,IAAY,EAAE,WAA0B,EAAE,KAAoB,KAC7D,CAAC,OAAgB,EAAE,IAAU,EAAE,OAA0B,KAAI;IAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,IAAA,OAAO,IAAI,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAClE,CAAC;;AClDH,MAAM,cAAe,SAAQ,gBAAgB,CAAA;AAC3C,IAAA,gBAAgB,GAA6B,IAAI,GAAG,EAAgB,CAAC;AACrE,IAAA,uBAAuB,GAAsC,IAAI,OAAO,EAAE,CAAC;IAC3E,gBAAgB,GAA0B,EAAE,CAAC;IAC7C,qBAAqB,GAAa,CAAC,CAAC;AAEpC,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAED,IAAI,GAAA;KACH;AAED,IAAA,iBAAiB,CAAC,SAAqB,EAAA;AACrC,QAAA,IAAI,WAAyB,CAAC;AAC9B,QAAA,IAAI,IAAI,CAAC,qBAAqB,IAAI,CAAC,EAAE;;;;YAInC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAChE,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC7B,YAAA,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;SACxC;aAAM;AACL,YAAA,WAAW,GAAG,iBAAiB,CAC7B,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,OAAO,CAAC,MAAM,EACnB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,EACxC,SAAS,CAAC,CAAC;SACd;;QAED,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AACzD,QAAA,OAAO,WAAW,CAAC;KACpB;AAED,IAAA,iBAAiB,CAAC,WAAyB,EAAA;QACzC,WAAW,CAAC,OAAO,EAAE,CAAC;AACtB,QAAA,WAAW,CAAC,WAAW,EAAE,cAAc,EAAE,CAAC;KAC3C;AAED,IAAA,IAAI,oBAAoB,GAAA;QACtB,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;IACD,IAAI,oBAAoB,CAAC,KAAY,EAAA;AACnC,QAAA,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;KACpC;AAED,IAAA,IAAI,UAAU,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;KACrC;IACD,IAAI,UAAU,CAAC,MAAc,EAAA;AAC3B,QAAA,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,UAAU,CAAC,CAAkD,gDAAA,CAAA,CAAC,CAAC;SAChE;AACD,QAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,MAAM,CAAC;KACvC;AAED,IAAA,WAAW,CAAC,KAAS,EAAA;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACzB,UAAU,CAAC,CAAgD,8CAAA,CAAA,CAAC,CAAC;SAC9D;QACD,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAC1D,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAC9B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CACpC,CAAC;AACF,QAAA,IAAI,cAAc,KAAK,IAAI,EAAE;YAC3B,UAAU,CAAC,CAAsD,oDAAA,CAAA,CAAC,CAAC;SACpE;QACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AAChD,QAAA,MAAM,iBAAiB,GAAG,IAAI,GAAG,EAAgB,CAAC;QAClD,IAAI,eAAe,GAAG,IAAI,CAAC;AAC3B,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;AACxC,QAAA,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,UAAU,CAAC,CAA2C,yCAAA,CAAA,CAAC,CAAC;SACzD;AACD,QAAA,KAAI,MAAM,SAAS,IAAI,cAAc,EAAE;AACrC,YAAA,MAAM,QAAQ,GAAG,eAAe,EAAE,WAAW,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;YACvE,IAAI,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC9D,YAAA,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE;AACtC,gBAAA,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;gBAChD,WAAW,CAAC,MAAM,EAAE,CAAC;AACrB,gBAAA,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;aAC9C;iBAAM;gBACL,IAAI,QAAQ,CAAC,WAAW,KAAK,WAAW,CAAC,cAAc,EAAE;AACvD,oBAAA,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;iBAC9C;aACF;AACD,YAAA,iBAAiB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACnC,eAAe,GAAG,WAAW,CAAC;SAC/B;;;QAGD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;;QAEhD,MAAM,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAClF,QAAA,KAAI,MAAM,WAAW,IAAI,qBAAqB,EAAE;AAC9C,YAAA,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,qBAAqB,CAAC,CAAC;AACrD,QAAA,IAAI,CAAC,gBAAgB,GAAG,iBAAiB,CAAC;KAC3C;AAED;;;;;;AAMG;IACH,cAAc,CAAC,WAAyB,EAAE,MAAa,EAAA;AACrD,QAAA,IAAI,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ;YAAE,OAAO;AAC1C,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnC,MAAM,aAAa,GACjB,MAAM,CAAC,OAAO,CACZ,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAC9B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CACpC,IAAI,UAAU,CAAC,CAAuD,qDAAA,CAAA,CAAC,CAAC;AAC3E,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,CAA2C,yCAAA,CAAA,CAAC,CAAC;;QAGnG,MAAM,mBAAmB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC9D,MAAM,kBAAkB,GAAmB,EAAE,CAAC;AAC9C,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,YAAA,MAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,WAAW,GAAG,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACzD,WAAW,CAAC,OAAO,EAAE,CAAC;AACtB,YAAA,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACtC;;AAGD,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,YAAA,MAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AACjC,YAAA,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;YAE9B,MAAM,eAAe,GAAG,mBAAmB,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;YAC/D,MAAM,QAAQ,GAAG,eAAe,EAAE,aAAa,IAAI,IAAI,CAAC,IAAI,CAAC;AAE7D,YAAA,MAAM,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;YACtC,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7C,YAAA,MAAM,eAAe,GAAG,kBAAkB,CAAC,WAAW,CAAC,CAAC;AAExD,YAAA,IAAI,OAAO,eAAe,KAAK,WAAW,EAAE;;AAE1C,gBAAA,MAAM,WAAW,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAC9C,WAAW,CAAC,MAAM,EAAE,CAAC;AACrB,gBAAA,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;aAC9C;iBAAM;AACL,gBAAA,eAAe,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;AAC3C,gBAAA,eAAe,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;gBACjD,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;AAC7D,gBAAA,mBAAmB,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC;aAC9C;AACD,YAAA,IAAI,WAAW,IAAI,CAAC,EAAE;AACpB,gBAAA,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;aAC1B;SACF;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,CAAe,mBAAmB,CAAC,CAAC;AACnE,QAAA,MAAM,CAAC,QAAQ,CACb,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAC9B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,EACnC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CACzC,CAAC;KACH;AACF,CAAA;AAEM,MAAM,oBAAoB,GACjC,CAAC,IAAY,EAAE,WAA0B,EAAE,KAAoB,KAC7D,CAAC,OAAgB,EAAE,IAAU,EAAE,OAA0B,KAAI;IAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,IAAA,OAAO,IAAI,cAAc,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACnE,CAAC;;ACnLH,MAAM,gBAAgB,GAAG,aAAa,CAAC;AAMvC,MAAM,4BAA4B,GAAgC;AAChE,IAAA,OAAO,EAAK,SAAS;AACrB,IAAA,UAAU,EAAE,SAAS;AACrB,IAAA,QAAQ,EAAI,SAAS;CACtB,CAAA;AAED;;AAEG;AACH,MAAM,6BAA6B,GAAG,CAAC,IAAS,KAC9C,IAAI,YAAY,iBAAiB,IAAI,IAAI,YAAY,mBAAmB,IAAI,IAAI,YAAY,iBAAiB,GAAG,OAAO;AACvH,IAAA,IAAI,YAAY,iBAAiB,GAAG,SAAS;AAC7C,QAAA,IAAI,YAAY,iBAAiB,GAAG,SAAS;AAC7C,YAAA,IAAI,YAAY,eAAe,GAAG,UAAU;AAC5C,gBAAA,IAAI,YAAY,gBAAgB,IAAI,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO;AACtF,oBAAA,gBAAgB,CAAC;AAMnB,MAAMC,QAAM,GAAyB,EAAE,CAAC;AAExC,MAAM,mBAAmB,GAAG,CAAC,IAAS,KAAY,gBAAgB,CAAC;AAMnE,MAAM,4BAA4B,GAAiC;AACjE,IAAA,WAAW,EAAE,6BAA6B;AAC1C,IAAA,UAAU,EAAG,SAAS;AACtB,IAAA,IAAI,EAAS,mBAAmB;AAChC,IAAA,QAAQ,EAAK,SAAS;CACvB,CAAA;AAED;;;;;AAKG;AACa,SAAA,cAAc,CAC5B,IAAc,EACd,QAAkB,EAAA;AAElB,IAAA,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,IAAK,IAAyB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;IACnF,OAAOA,QAAM,CAAC,GAAG,CAAC,KAAKA,QAAM,CAAC,GAAG,CAAC,GAAG,4BAA4B,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AACvF;;ACvDA,MAAM,UAAU,GAAG,OAAO,CAAC;AAEpB,MAAM,cAAc,GAA8B,MAAM,CAAC,GAAG,CAAC,CAAG,EAAA,UAAU,CAAW,SAAA,CAAA,CAAC,CAAC;AACvF,MAAM,cAAc,GAA8B,MAAM,CAAC,GAAG,CAAC,CAAG,EAAA,UAAU,CAAW,SAAA,CAAA,CAAC,CAAC;AACvF,MAAM,kBAAkB,GAA0B,MAAM,CAAC,GAAG,CAAC,CAAG,EAAA,UAAU,CAAe,aAAA,CAAA,CAAC,CAAC;AAC3F,MAAM,uBAAuB,GAAqB,MAAM,CAAC,GAAG,CAAC,CAAG,EAAA,UAAU,CAAoB,kBAAA,CAAA,CAAC,CAAC;AAChG,MAAM,0BAA0B,GAAkB,MAAM,CAAC,GAAG,CAAC,CAAG,EAAA,UAAU,CAAuB,qBAAA,CAAA,CAAC,CAAC;AACnG,MAAM,aAAa,GAA+B,MAAM,CAAC,GAAG,CAAC,CAAG,EAAA,UAAU,CAAU,QAAA,CAAA,CAAC,CAAC;AACtF,MAAM,YAAY,GAAgC,MAAM,CAAC,GAAG,CAAC,CAAG,EAAA,UAAU,CAAS,OAAA,CAAA,CAAC;;ACA3F,SAAS,gBAAgB,CAAC,OAAoB,EAAA;IAC5C,OAAO,OAAO,YAAY,gBAAgB;AACxC,QAAA,OAAO,YAAY,mBAAmB;QACtC,OAAO,YAAY,iBAAiB,CAAC;AACzC,CAAC;AAED,MAAM,kBAAkB,GAA2B;AACjD,IAAA,OAAO,EAAK,OAAO;AACnB,IAAA,SAAS,EAAG,QAAQ;AACpB,IAAA,UAAU,EAAE,QAAQ;CACrB,CAAC;AAEF,MAAM,mBAAoB,SAAQ,WAAW,CAAA;AAC3C,IAAA,IAAI,KAAK,GAAA;;QAEP,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7B;AACD,IAAA,IAAI,aAAa,GAAA;AACf,QAAA,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACvB,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAChC;AACD,QAAA,OAAO,KAAK,CAAC;KACd;IACD,WACE,CAAA,OAAiB,EACjB,IAAa,EACb,IAAe,EACf,OAAgB,EAChB,KAAsB,EAAA;QAEtB,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAE3C,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,YAAY,WAAW,CAAC;AACnD,QAAA,IAAI,CAAC,SAAS;YAAE,OAAO;AACvB,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;YAAE,OAAO;QACzC,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;AAC7D,QAAA,IAAI,WAAW,KAAK,IAAI,CAAC,IAAI;YAAE,OAAO;AACtC,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC;AAC5E,QAAA,IAAI,KAAK,KAAK,UAAU,IAAI,KAAK,KAAK,IAAI;YAAE,OAAO;QACnD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAK;YACzC,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;AACtE,YAAA,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AACnC,YAAA,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AACrC,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;AAC/C,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;AACjC,YAAA,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,MAAK;gBAC7B,IAAI,WAAW,EAAE;AACf,oBAAA,MAAM,CAAC,cAAc,CAAC,WAAW,EAAE,YAAW;;AAE5C,wBAAA,UAAU,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAC/E,qBAAC,CAAC,CAAC;iBACJ;qBAAM;;AAEL,oBAAA,UAAU,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;iBAC9E;AAEH,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KAEJ;IAED,IAAI,GAAA;KACH;AAED,IAAA,WAAW,CAAC,KAAS,EAAA;AACnB,QAAA,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAChE,KAAK,GAAG,EAAE,CAAC;SACZ;;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;KAC9B;AACF,CAAA;AAEM,MAAM,yBAAyB,GACtC,CAAC,IAAY,EAAE,WAA0B,EAAE,KAAoB,KAC7D,CAAC,OAAgB,EAAE,IAAU,EAAE,OAA0B,KAAI;IAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,IAAA,OAAO,IAAI,mBAAmB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACxE,CAAC;;ACjFH,MAAM,gBAAiB,SAAQ,WAAW,CAAA;AACxC,IAAA,WAAW,CAAC,KAAS,EAAA;AACnB,QAAA,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAChE,KAAK,GAAG,EAAE,CAAC;SACZ;AACD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAwB,CAAC;AAC9C,QAAA,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,KAAK,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;KACjE;AACF,CAAA;AAEM,MAAM,sBAAsB,GACnC,CAAC,IAAY,EAAE,WAA0B,EAAE,KAAoB,KAC7D,CAAC,OAAgB,EAAE,IAAU,EAAE,OAA0B,KAAI;IAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,IAAA,OAAO,IAAI,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACrE,CAAC;;ACfH,MAAM,gBAAiB,SAAQ,WAAW,CAAA;AACxC,IAAA,QAAQ,CAAS;AACjB,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,WACE,CAAA,OAAiB,EACjB,IAAa,EACb,IAAe,EACf,OAAgB,EAChB,KAAsB,EAAA;QAEtB,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3C,QAAA,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KACzB;AACD,IAAA,WAAW,CAAC,KAAS,EAAA;AACnB,QAAA,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAChE,KAAK,GAAG,EAAE,CAAC;SACZ;AACD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAmB,CAAC;AACzC,QAAA,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC3D;AACF,CAAA;AAEM,MAAM,sBAAsB,GACnC,CAAC,IAAY,EAAE,WAA0B,EAAE,KAAoB,KAC7D,CAAC,OAAgB,EAAE,IAAU,EAAE,OAA0B,KAAI;IAC3D,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,IAAA,OAAO,IAAI,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACrE,CAAC;;ACpBH,MAAM,wCAAwC,GAA4C;AACxF,IAAA,CAAC,EAAE;AACD,QAAA,OAAO,EAAK,0BAA0B;AACtC,QAAA,UAAU,EAAE,yBAAyB;AACrC,QAAA,OAAO,EAAK,sBAAsB;AACnC,KAAA;AACD,IAAA,CAAC,EAAE;AACD,QAAA,IAAI,EAAG,mBAAmB;AAC3B,KAAA;CACF,CAAC;AAIF,MAAM,kCAAkC,GAAsC;AAC5E,IAAA,OAAO,EAAE,0BAA0B;AACnC,IAAA,MAAM,EAAG,0BAA0B;AACnC,IAAA,OAAO,EAAE,sBAAsB;;;;CAIhC,CAAC;AAEF,SAAS,sBAAsB,CAAC,SAAiB,EAAE,SAAkB,EAAE,YAAoB,EAAA;AACzF,IAAA,MAAM,wBAAwB,GAAG,wCAAwC,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;AAC3G,IAAA,IAAI,OAAO,wBAAwB,KAAK,WAAW,EAAE;AACnD,QAAA,OAAO,wBAAwB,CAAC;KACjC;AACD,IAAA,IAAI,SAAS,IAAI,YAAY,KAAK,KAAK,EAAE;AACvC,QAAA,OAAO,oBAAoB,CAAC;KAC7B;IACD,IAAI,SAAS,EAAE;AACb,QAAA,UAAU,CAAC,CAAA,6CAAA,EAAgD,YAAY,CAAA,CAAE,CAAC,CAAC;KAC5E;IACD,MAAM,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7C,MAAM,6BAA6B,GAAG,kCAAkC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1F,IAAA,IAAI,OAAO,6BAA6B,KAAK,WAAW,EAAE;AACxD,QAAA,OAAO,6BAA6B,CAAC;KACtC;IACD,IAAI,SAAS,EAAE;AACb,QAAA,IAAI,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AACjC,YAAA,OAAO,sBAAsB,CAAC;SAC/B;aAAM;AACL,YAAA,OAAO,yBAAyB,CAAC;SAClC;KACF;SAAM;AACL,QAAA,OAAO,yBAAyB,CAAC;KAClC;AACH,CAAC;AAED,MAAMA,QAAM,GAAuC,EAAE,CAAC;AAEtD;;;;;AAKG;AACG,SAAU,qBAAqB,CACnC,IAAkB,EAClB,YAAoB,EACpB,WAA0B,EAC1B,KAA2B,EAAA;AAE3B,IAAA,MAAM,SAAS,GAAG,IAAI,YAAY,OAAO,CAAC;AAC1C,IAAA,MAAM,SAAS,GAAG,IAAI,YAAY,OAAO,CAAC;IAC1C,MAAM,GAAG,GAAG,SAAS,GAAG,IAAI,GAAG,SAAS,GAAG,IAAI,GAAG,YAAY,CAAC;IAC/D,MAAM,EAAE,GAAGA,QAAM,CAAC,GAAG,CAAC,KAAKA,QAAM,CAAC,GAAG,CAAC,GAAG,sBAAsB,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC;IACrG,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9C;;ACjFA;;;;AAIG;AACH,MAAMA,QAAM,GAA0C,EAAE,CAAC;AACzD;AAEA;;;;AAIG;AACH,MAAM,kBAAkB,CAAA;AACtB,IAAA,OAAO,EAAE,GAAG,CAAC,CAAC;AACd,IAAA,EAAE,GAAG,EAAE,kBAAkB,CAAC,EAAE,CAAC;AAC7B,IAAA,OAAO,CAAC;AACR,IAAA,YAAY,CAAC;AACb,IAAA,WAAW,CAAC;AACZ,IAAA,eAAe,CAAC;AAChB,IAAA,eAAe,CAAC;AAChB,IAAA,aAAa,CAAC;AACd,IAAA,aAAa,CAAC;AACd,IAAA,mBAAmB,CAAC;AACpB,IAAA,mBAAmB,CAAC;AACpB,IAAA,gBAAgB,CAAC;AACjB,IAAA,gBAAgB,CAAC;AACjB,IAAA,UAAU,CAAC;AACX,IAAA,UAAU,CAAC;AACX,IAAA,aAAa,CAAC;AAEd,IAAA,WAAA,CAAY,OAAe,EAAA;AACzB,QAAA,MAAM,UAAU,GAAG,CAAC,QAAgB,KAAyB;AAC3D,YAAA,OAAO,CAAC,OAAO,KAAK,QAAQ,IAAI,IAAI,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AACzE,SAAC,CAAC;QACF,MAAM,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxC,MAAM,eAAe,GAAG,EAAE,CAAC;QAC3B,MAAM,eAAe,GAA0B,EAAE,CAAC;QAClD,MAAM,aAAa,GAAG,EAAE,CAAC;QACzB,MAAM,aAAa,GAAG,EAAE,CAAC;QACzB,MAAM,mBAAmB,GAAG,EAAE,CAAC;QAC/B,MAAM,mBAAmB,GAAG,EAAE,CAAC;AAC/B,QAAA,IAAI,kBAAkB,GAAG,EAAE,EAAE,eAAe,GAAG,EAAE,CAAC;QAClD,IAAI,aAAa,GAAG,CAAC,CAAC;AACtB,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,YAAA,kBAAkB,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;AACtC,YAAA,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC3B,gBAAA,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACvC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC;AACnD,gBAAA,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC1C,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC;AACtD,gBAAA,aAAa,EAAE,CAAC;aACjB;AACD,YAAA,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACzC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACrD,eAAe,GAAG,kBAAkB,CAAC;YACrC,kBAAkB,IAAI,GAAG,CAAC;SAC3B;QACD,MAAM,gBAAgB,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACnG,MAAM,UAAU,GAAG,eAAe,CAAC,MAAM,GAAG,CAAC,GAAG,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AACnG,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACzD,QAAA,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;AACvC,QAAA,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;AACvC,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACnC,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACnC,QAAA,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAC/C,QAAA,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAC/C,QAAA,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AACzC,QAAA,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,GAAG,UAAU,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;AAC/E,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;AAC7D,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;;AAGH,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC;AAC5B,IAAA,aAAa,EAAE,WAAW,EAAE,WAAW,EAAE,UAAU;IACnD,SAAS,EAAE,gBAAgB,EAAE,eAAe;AAC5C,IAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW;AACvC,IAAA,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU;AAC1C,IAAA,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ;AACzC,CAAA,CAAC,CAAC;AAEG,SAAU,qBAAqB,CAAC,cAAsB,EAAA;AAC1D,IAAA,IAAI,IAAqC,CAAC;AAC1C,IAAA,IAAI,GAAGA,QAAM,CAAC,cAAc,CAAC,CAAC;AAC9B,IAAA,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;AAC/B,QAAA,OAAO,IAAI,CAAC;KACb;AACD,IAAA,IAAI,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;AACrC,QAAA,UAAU,CAAC,CAAA,iDAAA,EAAoD,cAAc,CAAA,CAAE,CAAC,CAAC;KAClF;AACD,IAAA,QAAQA,QAAM,CAAC,cAAc,CAAC,GAAG,IAAI,kBAAkB,CAAC,cAAc,CAAC,EAAE;AAC3E;;ACvFA,MAAM,YAAY,CAAA;AAChB,IAAA,QAAQ,CAAgB;AACxB,IAAA,QAAQ,CAAc;AACtB,IAAA,KAAK,CAA8B;IACnC,aAAa,GAA+B,IAAI,CAAC;AACjD,IAAA,MAAM,CAAqB;AAC3B,IAAA,QAAQ,CAAe;AACvB,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AACD,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI;AAAE,YAAA,OAAO,IAAI,CAAC;QAC7C,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,UAAU,CAAC,mBAAmB,CAAC,CAAC;KACtE;AACD,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;AACD,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AACD,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AACD,IAAA,WAAA,CACE,OAAiB,EACjB,KAAoB,EACpB,OAAe,EACf,OAAgB,EAAA;AAEhB,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,QAAA,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KACzB;AACD,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KAC/D;AACD,IAAA,IAAI,aAAa,GAAA;AACf,QAAA,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACvB,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SACjC;AACD,QAAA,OAAO,KAAK,CAAC;KACd;IACD,IAAI,GAAA;QACF,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;AAC/B,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;gBACjD,UAAU,CAAC,CAAmD,iDAAA,CAAA,CAAC,CAAC;AAClE,YAAA,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC;gBACpF,UAAU,CAAC,CAAwC,sCAAA,CAAA,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,YAAY,CAAC;SAC/C;AACD,QAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAC1E;AACF,CAAA;AAEM,MAAM,kBAAkB,GAC/B,CAAC,IAAY,EAAE,WAA0B,KACvC,CAAC,OAAgB,EAAE,KAAkB,EAAE,OAAyB,KAAI;IAClE,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACtD,OAAO,IAAI,YAAY,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAC3D,CAAC;;ACpEH,MAAM,iBAAiB,CAAA;AACrB,IAAA,QAAQ,CAAgB;AACxB,IAAA,YAAY,CAAU;IACtB,aAAa,GAA+B,IAAI,CAAC;AACjD,IAAA,MAAM,CAAqB;AAC3B,IAAA,QAAQ,CAAe;AACvB,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,UAAU,CAAC,iBAAiB,CAAC,CAAC;KACtC;AACD,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,OAAO,UAAU,CAAC,iBAAiB,CAAC,CAAC;KACtC;AACD,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI;AAAE,YAAA,OAAO,IAAI,CAAC;QAC7C,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,UAAU,CAAC,mBAAmB,CAAC,CAAC;KACtE;AACD,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;AACD,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AACD,IAAA,IAAI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AACD,IAAA,WAAA,CACE,OAAiB,EACjB,KAAoB,EACpB,OAAe,EACf,OAAgB,EAAA;AAEhB,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,QAAA,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE;YACtB,UAAU,CAAC,4CAA4C,CAAC,CAAC;SAC1D;AACD,QAAA,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AAChC,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KACzB;AACD,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,SAAS,EAAE,KAAK,IAAI,UAAU,CAAC,mBAAmB,CAAC,CAAC;KACjE;AACD,IAAA,IAAI,aAAa,GAAA;AACf,QAAA,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACvB,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SACjC;AACD,QAAA,OAAO,KAAK,CAAC;KACd;IACD,IAAI,GAAA;QACF,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,kBAAkB;YACnE,UAAU,CAAC,CAAwC,sCAAA,CAAA,CAAC,CAAC;AACvD,QAAA,MAAM,YAAY,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC;AAC7C,QAAA,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,YAAY;YACnE,UAAU,CAAC,CAAyC,uCAAA,CAAA,CAAC,CAAC;QACxD,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,UAAU,CAAC,mBAAmB,CAAC,CAAC;AACpE,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACxE,QAAA,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACjF;aAAM;AACL,YAAA,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5B;KACF;AACF,CAAA;AAEM,MAAM,uBAAuB,GACpC,CAAC,IAAY,EAAE,WAA0B,KACvC,CAAC,OAAgB,EAAE,KAAkB,EAAE,OAAyB,KAAI;IAClE,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAEtD,OAAO,IAAI,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAChE,CAAC;;AC5EH,MAAM,IAAI,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;AAEnB,SAAA,sBAAsB,CACpC,IAAmB,EACnB,WAA0B,EAAA;AAE1B,IAAA,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACnB,QAAA,OAAO,uBAAuB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;KACnD;SAAM;AACL,QAAA,OAAO,kBAAkB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;KAC9C;AACH;;ACXA,MAAM,sBAAsB,GAAG,kBAAkB,CAAC,MAAM,CAAC;AACzD,MAAM,yBAAyB,GAAG,qBAAqB,CAAC,MAAM,CAAC;AAE/D,MAAM,kBAAkB,GAAK,CAAC,IAAS,KAAmB,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,sBAAsB,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;AACvH,MAAM,oBAAoB,GAAG,CAAC,IAAgB,KAAY,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;AACvG,MAAM,mBAAmB,GAAI,CAAC,IAAS,KAAkB;AACvD,IAAA,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,yBAAyB,CAAC,CAAC,IAAI,EAAE,CAAC;AACvE,IAAA,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACxB,IAAA,MAAM,QAAQ,GAAG,eAAe,CAAC,EAAE,CAAC,IAAI,UAAU,CAAC,CAAA,oBAAA,EAAuB,IAAI,CAAA,CAAE,CAAC,CAAC;IAClF,OAAO,QAAQ,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;AAC1D,CAAC,CAAC;AACF,MAAM,qBAAqB,GAAG,CAAC,IAAe,KAAY,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;AAEvG,MAAM,iBAAiB,GAAG;AACxB,IAAA,MAAM,EAAS,kBAAkB;AACjC,IAAA,aAAa,EAAE,oBAAoB;AACnC,IAAA,UAAU,EAAK,mBAAmB;AAClC,IAAA,YAAY,EAAG,qBAAqB;CACrC,CAAC;AAEc,SAAA,eAAe,CAAC,QAAkB,EAAE,IAAU,EAAA;IAC5D,MAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC,IAAW,CAAC,IAAI,EAAE,CAAC;AAChE,IAAA,IAAI,QAAQ,KAAK,MAAM,EAAE;QACvB,OAAO,cAAc,GAAG,QAAQ,CAAC;KAClC;SAAM;AACL,QAAA,OAAO,QAAQ,CAAC;KACjB;AACH;;AC7BA,MAAM,aAAa,GAAG,CAAC,IAAS,KAAY,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,YAAY,OAAO,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAM5I,MAAM,iBAAiB,GAAqB,EAAE,CAAC;AAE/C,MAAM,iBAAiB,GAAG,CAAC,IAAS,KAClC,CAAC,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,MAAM;IACnE,CAAC,IAAI,YAAY,WAAW,IAAI,aAAa;AAC7C,QAAA,CAAC,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,UAAU;AACvE,YAAA,CAAC,IAAI,YAAY,UAAU,IAAI,YAAY,GAAG,UAAU,CAAC,CAAqB,kBAAA,EAAA,IAAI,CAAC,QAAQ,CAAA,CAAE,CAAC,CAAC;AAEjG;;;;;AAKG;AACG,SAAU,WAAW,CACzB,IAAa,EACb,OAAkB,GAAA,aAAa,CAAC,IAAI,CAAC,EAAA;AAErC,IAAA,OAAO,iBAAiB,CAAC,OAAO,CAAC,KAAK,iBAAiB,CAAC,OAAO,CAAC,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9F;;AC1BA,MAAM,IAAI,GAAG,CAAC,CAAQ,KAAY,CAAC,CAAC,IAAI,EAAE,CAAC;AAE3C,MAAM,GAAG,GAAG,CAAC,CAAQ,KAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AAE/C,MAAM,EAAE,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;AAClC,MAAM,MAAM,GAAG,CAAC,CAAQ,KAAW;IACjC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB,IAAA,OAAO,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1C,CAAC,CAAC;AAEF;;;AAGG;AACH,MAAM,WAAW,GAAG,CAAC,IAAW,KAAiB;AAC/C,IAAA,MAAM,CAAC,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACrD,IAAA,OAAO,EAAC,IAAI,EAAE,OAAO,EAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC,CAAC;AAC7C,CAAC,CAAC;AAGF;;;AAGG;AACH,MAAM,aAAa,GAAG,CAAC,IAAW,KAA8B;AAC9D,IAAA,MAAM,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC7D,IAAA,OAAO,EAAC,QAAQ,EAAE,OAAO,EAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,EAAC,CAAC;AAC1D,CAAC,CAAC;AAEF;;;AAGG;AACH,MAAM,eAAe,GAAG,CAAC,UAAiB,KAAe;AACvD,IAAA,MAAM,CAAE,cAAc,EAAE,KAAK,GAAG,IAAI,CAAE,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACzE,IAAA,MAAM,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClF,IAAA,MAAM,EAAE,QAAQ,EAAC,YAAY,EAAE,OAAO,EAAC,gBAAgB,EAAE,GAAG,aAAa,CAAC,gBAAgB,CAAC,CAAC;AAC5F,IAAA,MAAM,EAAE,QAAQ,EAAC,aAAa,EAAE,OAAO,EAAC,iBAAiB,EAAE,GAAG,aAAa,CAAC,iBAAiB,CAAC,CAAC;IAC/F,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,KAAK,EAAE,CAAC;AACrF,CAAC,CAAC;AAEF;;AAEG;AACH,MAAM,gBAAgB,GAAG,CAAC,IAAW,KAAiB;AACpD,IAAA,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC;AAEF,MAAM,KAAK,GAA+B,EAAE,CAAC;AAE7C;;;;;AAKG;AACG,SAAU,aAAa,CAC3B,IAAY,EAAA;AAEZ,IAAA,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;AACtB,QAAA,OAAO,EAAE,CAAC;KACX;AACD,IAAA,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D;;AC/DA,MAAM,qBAAqB,GAAG,WAAW,CAAC;AAE1C,MAAM,0BAA0B,GAAG,CAAC,IAAS,KAAS;IACpD,MAAM,OAAO,GAAG,IAAe,CAAC;AAChC,IAAA,OAAO,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC;AACjD,CAAC,CAAA;AAMD,MAAM,yBAAyB,GAA6B;AAC1D,IAAA,WAAW,EAAE,0BAA0B;AACvC,IAAA,UAAU,EAAG,0BAA0B;AACvC,IAAA,IAAI,EAAS,SAAS;AACtB,IAAA,QAAQ,EAAK,SAAS;CACvB,CAAA;AAED;;;;;AAKG;AACa,SAAA,uBAAuB,CACrC,IAAc,EACd,QAAkB,EAAA;IAElB,OAAO,yBAAyB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;AACrD;;AC7BA,MAAM,mBAAmB,GAAG,CAAC,IAAS,KAAS;IAC7C,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAC7C,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC9C,IAAA,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAA;AAMD,MAAM,iBAAiB,GAAqB;AAC1C,IAAA,IAAI,EAAS,mBAAmB;AAChC,IAAA,WAAW,EAAE,SAAS;AACtB,IAAA,QAAQ,EAAK,SAAS;AACtB,IAAA,UAAU,EAAG,SAAS;CACvB,CAAA;AAED;;;;;AAKG;AACa,SAAA,0BAA0B,CACxC,IAAc,EACd,QAAkB,EAAA;IAElB,OAAO,iBAAiB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC;AACrD;;ACpBA,MAAM,kBAAkB,CAAA;IACtB,QAAQ,CAAgB;IACxB,QAAQ,CAAgB;IACxB,SAAS,CAAkB;AAC3B,IAAA,aAAa,GAAoC,IAAI,GAAG,EAAE,CAAC;AAC3D,IAAA,WAAA,CAAY,IAAU,EAAA;AACpB,QAAA,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;QAElD,IAAI,GAAG,0BAA0B,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEvD,QAAA,uBAAuB,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAE7C,QAAA,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAC1C,QAAA,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;AACrC,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACnC,YAAA,MAAM,OAAO,GAAoB;AAC/B,gBAAA,iBAAiB,EAAG,qBAAqB,CACvC,IAAI,EACJ,QAAQ,CAAC,YAAY,EACrB,QAAQ,CAAC,gBAAgB,EACzB,QAAQ,CAAC,KAAK,CACf;gBACD,kBAAkB,EAAE,sBAAsB,CACxC,QAAQ,CAAC,aAAa,EACtB,QAAQ,CAAC,iBAAiB,CAC3B;aACF,CAAA;YACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SAC3C;KACF;AAEF,CAAA;AAEK,SAAU,wBAAwB,CAAC,IAAU,EAAA;AACjD,IAAA,OAAO,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACtC;;AC7CA;;AAEG;AACH,SAAS,aAAa,CAAC,IAAU,EAAA;AAC/B,IAAA,OAAO,IAAI,YAAY,OAAO,KAC5B,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAClH,CAAC;AACJ,CAAC;AAEK,SAAU,sBAAsB,CAAC,IAAU,EAAA;IAC/C,MAAM,KAAK,GAAW,EAAE,CAAC;AACzB,IAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,EAAE;AAChG,QAAA,UAAU,CAAC,IAAS,EAAA;AAClB,YAAA,OAAO,CAAC,IAAI,YAAY,OAAO;AAC7B,iBAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,GAAG,UAAU,CAAC,aAAa,GAAG,UAAU,CAAC,WAAW;AAC3F,mBAAG,aAAa,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,aAAa,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;SAC/E;AACF,KAAA,CAAC,CAAC;AACH,IAAA,OAAO,MAAM,CAAC,QAAQ,EAAE,EAAE;AACxB,QAAA,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;KAChC;AACD,IAAA,OAAO,KAAK,CAAC;AACf;;ACpBA,MAAM,0BAA0B,GAAyC,EAAE,CAAC;AAE5E,MAAM,gBAAgB,GAA+B,EAAE,CAAC;AAExD,MAAM,YAAY,GAA+B,EAAE,CAAC;AAEpD,SAAS,iCAAiC,CAAC,OAAyB,EAAA;AAClE,IAAA,MAAM,KAAK,GAAG,sBAAsB,CAAC,OAAO,CAAC,CAAC;AAC9C,IAAA,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3D,CAAC;AAEK,SAAU,0BAA0B,CACxC,EAAe,EACf,OAAyB,EACzB,SAAkB,EAAE,EAAA;AAEpB,IAAA,MAAM,kBAAkB,GAAG,iCAAiC,CAAC,OAAO,CAAC,CAAC;AACtE,IAAA,MAAM,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,EAAU,CAAC,CAAC;AACjF,IAAA,MAAM,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC,KAAK,gBAAgB,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,EAAU,CAAC,CAAC;AAC7F,IAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,QAAA,MAAM,SAAS,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;AACxC,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,MAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACxC,YAAA,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AAClC,YAAA,IAAI,QAAQ,CAAC,YAAY,KAAK,KAAK,EAAE;AACnC,gBAAA,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aACvC;SACF;KACF;AACD,IAAA,OAAO,0BAA0B,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC;AAC7D,CAAC;AAEM,MAAM,yBAAyB,GAAG,CAAC,EAAU,KAA2B;AAC7E,IAAA,OAAO,0BAA0B,CAAC,EAAE,CAAC,CAAC;AACxC,CAAC,CAAA;AAEM,MAAM,mBAAmB,GAAG,CAAC,EAAU,KAAiB;AAC7D,IAAA,OAAO,gBAAgB,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;AACpC,CAAC,CAAC;AAEK,MAAM,eAAe,GAAG,CAAC,EAAU,KAAiB;AACzD,IAAA,OAAO,YAAY,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;AAChC,CAAC;;AC7CK,SAAU,oBAAoB,CAAC,OAAwB,EAAA;AAC3D,IAAA,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,IAAI,IAAG;QAC5C,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtE,YAAA,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC3B;AACH,KAAC,CAAC,CAAC;AACL;;ACHA,MAAM,YAAY,GAAuC,EAAE,CAAC;SAE5C,gBAAgB,CAC9B,EAAgB,EAChB,QAA6B,EAC7B,MAAgB,EAAA;AAEhB,IAAA,oBAAoB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACvC,0BAA0B,CAAC,EAAE,EAAE,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AACzD,IAAA,YAAY,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;AAC5B,IAAA,OAAO,EAAE,CAAC;AACZ,CAAC;AAEK,SAAU,eAAe,CAAC,EAAU,EAAA;IACxC,OAAO,YAAY,CAAC,EAAE,CAAC,IAAI,UAAU,CAAC,CAAwC,qCAAA,EAAA,EAAE,CAAE,CAAA,CAAC,CAAC;AACtF;;ACdA,MAAM,OAAO,CAAA;AACX,IAAA,iBAAiB,CAAe;AAChC,IAAA,IAAI,CAAoB;AACxB,IAAA,MAAM,CAA8B;AACpC,IAAA,WAAW,CAAqB;AAChC,IAAA,YAAY,CAAqB;IACjC,WACE,CAAA,iBAAgC,EAChC,IAAwB,EACxB,MAAoC,EACpC,iBAA6C,EAC7C,kBAA+C,EAAA;AAE/C,QAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAA;AAC1C,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;AACpB,QAAA,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;AACtE,QAAA,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;KACvF;AAED,IAAA,IAAI,YAAY,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;KACtC;IAED,IAAI,GAAA;AACF,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;KAC3B;AACF,CAAA;AAEK,SAAU,aAAa,CAC3B,iBAAgC,EAChC,IAAwB,EACxB,MAAoC,EACpC,iBAA6C,EAC7C,kBAA+C,EAAA;AAE/C,IAAA,OAAO,IAAI,OAAO,CAChB,iBAAiB,EACjB,IAAI,EACJ,MAAM,EACN,iBAAiB,EACjB,kBAAkB,CACnB,CAAC;AACJ;;AC9CA,MAAM,WAAW,CAAA;AACf,IAAA,KAAK,CAAc;AACnB,IAAA,KAAK,CAA8B;AACnC,IAAA,aAAa,CAA6B;AAC1C,IAAA,YAAY,CAAgB;AAC5B,IAAA,WAAA,CACE,IAAuB,EACvB,SAAuB,EACvB,WAAyB,EAAA;QAEzB,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,UAAU,CAAC,kBAAkB,CAAC,CAAC;QACpD,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;KACjC;AACD,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,IAAI,SAAS,GAAA;QACX,OAAO,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,UAAU,CAAC,mBAAmB,CAAC,CAAC;KACvE;AACD,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,IAAI,CAAC,aAAa,IAAI,UAAU,CAAC,sBAAsB,CAAC,CAAC;KACjE;AACD,IAAA,eAAe,CAAC,SAAqB,EAAA;QACnC,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC;;KAE7C;IACD,cAAc,GAAA;AACZ,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;AACD,IAAA,IAAI,WAAW,GAAA;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;AAED,IAAA,kBAAkB,CAAkC;AACpD,IAAA,IAAI,iBAAiB,GAAA;AACnB,QAAA,IAAI,OAAO,IAAI,CAAC,kBAAkB,KAAK,WAAW,EAAE;AAClD,YAAA,IAAI,cAAc,GAAwB,IAAI,CAAC,WAAW,CAAC;AAC3D,YAAA,OAAM,cAAc,KAAK,IAAI,EAAE;AAC7B,gBAAA,IAAI,cAAc,CAAC,WAAW,KAAK,IAAI,IAAI,cAAc,CAAC,WAAW,KAAK,IAAI,EAAE;AAC9E,oBAAA,IAAI,CAAC,kBAAkB,GAAG,cAAc,CAAC,WAAW,CAAC;oBACrD,MAAM;iBACP;gBACD,cAAc,GAAG,cAAc,CAAC,aAAa,EAAE,iBAAiB,IAAI,IAAI,CAAC;aAC1E;AACD,YAAA,IAAI,OAAO,IAAI,CAAC,kBAAkB,KAAK,WAAW;AAAE,gBAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SACpF;QACD,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;IAED,MAAM,GAAuC,EAAE,CAAC;AAChD,IAAA,IAAI,CAAC,IAAY,EAAA;QACf,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACpC,QAAA,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE;YACtC,IAAI,kBAAkB,GAAwB,IAAI,CAAC;AACnD,YAAA,OAAM,kBAAkB,KAAK,IAAI,EAAE;AACjC,gBAAA,IAAI,kBAAkB,CAAC,IAAI,KAAK,IAAI;oBAAE,MAAM;AAC5C,gBAAA,kBAAkB,GAAG,kBAAkB,CAAC,iBAAiB,CAAC;aAC3D;YACD,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,kBAAkB,CAAC;SACtD;AACD,QAAA,OAAO,WAAW,CAAC;KACpB;AAED,IAAA,IAAI,CAAC,QAA6C,EAAA;QAChD,IAAI,kBAAkB,GAAwB,IAAI,CAAC;AACnD,QAAA,OAAM,kBAAkB,KAAK,IAAI,EAAE;YACjC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;AAC7B,YAAA,kBAAkB,GAAG,kBAAkB,CAAC,iBAAiB,CAAC;SAC3D;KACF;IAED,SAAS,GAAA;QACP,MAAM,OAAO,GAAmB,EAAE,CAAC;AACnC,QAAA,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,KAAI;AACxB,YAAA,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC/B,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,OAAO,CAAC;KAChB;AAEF,CAAA;AAED;AACA;SACgB,iBAAiB,CAC/B,OAAsB,EACtB,SAAqB,EACrB,WAAyB,EAAA;IAEzB,OAAO,IAAI,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;AAC1D;;ACnGM,SAAU,MAAM,CAAC,QAAoB,EAAA;IACzC,MAAM,yBAAyB,GAAG,EAAE,CAAC;AACrC,IAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,QAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5B,QAAA,IAAI,OAAO,CAAC,WAAW,CAAC,eAAe,EAAE;AACvC,YAAA,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACzC;aAAM;YACL,OAAO,CAAC,MAAM,EAAE,CAAC;SAClB;KACF;AACD,IAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,yBAAyB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxD,QAAA,yBAAyB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;KACvC;AACH;;ACHA,SAAS,aAAa,CAAC,EAAU,EAAA;AAC/B,IAAA,MAAM,QAAQ,GAAG,eAAe,CAAC,EAAE,CAAC;AAClC,QAAA,UAAU,CAAC,CAAA,oCAAA,EAAuC,EAAE,CAAA,CAAE,CAAC,CAAC;IAC1D,OAAO,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACrD,CAAC;AAED,SAAS,cAAc,CACrB,WAAyB,EACzB,EAAmB,EACnB,MAA6B,EAC7B,OAA6B,EAAA;AAE7B,IAAA,MAAM,UAAU,GAAG,yBAAyB,CAAC,EAAE,CAAC;QAC9C,UAAU,CAAC,CAAmC,iCAAA,CAAA,CAAC,CAAC;IAClD,MAAM,QAAQ,GAAe,EAAE,CAAC;AAChC,IAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,QAAA,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,IAAI,GAAG,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,CAAC;AAC3D,YAAA,UAAU,CAAC,CAAmC,gCAAA,EAAA,SAAS,CAAC,QAAQ,CAAA,CAAE,CAAC,CAAC;AACtE,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,MAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,OAAO,GAAG,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC;AACnD,gBAAA,UAAU,CAAC,CAAA,mCAAA,EAAsC,QAAQ,CAAA,CAAE,CAAC,CAAC;AAC/D,YAAA,MAAM,OAAO,GAAG,aAAa,CAC3B,WAAW,EACX,IAAI,EACJ,MAAM,EACN,OAAO,CAAC,iBAAiB,EACzB,OAAO,CAAC,kBAAkB,CAC3B,CAAC;AACF,YAAA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxB;KACF;AACD,IAAA,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,MAAM,WAAW,CAAA;AACf,IAAA,WAAW,CAAwB;AACnC,IAAA,aAAa,CAAkB;AAC/B,IAAA,UAAU,CAAY;AACtB,IAAA,QAAQ,CAAwB;AAChC,IAAA,MAAM,CAAsC;AAC5C,IAAA,GAAG,CAAC;AACJ,IAAA,IAAI,EAAE,GAAA;QACJ,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;AACD,IAAA,IAAI,SAAS,GAAA;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,QAAQ,CAAC;KACtF;AACD,IAAA,IAAI,cAAc,GAAA;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;KACnC;AACD,IAAA,IAAI,aAAa,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;KAC5D;AACD,IAAA,WAAW,CAAC,UAAgB,EAAA;AAC1B,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC5D,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;AACzC,QAAA,IAAI,WAAW,CAAC,IAAI,KAAK,aAAa,EAAE;YACtC,IAAI,WAAW,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,EAAE;gBACrC,MAAM,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAA4C,0CAAA,CAAA,CAAC,CAAC;gBACjI,MAAM,QAAQ,GAAG,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AAC1D,gBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AACrB,oBAAA,OAAO,QAAQ,CAAC;iBACjB;aACF;SACF;AACD,QAAA,IAAI,UAAU,KAAK,aAAa,EAAE,UAAU,EAAE;AAC5C,YAAA,OAAO,IAAI,CAAC;SACb;AACD,QAAA,OAAO,aAAa,CAAC;KACtB;AACD,IAAA,mBAAmB,CAAkC;AACrD,IAAA,IAAI,kBAAkB,GAAA;AACpB,QAAA,IAAI,OAAO,IAAI,CAAC,mBAAmB,KAAK,WAAW,EAAE;YACnD,IAAI,WAAW,GAAwB,IAAI,CAAC;AAC5C,YAAA,OAAM,WAAW,KAAK,IAAI,EAAE;AAC1B,gBAAA,IAAI,WAAW,CAAC,WAAW,KAAK,IAAI;oBAAE,MAAM;gBAC5C,WAAW,GAAG,WAAW,CAAC,aAAa,EAAE,iBAAiB,IAAI,IAAI,CAAC;aACpE;YACD,IAAI,CAAC,mBAAmB,GAAG,WAAW,EAAE,WAAW,IAAI,IAAI,CAAC;SAC7D;QACD,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;IACD,WACE,CAAA,aAA8B,EAC9B,EAAqB,EACrB,MAA+B,EAC/B,WAA4B,EAC5B,SAAgC,EAAA;AAEhC,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACnC,QAAA,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;AACd,QAAA,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;AAClC,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACvD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,CAAC,SAAS,KAAK,IAAI,IAAI,iBAAiB,CAAC,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC;AACjG,QAAA,IAAI,CAAC,QAAQ,GAAG,cAAc,CAC5B,IAAI,EACJ,EAAE,EACF,MAAM,EACN,IAAI,CAAC,QAAQ,CACd,CAAC;KACH;AACD,IAAA,KAAK,CAAC,UAAgB,EAAA;AACpB,QAAA,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvC;IACD,WAAW,CAAC,UAAgB,EAAE,UAAuB,EAAA;QACnD,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;KACpD;IACD,UAAU,CAAC,UAAgB,EAAE,SAAsB,EAAA;AACjD,QAAA,UAAU,CAAC,YAAY,CACrB,IAAI,CAAC,QAAQ,EACb,SAAS,EAAE,WAAW,IAAI,IAAI,CAC/B,CAAC;KACH;IACD,OAAO,GAAA;AACL,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/C;KACF;IACD,QAAQ,GAAe,EAAE,CAAC;IAC1B,MAAM,GAAA;AACJ,QAAA,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvB;IACD,IAAI,GAAA;AACF,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;KAClD;AACD,IAAA,eAAe,CAAC,SAAqB,EAAA;AACnC,QAAA,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI;YAAE,UAAU,CAAC,CAAkC,gCAAA,CAAA,CAAC,CAAC;AAC7E,QAAA,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;AACF,CAAA;AAEK,SAAU,iBAAiB,CAC/B,aAA8B,EAC9B,EAAqB,EACrB,MAA8B,EAC9B,WAA4B,EAC5B,SAA+B,EAAA;AAE/B,IAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CACjC,aAAa,EACb,EAAE,EACF,MAAM,EACN,WAAW,EACX,SAAS,CACV,CAAC;IACF,WAAW,CAAC,IAAI,EAAE,CAAC;AACnB,IAAA,OAAO,WAAW,CAAC;AACrB;;AC/JA;;;;AAIG;AACH,MAAM,MAAM,GAAwC,EAAE,CAAC;AACvD;AAEA,MAAM,gBAAgB,CAAA;AACpB,IAAA,OAAO,EAAE,GAAG,CAAC,CAAC;AACd,IAAA,EAAE,GAAG,EAAE,gBAAgB,CAAC,EAAE,CAAC;AAC3B,IAAA,IAAI,CAAC;AACL,IAAA,QAAQ,CAAC;AACT,IAAA,KAAK,CAAC;AACN,IAAA,aAAa,CAAC;AACd,IAAA,YAAY,CAAC;AACb,IAAA,eAAe,CAAC;AAChB,IAAA,IAAI,CAAC;AACL,IAAA,WAAA,CAAY,IAAY,EAAA;QACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACjC,QAAA,MAAM,kBAAkB,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC5C,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,YAAY,GAAiB,MAAM,CAAC;QACxC,IAAI,eAAe,GAAsB,EAAE,CAAC;AAC5C,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,YAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5B,YAAA,IAAI,OAAO,KAAK,GAAG,EAAE;AACnB,gBAAA,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC5B,gBAAA,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,gBAAA,eAAe,EAAE,CAAC;AAClB,gBAAA,aAAa,EAAE,CAAC;aACjB;iBAAM;AACL,gBAAA,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AACzB,oBAAA,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC5B,oBAAA,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7B,oBAAA,aAAa,EAAE,CAAC;AAChB,oBAAA,aAAa,EAAE,CAAC;iBACjB;aACF;YACD,QAAQ,IAAI,OAAO,CAAC;AACpB,YAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrB,YAAA,QAAQ,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;SAClD;QACD,MAAM,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7C,QAAA,MAAM,IAAI,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,eAAe,GAAG,CAAC,IAAI,aAAa,GAAG,CAAC,EAAE;AAC5C,YAAA,IAAI,eAAe,KAAK,aAAa,EAAE;gBACrC,YAAY,GAAG,SAAS,CAAC;aAC1B;AAAM,iBAAA,IAAI,aAAa,KAAK,aAAa,EAAE;gBAC1C,YAAY,GAAG,KAAK,CAAC;aACtB;iBAAM;gBACL,YAAY,GAAG,SAAS,CAAC;aAC1B;SACF;AACD,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACnC,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,QAAA,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;AACvC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;AAGG,SAAU,mBAAmB,CAAC,IAAW,EAAA;;AAG7C,IAAA,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;AACrE;;AC3EA,MAAM,SAAS,CAAA;AACb,IAAA,OAAO,EAAE,GAAW,CAAC,CAAC;AACtB,IAAA,EAAE,GAAyB,EAAE,SAAS,CAAC,EAAE,CAAC;IAC1C,gBAAgB,GAAsB,IAAI,CAAC;AAC3C,IAAA,IAAI,eAAe,GAAA;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;AACD,IAAA,KAAK,CAAS;AACd,IAAA,IAAI,OAAO,GAAA;QACT,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,OAAO,IAAI,EAAE,CAAC;AACpD,QAAA,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,QAAA,OAAO,OAAO,CAAC;KAChB;AAED,IAAA,IAAI,QAAQ,GAAA;AACV,QAAA,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;KACnD;IAED,WACE,CAAA,eAAkC,EAClC,KAAa,EAAA;AAEb,QAAA,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;AACxC,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;AAED,IAAA,QAAQ,CAAC,MAAc,EAAA;QACrB,IAAI,SAAS,GAAsB,IAAI,CAAC;AACxC,QAAA,OAAM,SAAS,KAAK,IAAI,EAAE;AACxB,YAAA,IAAI,SAAS,CAAC,QAAQ,GAAG,MAAM;AAAE,gBAAA,OAAO,SAAS,CAAC;AAClD,YAAA,SAAS,GAAG,SAAS,CAAC,eAAe,CAAC;SACvC;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AACD,IAAA,GAAG,CAAC,KAAa,EAAA;AACf,QAAA,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACnC;AAED,IAAA,CAAC,eAAe,GAAA;AACd,QAAA,MAAM,IAAI,CAAC;AACX,QAAA,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,EAAE;YACjC,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;SAC/C;QACD,OAAO;KACR;AAED,IAAA,CAAC,QAAQ,GAAA;AACP,QAAA,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,EAAE;YACjC,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;SACxC;AACD,QAAA,MAAM,IAAI,CAAC;QACX,OAAO;KACR;IAED,QAAQ,GAAA;QACN,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,EAAE,QAAQ,EAAE,CAAC;QACzD,OAAO,CAAC,eAAe,KAAK,IAAI,IAAI,eAAe,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;KAC3G;AAED,IAAA,EAAE,CAAC,QAAgB,EAAA;AACjB,QAAA,IAAI,QAAQ,CAAC;AACb,QAAA,IAAI,QAAQ,IAAI,CAAC,EAAE;AACjB,YAAA,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;SAC5B;aAAM;AACL,YAAA,QAAQ,GAAG,CAAE,QAAQ,GAAG,CAAC,CAAA;AACzB,YAAA,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;SACnC;AACD,QAAA,IAAI,IAAI,CAAC;AACT,QAAA,OAAM,QAAQ,IAAI,CAAC,EAAE;AACnB,YAAA,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;AACvB,YAAA,QAAQ,EAAE,CAAC;SACZ;AACD,QAAA,OAAO,IAAI,EAAE,KAAK,IAAI,IAAI,CAAC;KAC5B;;AAIa,SAAA,eAAe,CAC7B,eAAkC,EAClC,KAAuB,EAAA;AAEvB,IAAA,OAAO,IAAI,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;AAC/C,CAAC;SAEe,iBAAiB,GAAA;IAC/B,OAAO,SAAS,CAAC,EAAE,CAAC;AACtB;;ACpFA;;;AAGG;AACH;;AAEG;AACa,SAAA,qBAAqB,CAAC,IAAyB,EAAE,SAA4B,EAAA;AAC3F,IAAA,MAAM,cAAc,GAAG,iBAAiB,EAAE,CAAC;AAC3C,IAAA,OAAO,IAAI,CAAC,EAAE,IAAI,cAAc,GAAG,CAAC,CAAC,IAAI,SAAS,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;AAC/D;;ACJA,MAAM,sBAAsB,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC;AACvD,MAAM,kBAAkB,GAAG,oBAAoB,CAAC;AAChD,MAAM,qBAAqB,GAAG,uBAAuB,CAAC;AAEtD,SAAS,YAAY,CACnB,IAAuB,EACvB,MAAwB,EAAA;IAExB,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;AACjC,QAAA,OAAO,IAAI,CAAC;KACb;IACD,IAAI,SAAS,GAAsB,IAAI,CAAC;AACxC,IAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;QACjD,UAAU,CAAC,CAA0B,wBAAA,CAAA,CAAC,CAAC;AACzC,IAAA,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;AACnC,QAAA,SAAS,GAAG,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;YACtD,UAAU,CAAC,wBAAwB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAE,CAAA,CAAC,CAAC;KAC3D;AAAM,SAAA,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;QACtC,IAAI,eAAe,GAAG,IAAI,CAAC;AAC3B,QAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE;AAC/C,YAAA,MAAM,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAA,6BAAA,CAA+B,CAAC,CAAC;AAC9G,YAAA,MAAM,WAAW,GAAiB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC;AACrH,YAAA,MAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAA,qBAAA,CAAuB,CAAC,CAAC;AACrF,YAAA,eAAe,GAAG,WAAW,CAAC,aAAa,CAAC,IAAI,UAAU,CAAC,CAAA,qBAAA,EAAwB,qBAAqB,CAAC,OAAO,CAAA,CAAE,CAAC,CAAC;SACrH;QACD,SAAS,GAAG,eAAe,CAAC;KAC7B;AAAM,SAAA,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE,CAE3C;AAAM,SAAA,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE,CACxC;AACD,IAAA,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAM,YAAY,CAAA;AAChB,IAAA,MAAM,CAAsB;IAC5B,SAAS,GAAY,KAAK,CAAC;IAC3B,KAAK,GAA2B,EAAE,CAAC;AACnC,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED,IAAA,SAAS,CACP,MAAiB,EACjB,IAA8B,EAC9B,SAA4B,EAC5B,QAAsB,EAAA;AAEtB,QAAA,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;AACvE,YAAA,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAC5C,YAAA,IAAI,WAAW,CAAC,UAAU,KAAK,IAAI,EAAE;gBACnC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aACjD;SACF;QAED,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,QAAA,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,YAAA,KAAK,GAAG,qBAAqB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC/C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAChC,YAAA,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;AAChC,gBAAA,OAAO,KAAK,CAAC;aACd;AACD,YAAA,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;AACvB,gBAAA,OAAO,SAAS,CAAC;aAClB;SACF;AAED,QAAA,IAAI,KAAK,CAAC;AACV,QAAA,IAAI;AACF,YAAA,IAAI,IAAI,CAAC,OAAO,IAAI,MAAM,EAAE;AAC1B,gBAAA,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;AAC1B,oBAAA,IAAI,SAAS,KAAK,IAAI,EAAE;wBACtB,UAAU,CAAC,CAA2B,yBAAA,CAAA,CAAC,CAAC;qBACzC;AACD,oBAAA,QAAQ,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,EAAE,SAAS,EAAE,MAAK;AACpE,wBAAA,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;qBACpD,CAAC,EAAE;iBACL;qBAAM;AACL,oBAAA,QAAQ,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;iBAC9D;aACF;iBAAM;gBACL,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,CAA2C,yCAAA,CAAA,CAAC,CAAC;gBAC9F,MAAM,eAAe,GAAG,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,SAAS,EAAE,eAAe,IAAI,IAAI,IAAI,SAAS,CAAC;AACzH,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC;AACjF,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACrC,gBAAA,IAAI,WAAW,KAAK,GAAG,EAAE;oBACvB,MAAM,KAAK,GAAG,SAAS,EAAE,KAAK,IAAI,UAAU,CAAC,CAAuC,qCAAA,CAAA,CAAC,CAAC;AACtF,oBAAA,QAAQ,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE;iBAClD;qBAAM;AACL,oBAAA,QAAQ,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE;iBACxD;aACF;SACF;gBAAS;AACR,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;AAC5C,gBAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;aAC3B;SACF;KACF;IAED,cAAc,GAA0B,EAAE,CAAC;IAC3C,kBAAkB,GAA+B,IAAI,CAAC;IACtD,WAAW,CAAC,IAAyB,EAAE,QAAmB,EAAA;AACxD,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAC/B,QAAA,IAAI;YACF,OAAO,QAAQ,EAAE,CAAC;SACnB;gBAAS;AACR,YAAA,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;SACvF;KACF;AAED,IAAA,QAAQ,CACN,MAAiB,EACjB,IAA8B,EAC9B,SAA4B,EAC5B,QAAsB,EAAA;AAEtB,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AAChD,YAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAK;AACjC,gBAAA,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC3D,aAAC,CAAC,CAAC;SACJ;aAAM;AACL,YAAA,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;SAC1D;KAEF;IAED,QAAQ,CACN,MAAiB,EACjB,IAA8B,EAC9B,SAA4B,EAC5B,KAAc,EACd,QAAsB,EAAA;AAEtB,QAAA,IAAI;AACF,YAAA,IAAI,IAAI,CAAC,OAAO,IAAI,MAAM,EAAE;AAC1B,gBAAA,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;AAC1B,oBAAA,IAAI,SAAS,KAAK,IAAI,EAAE;wBACtB,UAAU,CAAC,CAA2B,yBAAA,CAAA,CAAC,CAAC;qBACzC;oBACD,OAAO,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,EAAE,SAAS,EAAE,MAAK;AAC3D,wBAAA,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC5D,qBAAC,CAAC,CAAC;iBACJ;qBAAM;AACL,oBAAA,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;iBAC3D;aACF;iBAAM;gBACL,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,CAA2C,yCAAA,CAAA,CAAC,CAAC;gBAC9F,MAAM,eAAe,GAAG,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,SAAS,EAAE,eAAe,IAAI,IAAI,IAAI,SAAS,CAAC;AACzH,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC;AACjF,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACrC,gBAAA,IAAI,WAAW,KAAK,GAAG,EAAE;oBACvB,MAAM,KAAK,GAAG,SAAS,EAAE,KAAK,IAAI,UAAU,CAAC,CAAuC,qCAAA,CAAA,CAAC,CAAC;oBACtF,OAAO,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;iBAC/C;qBAAM;oBACL,OAAO,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;iBACrD;aACF;SACF;gBAAS;AACR,YAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,+BAA+B,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;SAC7E;KACF;IAED,MAAM,YAAY,CAAC,QAA6B,EAAA;AAC9C,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;AACf,QAAA,IAAI;YACF,MAAM,QAAQ,EAAE,CAAC;SAClB;gBAAS;AACR,YAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;KACF;AAED,IAAA,CAAC,cAAc,CAAC,CACd,MAAc,EACd,IAAiB,EACjB,QAAqB,EAAA;QAErB,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,QAAA,OAAO,CAAC,OAA4B,EAAE,SAAqB,KACzD,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;KACvD;AAED,IAAA,CAAC,cAAc,CAAC,CAAC,MAAc,EAAE,IAAiB,EAAE,QAAqB,EAAA;QACvE,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,CAAC,OAA4B,EAAE,SAAqB,EAAE,KAAU,KACrE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;KAE9D;AACD,IAAA,CAAC,kBAAkB,CAAC,CAAC,MAAc,EAAE,IAAiB,EAAE,QAAqB,EAAA;QAC3E,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,QAAA,OAAO,OAAO,QAA6B,KAAI;AAC7C,YAAA,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AACpC,SAAC,CAAA;KACF;AACD,IAAA,CAAC,uBAAuB,CAAC,CAAC,MAAc,EAAE,IAAiB,EAAE,QAAqB,EAAA;QAChF,OAAO,YAAW;YAChB,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;AACzD,YAAA,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;gBAClC,MAAM,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aACvC;AACH,SAAC,CAAC;KACH;AACD,IAAA,CAAC,0BAA0B,CAAC,CAAC,MAAc,EAAE,IAAiB,EAAE,QAAqB,EAAA;QACnF,OAAO,YAAW;YAChB,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;AAC5D,YAAA,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;gBAClC,MAAM,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aACvC;AACH,SAAC,CAAC;KACH;AACD,IAAA,CAAC,aAAa,CAAC,CAAC,MAAc,EAAE,IAAiB,EAAE,QAAqB,EAAA;QACtE,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,QAAA,OAAO,CAAC,IAAY,EAAE,OAAiB,EAAE,KAAU,KAAS;AAC1D,YAAA,MAAM,IAAI,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,SAAS,GAAsB,IAAI,CAAC;AACxC,YAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvD,gBAAA,MAAM,qBAAqB,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAA,0BAAA,CAA4B,CAAC,CAAC;AACtG,gBAAA,MAAM,WAAW,GAAiB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;gBACpH,MAAM,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAe,aAAA,CAAA,CAAC,CAAC;AACxD,gBAAA,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,CAAA,qBAAA,EAAwB,qBAAqB,CAAC,OAAO,CAAA,CAAE,CAAC,CAAC;aACvG;AACD,YAAA,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;AAChC,gBAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;aACzD;iBAAM;AACL,gBAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;aAChE;AACH,SAAC,CAAC;KACH;AACD,IAAA,CAAC,YAAY,CAAC,CAAC,MAAc,EAAE,IAAiB,EAAE,QAAqB,EAAA;QACrE,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC5D,QAAA,OAAO,CAAC,IAAY,EAAE,OAAkB,KAAW;AACjD,YAAA,MAAM,IAAI,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;AACzC,YAAA,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;AACvE,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAC5C,gBAAA,IAAI,WAAW,CAAC,UAAU,KAAK,IAAI,EAAE;oBACnC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;iBACjD;aACF;AAED,YAAA,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;AAClC,gBAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,oBAAA,MAAM,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAA,uBAAA,CAAyB,CAAC,CAAC;AACvF,oBAAA,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;oBAC3E,IAAI,SAAS,EAAE;AACb,wBAAA,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;wBAC5B,MAAM;qBACP;iBACF;AACD,gBAAA,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;oBAClC,OAAO,GAAG,EAAE,CAAC;iBACd;aACF;AACD,YAAA,MAAM,mBAAmB,GAAG,CAC1B,mBAA0C,EAC1C,eAAuB,EACvB,SAA4B,EAC5B,OAAiB,EACjB,QAAgB,EAChB,aAAuB,EACvB,OAAmB,KACjB;gBACF,MAAM,qBAAqB,GAAG,mBAAmB,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC;AAC3E,gBAAA,IAAI,qBAAqB,KAAK,IAAI,EAAE;AAClC,oBAAA,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAC5B,OAAO;iBACR;gBACD,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,SAAS,CAAC,IAAI,UAAU,CAAC,CAAA,qBAAA,EAAwB,qBAAqB,CAAC,OAAO,CAAE,CAAA,CAAC,CAAC;gBAC5J,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC7C,MAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;AACxC,gBAAA,IAAI,KAAK,KAAK,IAAI,EAAE;AAClB,oBAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,wBAAA,MAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;wBACjC,mBAAmB,CACjB,mBAAmB,EACnB,eAAe,GAAG,CAAC,EACnB,SAAS,EACT,OAAO,EACP,QAAQ,GAAG,CAAC,EACZ,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EACrC,OAAO,CAAC,CAAC;qBACZ;iBACF;qBAAM;AACL,oBAAA,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,wBAAwB,qBAAqB,CAAC,OAAO,CAAA,CAAE,CAAC,CAAC;oBAC5G,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,mBAAmB,CAAC,MAAM,EAAE;wBACtD,mBAAmB,CACjB,mBAAmB,EACnB,eAAe,GAAG,CAAC,EACnB,SAAS,EACT,OAAO,EACP,QAAQ,GAAG,CAAC,EACZ,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EACrC,OAAO,CACR,CAAC;qBACH;iBACF;AACH,aAAC,CAAA;YACD,MAAM,aAAa,GAAe,EAAE,CAAC;AACrC,YAAA,mBAAmB,CACjB,IAAI,CAAC,mBAAmB,EACxB,CAAC,EACD,IAAI,EACJ,OAAO,EACP,CAAC,EACD,EAAE,EACF,aAAa,CACd,CAAC;YACF,MAAM,YAAY,GAAU,EAAE,CAAC;AAC/B,YAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,gBAAA,YAAY,CAAC,IAAI,CAAC,OAAO,CACvB,IAAI,CAAC,OAAO,EACZ,aAAa,CAAC,CAAC,CAAC,CACjB,CAAC,CAAC;aACJ;AACD,YAAA,OAAO,YAAY,CAAC;AACtB,SAAC,CAAA;KACF;IAED,eAAe,GAAG,IAAI,GAAG,CAAC;QACxB,cAAc;QACd,cAAc;QACd,kBAAkB;QAClB,uBAAuB;QACvB,0BAA0B;QAC1B,aAAa;QACb,YAAY;AACb,KAAA,CAAC,CAAC;AAEH,IAAA,GAAG,CACD,MAAgB,EAChB,IAAqB,EACrB,QAAqB,EAAA;AAErB,QAAA,IAAI,KAAK,CAAC;AACV,QAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,YAAA,IAAI,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACrC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B,gBAAA,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAC7B,gBAAA,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE;oBAC/C,UAAU,CAAC,CAAoD,kDAAA,CAAA,CAAC,CAAC;AACnE,gBAAA,OAAO,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,IAAI,UAAU,CAAC,wBAAwB,IAAI,CAAA,CAAE,CAAC,CAAC;aAC1F;AAAM,iBAAA,IAAI,IAAI,KAAK,UAAU,EAAE;AAC9B,gBAAA,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;aAClE;AAAM,iBAAA,IAAI,IAAI,KAAK,SAAS,EAAE;AAC7B,gBAAA,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;aACjE;iBAAM;AACL,gBAAA,MAAM,YAAY,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBAC/C,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1D,gBAAA,KAAK,GAAG,IAAI,CAAC,QAAQ,CACnB,MAAM,EACN,YAAY,CAAC,IAAI,EACjB,SAAS,EACT,QAAQ,CACT,CAAC;aACH;SACF;AAAM,aAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YACnC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAClC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAa,CAAC;AACjD,gBAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;aACnD;YACD,KAAK,GAAG,OAAO,CAAC,GAAG,CACjB,MAAM,EACN,IAAI,EACJ,QAAQ,CACT,CAAC;SACH;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,GAAG,CACD,MAAgB,EAChB,IAAqB,EACrB,KAAa,EACb,QAAqB,EAAA;AAErB,QAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,YAAA,MAAM,YAAY,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAC/C,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1D,YAAA,OAAO,IAAI,CAAC,QAAQ,CAClB,MAAM,EACN,YAAY,CAAC,IAAI,EACjB,SAAS,EACT,KAAK,EACL,QAAQ,CACT,CAAC;SACH;aAAM;AACL,YAAA,OAAO,OAAO,CAAC,GAAG,CAChB,MAAM,EACN,IAAI,EACJ,KAAK,EACL,QAAQ,CACT,CAAC;SACH;KACF;AAEF,CAAA;AAEe,SAAA,gBAAgB,CAC9B,MAAwB,EACxB,KAAa,EAAA;IAEb,OAAO,IAAI,KAAK,CAAS,KAAK,EAAE,IAAI,YAAY,CAAC,MAAM,CAAC,CAAgB,CAAC;AAC3E;;ACvZA,MAAM,qBAAqB,GAAG,IAAI,GAAG,EAAc,CAAC;AAEpD,SAAS,qBAAqB,CAC5B,MAA2B,EAC3B,SAAmC,EACnC,IAA8B,EAC9B,SAA4B,EAC5B,KAAY,EAAA;AAEZ,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC;AACvD,IAAA,IAAI,QAAQ,KAAK,KAAK,EAAE;QACtB,OAAO;KACR;AACD,IAAA,MAAM,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,qBAAqB,CAAC;AAC7F,IAAA,MAAM,oBAAoB,GAAG,GAAG,CAAC,OAAO,CAAC,iBAAiB,EAAE,SAAS,IAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AACpG,IAAA,MAAM,iBAAiB,GAAmB,IAAI,GAAG,EAAE,CAAC;AACpD,IAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,QAAA,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,cAAc,GAAG,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACtD,QAAA,IAAI,YAAY,GAAG,cAAc,EAAE,KAAK,EAAE,CAAC;QAC3C,IAAI,CAAC,YAAY,EAAE;AACjB,YAAA,YAAY,GAAG,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;SAC9C;aAAM;AACL,YAAA,IAAI,YAAY,CAAC,KAAK,KAAK,CAAC,EAAE;AAC5B,gBAAA,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC;AACvB,gBAAA,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;aAClD;SACF;AACD,QAAA,iBAAiB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;KACrC;IACD,MAAM,CAAC,kBAAkB,CAAC,IAAI,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;AAC9D,IAAA,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAEjD,IAAA,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACvC,IAAA,KAAI,MAAM,IAAI,IAAI,SAAS,EAAE;AAC3B,QAAA,IAAI,UAAU,KAAK,IAAI,CAAC,gBAAgB,EAAE;YACxC,SAAS;SACV;AACD,QAAA,KAAI,MAAM,YAAY,IAAI,iBAAiB,EAAE;AAC3C,YAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;AACvE,YAAA,qBAAqB,CACnB,MAAM,EACN,SAAS,EACT,IAAI,EACJ,YAAY,EACZ,QAAQ,IAAI,EAAE,CACf,CAAC;SACH;KACF;AACH,CAAC;AAGK,SAAU,kBAAkB,CAChC,MAA2B,EAC3B,IAA8B,EAC9B,SAA4B,EAC5B,KAAc,EAAA;AAEd,IAAkB,MAAM,CAAC,YAAY;;IAErC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QACjC,OAAO;KACR;AACD,IAAA,MAAM,MAAM,IAAI,KAAK,IAAI,EAAE,CAAU,CAAC;AACtC,IAAA,qBAAqB,CACnB,MAAM,EACN,MAAM,CAAC,WAAW,EAClB,IAAI,EACJ,SAAS,EACT,MAAM,CACP,CAAC;AACJ;;ACzEA,SAAS,kBAAkB,CACzB,IAAyB,EACzB,SAA4B,EAC5B,MAAwB,EAAA;AAExB,IAAA,MAAM,mBAAmB,GAA0B,IAAI,CAAC,mBAAmB,IAAI,EAAE,CAAC;IAClF,MAAM,mBAAmB,GAAG,CAAC,GAAU,EAAE,gBAAmC,EAAE,iBAA+B,KAAI;AAC/G,QAAA,MAAM,kBAAkB,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,EAAE;YACvB,IAAI,gBAAgB,EAAE;AACpB,gBAAA,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aAC1C;YACD,OAAO;SACR;QACD,MAAM,YAAY,GAAG,SAAS,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;QAChD,IAAI,YAAY,EAAE;YAChB,mBAAmB,CAAC,GAAG,GAAG,CAAC,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;SAC/D;aAAM;YACL,MAAM,WAAW,GAAG,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;AACnF,YAAA,KAAI,MAAM,aAAa,IAAI,WAAW,IAAI,EAAE,EAAE;gBAC5C,mBAAmB,CAAC,GAAG,GAAG,CAAC,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;aAChE;SACF;AACH,KAAC,CAAA;IACD,MAAM,iBAAiB,GAAiB,EAAE,CAAC;AAC3C,IAAA,mBAAmB,CAAC,CAAC,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;AACrD,IAAA,OAAO,iBAAiB,CAAC;AAC3B,CAAC;AAED,SAAS,uBAAuB,CAC9B,OAAoC,EACpC,YAAkC,EAClC,MAAiC,EACjC,eAAyC,EACzC,UAA0E,EAAA;;AAG1E,IAAA,IAAI,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC;QAAE,OAAO;IACzC,MAAM,kBAAkB,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC7D,IAAA,KAAI,MAAM,iBAAiB,IAAI,kBAAkB,IAAI,EAAE,EAAE;QACvD,IAAI,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,iBAAiB,CAAC,UAAU,KAAK,OAAO,IAAI,iBAAiB,CAAC,WAAW,KAAK,GAAG,EAAE;YACxH,SAAS;SACV;QACD,IAAI,kBAAkB,GAAG,IAAI,CAAC;QAC9B,IAAI,UAAU,GAAG,KAAK,CAAC;AACvB,QAAA,KAAI,IAAI,CAAC,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACzE,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;AACpE,YAAA,IAAI,eAAe,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE;gBAC3C,UAAU,GAAG,IAAI,CAAC;gBAClB,MAAM;aACP;YACD,MAAM,GAAG,GAAG,OAAO,CAAC,mBAAmB,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YACpE,IAAI,GAAG,GAAG,CAAC;gBAAE,SAAS;YACtB,kBAAkB,GAAG,YAAY,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;YACnD,IAAI,kBAAkB,KAAK,IAAI;gBAAE,MAAM;SACxC;QACD,IAAI,UAAU,EAAE;YACd,SAAS;SACV;QACD,IAAI,iBAAiB,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YACpD,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,iBAAiB,EAAE,kBAAkB,EAAE,MAAM,CAAC,CAAC;AAC7F,YAAA,KAAI,MAAM,SAAS,IAAI,kBAAkB,EAAE;gBACzC,UAAU,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAC,CAAC,CAAC;gBACtD,uBAAuB,CAAC,iBAAiB,EAAE,SAAS,EAAE,MAAM,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;aAC5F;SACF;aAAM;AACL,YAAA,UAAU,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;YAC5D,uBAAuB,CAAC,iBAAiB,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;SACvF;KAEF;AAEH,CAAC;AAGe,SAAA,sBAAsB,CACpC,UAAqE,EACrE,MAAwB,EAAA;AAExB,IAAA,MAAM,eAAe,GAAG,IAAI,GAAG,EAAuB,CAAC;IACvD,MAAM,UAAU,GAA8D,EAAE,CAAC;AACjF,IAAA,KAAI,MAAM,GAAG,IAAI,UAAU,EAAE;AAC3B,QAAA,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACtB,QAAA,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;AAChC,QAAA,IAAI,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC;YAAE,SAAS;QACxC,uBAAuB,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;AAC9E,QAAA,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC3B;AACD,IAAA,OAAO,UAAU,CAAC;AAEpB;;AC1EA,MAAM,OAAO,CAAA;IACX,WAAW,GAAyC,EAAE,CAAC;AACvD,IAAA,iBAAiB,GACf,IAAI,GAAG,EAAwE,CAAC;IAClF,aAAa,GAA4B,EAAE,CAAC;AAC5C,IAAA,MAAM,CAA8B;AAEpC,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAED,IAAA,UAAU,CAAC,OAAmC,EAAA;AAC5C,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;KAClC;AAED,IAAA,+BAA+B,CAC7B,IAA8B,EAC9B,SAA4B,EAC5B,KAAc,EAAA;QAEd,MAAM,KAAK,GAAG,qBAAqB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;AAC9C,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AAClC,QAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;KAClC;AAED,IAAA,mBAAmB,CAAC,SAAqB,EAAA;AACvC,QAAA,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACtC,QAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;KAClC;IAED,SAAS,GAAA;AACP,QAAA,MAAM,wBAAwB,GAAG,OAAO,CAAC,aAAa,EAAQ,CAAC;AAC/D,QAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;AACzD,QAAA,OAAO,wBAAwB,CAAC;KACjC;AAED,IAAA,iBAAiB,GACf,OAAO,CAAC,aAAa,EAAqC,CAAC;IAC7D,MAAM,IAAI,CAAC,oBAAgD,EAAA;QACzD,MAAM,oBAAoB,CAAC,OAAO,CAAC;AACnC,QAAA,MAAM,MAAM,GAAGJ,iBAAe,EAAE,CAAC;QACjC,OAAO,IAAI,EAAE;AACX,YAAA,IAAI;gBACF,MAAM,wBAAwB,GAC5B,MAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;gBACrC,MAAM,CAAC,KAAK,IAAI,WAAW,CAAC,IAAI,CAAC,CAAO,KAAA,CAAA,CAAC,CAAC;gBAC5C,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,gBAAA,IAAI;AACF,oBAAA,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AAClB,oBAAA,IAAI,MAAM,CAAC,KAAK,EAAE;AAChB,wBAAA,WAAW,CAAC,IAAI,CAAC,CAAA,GAAA,CAAK,CAAC,CAAC;wBACxB,WAAW,CAAC,OAAO,CAAC,CAAA,IAAA,CAAM,EAAE,CAAO,KAAA,CAAA,EAAE,CAAK,GAAA,CAAA,CAAC,CAAC;wBAC5C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AACrD,wBAAA,WAAW,CAAC,aAAa,CAAC,CAAA,IAAA,CAAM,CAAC,CAAC;AAClC,wBAAA,WAAW,CAAC,UAAU,CAAC,CAAA,KAAA,CAAO,CAAC,CAAC;AAChC,wBAAA,WAAW,CAAC,UAAU,CAAC,CAAA,GAAA,CAAK,CAAC,CAAC;qBAC/B;iBACF;wBAAS;oBACR,OAAO,CAAC,aAAa,EAAE,CAAC;oBACxB,IAAI,wBAAwB,EAAE;wBAC5B,wBAAwB,CAAC,OAAO,EAAE,CAAC;wBACnC,MAAM;qBACP;iBACF;aACF;YAAC,OAAM,CAAC,EAAE;AACT,gBAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAClB;oBAAS;AACR,gBAAA,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,aAAa,EAAqC,CAAC;aACrF;SACF;KACF;AAED,IAAA,MAAM,WAAW,GAAA;QACf,OAAM,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AACjC,YAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACrC,YAAA,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AACtB,YAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,gBAAA,MAAM,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC/B,MAAM,OAAO,EAAE,CAAC;aACjB;SACF;KACF;AAED,IAAA,MAAM,OAAO,GAAA;QACX,MAAM,uBAAuB,GAAiC,EAAE,CAAC;QACjE,MAAM,WAAW,GAAe,EAAE,CAAC;AACnC,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,QAAA,MAAM,oBAAoB,GAAG,IAAI,GAAG,EAAc,CAAC;AACnD,QAAA,MAAM,0BAA0B,GAAG,IAAI,GAAG,EAAU,CAAC;QACrD,OAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,CAAC,EAAE;AACrC,YAAA,MAAM,kBAAkB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC;AAEvE,YAAA,MAAM,WAAW,GAAG,EAAE,CAAC;YACvB,MAAM,iBAAiB,GAAG,EAAE,CAAC;YAC7B,MAAM,wBAAwB,GAAG,EAAE,CAAC;AACpC,YAAA,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;AAC/B,YAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,gBAAA,MAAM,IAAI,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;AACnC,gBAAA,IAAI,QAAQ,CAAC;AACb,gBAAA,IAAI,OAAO,IAAI,IAAI,EAAE;AACnB,oBAAA,IAAI,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC;wBAAE,SAAS;oBAC7C,MAAM,SAAS,GAAG,IAAkB,CAAC;oBACrC,QAAQ,GAAG,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACrD,oBAAA,oBAAoB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBACrC;qBAAM;AACL,oBAAA,MAAM,kBAAkB,GAAG,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5E,oBAAA,IAAI,0BAA0B,CAAC,GAAG,CAAC,kBAAkB,CAAC;wBAAE,SAAS;oBACjE,MAAM,gBAAgB,GAAG,IAA+D,CAAC;oBACzF,IAAI,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;AACjD,wBAAA,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;qBAC1C;oBACD,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;AACpD,wBAAA,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;qBACjD;AACD,oBAAA,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACzD,oBAAA,0BAA0B,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AACnD,oBAAA,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACpC;gBACD,WAAW,CAAC,IAAI,CAAC,GAAG,QAAQ,IAAI,EAAE,CAAC,CAAC;aACrC;;AAGD,YAAA,MAAM,wBAAwB,GAAG,IAAI,GAAG,EAAU,CAAC;AACnD,YAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,gBAAA,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;AAC9C,gBAAA,MAAM,kBAAkB,GAAG,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBACpG,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC;AAC7D,gBAAA,kBAAkB,CAAC,MAAM,EAAE,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AACrF,gBAAA,wBAAwB,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;aAClD;YAED,MAAM,gBAAgB,GAAwF,EAAE,CAAC;YACjH,MAAM,oCAAoC,GAAG,MAAM,CAAC,OAAO,CAAC,wBAAwB,EAAE,GAAG,IAAG;AAC1F,gBAAA,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI;oBAAE,UAAU,CAAC,CAAoB,kBAAA,CAAA,CAAC,CAAC;AACnE,gBAAA,MAAM,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;AACvC,gBAAA,MAAM,eAAe,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,KAAK,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa;AACnF,oBAAA,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,SAAS,EAAE,eAAe,IAAI,IAAI,CAAC,CAAC;gBAC3D,MAAM,WAAW,GAAG,qBAAqB,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;AACvE,gBAAA,IAAI,EAAE,WAAW,IAAI,gBAAgB,CAAC,EAAE;AACtC,oBAAA,gBAAgB,CAAC,WAAW,CAAC,GAAG,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,eAAe,EAAC,CAAC;iBAChF;AACD,gBAAA,OAAO,WAAW,CAAC;AACrB,aAAC,CAAC,CAAC;AACH,YAAA,KAAI,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,oCAAoC,CAAC,EAAE;AACxF,gBAAA,MAAM,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AAC3C,gBAAA,IAAI,wBAAwB,CAAC,GAAG,CAAC,WAAW,CAAC;oBAAE,SAAS;gBACxD,IAAI,OAAO,IAAI,KAAK,WAAW;oBAAE,SAAS;AAC1C,gBAAA,MAAM,SAAS,GAAG,gBAAgB,CAAC,WAAW,CAAC,CAAC;gBAChD,IAAI,SAAS,KAAK,IAAI;oBAAE,SAAS;gBAEjC,MAAM,MAAM,GAAG,EAAE,CAAC;gBAClB,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,gBAAA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,oBAAA,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,oBAAA,MAAM,kBAAkB,GAAG,qBAAqB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;oBAC1E,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC;AAC7D,oBAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnB,oBAAA,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;AAChC,oBAAA,IAAI,SAAS,KAAK,IAAI,EAAE;AACtB,wBAAA,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;qBACtC;AACD,oBAAA,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC7B;AACD,gBAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;AACzE,gBAAA,KAAI,MAAM,OAAO,IAAI,QAAQ,EAAE;AAC7B,oBAAA,MAAM,mBAAmB,GAA+B;wBACtD,SAAS;wBACT,OAAO;wBACP,WAAW;wBACX,MAAM;qBACP,CAAC;AACF,oBAAA,uBAAuB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;iBACnD;aACF;YAED,MAAM,YAAY,GAAG,sBAAsB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AACjE,YAAA,KAAI,MAAM,WAAW,IAAI,YAAY,EAAE;AACrC,gBAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;gBAC7E,WAAW,CAAC,IAAI,CAAC,GAAG,QAAQ,IAAI,EAAE,CAAC,CAAC;aACrC;SAEF;AACD,QAAA,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,OAAO,EAAC,QAAQ,EAAE,WAAW,EAAE,oBAAoB,EAAE,uBAAuB,EAAC,CAAC;KAC/E;IAED,MAAM,MAAM,CAAC,QAAoB,EAAA;QAC/B,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,YAAW;AAC1D,YAAA,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC1B,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,MAAM,IAAI,GAAA;AACR,QAAA,OAAM,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,KAAK,CAAC,EAAE;;AAExE,YAAA,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;;YAEzB,MAAM,EAAE,QAAQ,EAAE,oBAAoB,EAAE,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;;AAEhE,YAAA,KAAI,MAAM,mBAAmB,IAAI,oBAAoB,EAAE;AACrD,gBAAA,mBAAmB,CAAC,OAAO,CAAC,WAAW,CAAC,cAAc,CAAC,mBAAmB,CAAC,WAAW,EAAE,mBAAmB,CAAC,MAAM,CAAC,CAAC;aACrH;AACD,YAAA,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACvB,gBAAA,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aAC7B;SACF;KACF;AAED,IAAA,OAAO,aAAa,GAAG,CAAC,CAAC;;AAGrB,SAAU,aAAa,CAAC,MAAwB,EAAA;AACpD,IAAA,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B;;AC3OM,SAAU,iBAAiB,CAAC,OAAe,EAAA;AAC/C,IAAA,IAAI;;QAEF,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;;AAEhD,QAAA,OAAO,OAAO,OAAO,CAAC,YAAY,KAAK,UAAU,CAAC;KACnD;AAAC,IAAA,MAAM;;AAEN,QAAA,OAAO,KAAK,CAAC;KACd;AACH;;ACNA,SAAS,mBAAmB,CAAC,UAAuB,EAAA;IAClD,IAAI,IAAI,GAAgB,UAAU,CAAC;IACnC,OAAM,IAAI,EAAE;AACV,QAAA,IAAI,IAAI,YAAY,UAAU,EAAE;AAC9B,YAAA,OAAO,IAAI,CAAC;SACb;AACD,QAAA,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;KACxB;AACH,CAAC;SAEe,YAAY,CAAC,OAAoB,EAAE,MAAwB,EAAE,UAAyB,EAAA;AAClG,IAAA,IAAI,MAAM,CAAC,eAAe,EAAE;AAC1B,QAAA,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,IAAI,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;AAChE,YAAA,MAAM,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;AAC1D,YAAA,UAAU,CAAC,kBAAkB,GAAG,CAAC,UAAU,CAAC,CAAC;SAC9C;aAAM;AACL,YAAA,UAAU,CAAC,CAAgF,6EAAA,EAAA,MAAM,CAAC,OAAO,CAAA,CAAE,CAAC,CAAC;SAC9G;KACF;SAAM;QACL,MAAM,oBAAoB,GAAG,mBAAmB,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC;AACjF,QAAA,MAAM,WAAW,GAAG,oBAAoB,CAAC,kBAAkB,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACrC,oBAAoB,CAAC,kBAAkB,GAAG,CAAC,GAAG,WAAW,EAAE,UAAU,CAAC,CAAC;SACxE;KACF;AAEL;;MCZa,eAAe,CAAA;IAC1B,IAAI,GAA4B,YAAY,CAAC;AAC7C,IAAA,MAAM,CAA2B;AACjC,IAAA,QAAQ,CAA4B;AACpC,IAAA,UAAU,CAAoB;AAC9B,IAAA,UAAU,CAAoB;AAC9B,IAAA,KAAK,CAAkB;AACvB,IAAA,UAAU,CAAkB;AAC5B,IAAA,OAAO,CAAkB;AACzB,IAAA,YAAY,CAAsB;AAClC,IAAA,aAAa,CAAqB;AAClC,IAAA,WAAW,CAAkB;IAC7B,SAAS,GAA4B,WAAW,CAAC;AACjD,IAAA,KAAK,CAAyB;AAC9B,IAAA,cAAc,CAAc;AAE5B,IAAA,WAAW,GAAoC,IAAI,GAAG,EAAE,CAAC;AACzD,IAAA,cAAc,GAA6B,IAAI,GAAG,EAAE,CAAC;AACrD,IAAA,mBAAmB,GAAyD,IAAI,OAAO,EAAE,CAAC;AAC1F,IAAA,aAAa,GAA+E,IAAI,GAAG,EAAE,CAAC;AAEtG,IAAA,kBAAkB,GAAgC,OAAO,CAAC,aAAa,EAAQ,CAAC;IAChF,YAAY,GAA+B,IAAI,CAAC;IAChD,wBAAwB,GAA4B,EAAE,CAAC;IACvD,eAAe,GAAqB,EAAE,CAAC;IAEvC,WAAY,CAAA,MAAwB,EAAE,KAAoB,EAAA;AACxD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;AACvB,YAAA,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;SACvB;AACD,QAAA,MAAM,cAAc,GAAG,KAAK,CAAC,WAA+B,CAAC;AAC7D,QAAA,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC;AACxC,QAAA,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,UAAU,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC,UAAU,CAAC;QAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACrD,QAAA,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;AACnC,QAAA,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC;AAChD,QAAA,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,aAAa,CAAC;AAClD,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC,cAAc,CAAC;;AAEpD,QAAA,MAAM,kBAAkB,GAAG,CAAC,IAAyB,KAAI;AACvD,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YACnC,IAAI,UAAU,KAAK,IAAI;gBAAE,OAAO;AAChC,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YACxC,kBAAkB,CAAC,UAAU,CAAC,CAAC;AACjC,SAAC,CAAA;AACD,QAAA,KAAI,MAAM,IAAI,IAAI,cAAc,CAAC,KAAK,EAAE;AACtC,YAAA,MAAM,IAAI,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;YACzC,kBAAkB,CAAC,IAAI,CAAC,CAAC;SAC1B;;AAED,QAAA,KAAI,MAAM,QAAQ,IAAI,cAAc,CAAC,SAAS,EAAE;YAC9C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtD,YAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,qBAAqB,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;SACjE;AACD,QAAA,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAChF,QAAA,KAAI,MAAM,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;AAClC,YAAA,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC;gBAAE,SAAS;AACrC,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;YACzD,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SAC7C;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC5C;AAED,IAAA,MAAM,iBAAiB,GAAA;AACrB,QAAA,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACvD,QAAA,MAAM,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,EAAE,CAAC;QACjD,MAAM,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,YAAW;AACnD,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;AAC5B,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5D,QAAA,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;KACnC;AAED,IAAA,MAAM,oBAAoB,GAAA;AACxB,QAAA,MAAM,IAAI,CAAC,UAAU,CAAC,0BAA0B,CAAC,EAAE,CAAC;KACrD;AAED,IAAA,MAAM,cAAc,CAAC,WAAyB,EAAE,QAA2B,EAAA;AACzE,QAAA,IAAI;AACF,YAAA,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;AAC9B,gBAAA,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;aAC/C;AACD,YAAA,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AAChC,YAAA,MAAM,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,SAAS,EAAE,YAAW;gBACtF,MAAM,QAAQ,EAAE,CAAC;AACnB,aAAC,CAAC,CAAC;SACJ;gBAAS;AACR,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;KACF;AAED,IAAA,MAAM,wBAAwB,CAC5B,IAA8B,EAC9B,SAAqB,EACrB,QAA2B,EAAA;AAE3B,QAAA,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrC,QAAA,IAAI;YACF,OAAO,MAAM,QAAQ,EAAE,CAAC;SACzB;gBAAS;AACR,YAAA,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC;AACpC,YAAA,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;SAC5B;KACF;AAED,IAAA,mBAAmB,CACjB,IAA8B,EAC9B,SAAqB,EACrB,QAAkB,EAAA;AAElB,QAAA,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrC,QAAA,IAAI;YACF,OAAO,QAAQ,EAAE,CAAC;SACnB;gBAAS;AACR,YAAA,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC;AACpC,YAAA,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;SAC5B;KACF;IAED,uBAAuB,GAAA;QACrB,IAAI,IAAI,CAAC,wBAAwB,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9C,YAAA,OAAO,IAAI,CAAC;SACb;AACD,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,wBAAwB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACrF,QAAA,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;AAC/B,YAAA,OAAO,IAAI,CAAC;SACb;AACD,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACxE,QAAA,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;AACpC,YAAA,OAAO,IAAI,CAAC;SACb;AACD,QAAA,OAAO,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;KAC1B;AAED,IAAA,mBAAmB,CAAC,cAAsB,EAAA;AACxC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAC/C,QAAA,IAAI,OAAO,KAAK,IAAI,EAAE;AACpB,YAAA,OAAO,IAAI,CAAC;SACb;AACD,QAAA,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACzD,QAAA,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,OAAO,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;SAC5C;AACD,QAAA,OAAO,IAAI,CAAC;KACb;IACD,eAAe,GAAA;AACb,QAAA,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;AAC9B,YAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;SACxC;AACD,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;KACtC;IAED,wCAAwC,GAAqE,EAAE,CAAC;IAChH,2BAA2B,GAAiD,EAAE,CAAC;IAE/E,cAAc,GAAA;QACZ,OAAO;AACL,YAAA,IAAI,EAAY,IAAI;AACpB,YAAA,cAAc,EAAE,IAAI;AACpB,YAAA,QAAQ,EAAQ,EAAE;SACnB,CAAA;KACF;IAED,6BAA6B,CAAC,IAAwB,EAAE,SAA2B,EAAA;AACjF,QAAA,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,IAAI,QAAQ,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzD,YAAA,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;AACnC,gBAAA,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;gBACjC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;aACtD;AACD,YAAA,OAAO,QAAQ,CAAC;SACjB;aAAM;YACL,IAAI,mBAAmB,GAAG,IAAI,CAAC,wCAAwC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACjF,YAAA,IAAI,OAAO,mBAAmB,KAAK,WAAW,EAAE;AAC9C,gBAAA,mBAAmB,GAAG,IAAI,OAAO,EAA2C,CAAC;gBAC7E,IAAI,CAAC,wCAAwC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC;aAC9E;YACD,IAAI,QAAQ,GAAG,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAClD,YAAA,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;AACnC,gBAAA,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;AACjC,gBAAA,mBAAmB,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;aAC9C;AACD,YAAA,OAAO,QAAQ,CAAC;SACjB;KACF;AACD,IAAA,WAAW,CACT,IAA8B,EAC9B,SAA4B,EAC5B,OAAmB,EAAA;QAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACrE,QAAA,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACjC;AACD,IAAA,kBAAkB,CAChB,IAAsC,EACtC,SAAoC,EACpC,kBAAkC,EAAA;QAElC,MAAM,QAAQ,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACrE,QAAA,QAAQ,CAAC,cAAc,GAAG,kBAAkB,CAAC;KAC9C;AACD,IAAA,QAAQ,CACN,IAA6B,EAC7B,SAA2B,EAC3B,IAAe,EAAA;QAEf,MAAM,QAAQ,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACrE,QAAA,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;KACtB;IACD,WAAW,CACT,IAA6B,EAC7B,SAA2B,EAAA;QAE3B,MAAM,QAAQ,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrE,OAAO,QAAQ,CAAC,QAAQ,CAAC;KAC1B;IACD,iBAAiB,CACf,IAA6B,EAC7B,SAA2B,EAAA;QAE3B,MAAM,QAAQ,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrE,OAAO,QAAQ,CAAC,cAAc,CAAC;KAChC;IACD,OAAO,CACL,IAA6B,EAC7B,SAA2B,EAAA;QAE3B,MAAM,QAAQ,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrE,OAAO,QAAQ,CAAC,IAAI,CAAC;KACtB;IAED,gBAAgB,CAAC,IAAyB,EAAE,OAA4B,EAAA;QACtE,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACjD,QAAA,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;AACrC,YAAA,UAAU,GAAG,IAAI,GAAG,EAAuB,CAAC;YAC5C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;SAC7C;AACD,QAAA,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACtB;AACF,CAAA;AAEe,SAAA,qBAAqB,CAAC,MAAwB,EAAE,SAAwB,EAAA;AACtF,IAAA,OAAO,IAAI,eAAe,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAChD;;AC1QA,MAAM,eAAe,GAAG,mBAAmB,CAAC;AAC5C,MAAM,cAAc,GAAe,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;AASzF,SAAU,8BAA8B,CAAC,IAAY,EAAA;IACzD,MAAM,KAAK,GAAkB,EAAE,CAAC;IAChC,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,IAAI,KAAI;AACtD,QAAA,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACnB,MAAM,CAAE,IAAI,CAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;;AAE7B,YAAA,OAAO,CAAO,IAAA,EAAA,kBAAkB,CAAG,EAAA,IAAI,KAAK,CAAC;SAC9C;AACD,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAClD,MAAM,WAAW,GAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QACxD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,EAAE;AACnC,YAAA,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxB,OAAO,CAAA,qBAAA,EAAwB,IAAI,CAAA,EAAA,CAAI,CAAC;SACzC;AAAM,aAAA,IAAI,IAAI,KAAK,OAAO,EAAE;YAC3B,MAAM,OAAO,GAAG,EAAE,CAAC;AACnB,YAAA,GAAG;gBACD,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,IAAI,UAAU,CAAC,oDAAoD,CAAC,CAAC;AAC7F,gBAAA,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;AACtB,oBAAA,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAC5B,MAAM;iBACP;AAAM,qBAAA,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;AACjC,oBAAA,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBAC7B;qBAAM;oBACL,UAAU,CAAC,oDAAoD,CAAC,CAAC;iBAClE;aACF,QAAO,IAAI,EAAE;AACd,YAAA,OAAO,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACzB;AAAM,aAAA,IAAI,IAAI,KAAK,QAAQ,EAAE;YAC5B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,IAAI,UAAU,CAAC,oDAAoD,CAAC,CAAC;AAC7F,YAAA,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,EAAE;AACvB,gBAAA,OAAO,aAAa,CAAC;aACtB;iBAAM;gBACL,UAAU,CAAC,sDAAsD,CAAC,CAAC;aACpE;SACF;AAAM,aAAA,IAAI,IAAI,KAAK,QAAQ,EAAE;AAC5B,YAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,qDAAqD,CAAC,CAAC;AACnG,YAAA,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;AACxD,gBAAA,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACxB,gBAAA,OAAO,sCAAsC,QAAQ,CAAC,MAAM,CAAiC,8BAAA,EAAA,MAAM,IAAI,CAAC;aACzG;iBAAM;gBACL,UAAU,CAAC,qDAAqD,CAAC,CAAC;aACnE;SACF;AAAM,aAAA,IAAI,IAAI,KAAK,MAAM,EAAE;AAC1B,YAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,mDAAmD,CAAC,CAAC;AACjG,YAAA,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,EAAE;AAC1B,gBAAA,OAAO,CAAsC,mCAAA,EAAA,QAAQ,CAAC,MAAM,QAAQ,CAAC;aACtE;iBAAM;gBACL,UAAU,CAAC,mDAAmD,CAAC,CAAC;aACjE;SACF;aAAM;YACL,UAAU,CAAC,gDAAgD,CAAC,CAAC;SAC9D;AACH,KAAC,CAAC,CAAC;AACL;;AC/DA,MAAM,MAAM,GAAG,4BAA4B,CAAC;AAEtC,SAAU,6BAA6B,CAC3C,EAAgB,EAChB,QAA6B,EAC7B,SAAmB,EAAE,EAAA;;AAGrB,IAAA,QAAQ,CAAC,UAAU,EAAE,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAG,EAAA,qBAAqB,GAAG,EAAE,CAAA,CAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;AACrG,IAAA,IAAI,QAAQ,CAAC,YAAY,KAAK,MAAM,EAAE;;QAEpC,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AACvD,QAAA,KAAI,IAAI,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;AACpD,YAAA,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SAC5C;QACD,MAAM,QAAQ,GAAG,QAAQ,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;QAC5D,WAAW,CAAC,YAAY,CAAC,mBAAmB,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC;QAC9D,QAAQ,GAAG,WAAW,CAAC;KACxB;AACD,IAAA,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAG;QAC/D,6BAA6B,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;AAChE,KAAC,CAAC,CAAC;AACH,IAAA,gBAAgB,CAAC,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;AACvC,IAAA,OAAO,EAAE,CAAC;AACZ;;ACzBgB,SAAA,YAAY,CAAC,EAAU,EAAE,IAAW,EAAA;IAClD,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACpD,QAAQ,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;AACpC,IAAA,QAAQ,CAAC,SAAS,GAAG,8BAA8B,CAAC,IAAI,CAAC,CAAC;AAC1D,IAAA,6BAA6B,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;AAC9C;;ACNM,SAAU,YAAY,CAAC,aAA4B,EAAA;AACvD,IAAA,OAAO,aAAa,GAAI,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,WAAwC,GAAG,WAAW,CAAC;AACvH;;ACDM,SAAU,kBAAkB,CAAC,UAAuB,EAAA;AACxD,IAAA,MAAM,YAAY,GAAGA,iBAAe,EAAE,CAAC;IACvC,OAAO;AACL,QAAA,eAAe,EAAE,UAAU,CAAC,eAAe,IAAI,YAAY,CAAC,eAAe;AAC3E,QAAA,OAAO,EAAU,UAAU,CAAC,OAAO,IAAI,IAAI;KAC5C,CAAC;AACJ;;ACMM,SAAU,oBAAoB,CAAC,aAAiC,EAAA;IACpE,MAAM,eAAe,GAAG,kBAAkB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACjE,IAAA,MAAM,EAAE,GAAG,UAAU,EAAE,CAAC;IACxB,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,aAAa,CAAC;IAChD,MAAM,YAAY,GAAqB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,mBAAmB,CAAC,CAAC;IAC9E,MAAM,aAAa,GAAqB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,oBAAoB,CAAC,CAAC;AAChF,IAAA,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AACvB,IAAA,WAAW,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AACrB,IAAA,kBAAkB,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;IACnC,MAAM,SAAS,GAAG,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AACxD,IAAA,MAAM,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC;IAC9C,OAAO,cAAc,SAAS,CAAA;AAC5B,QAAA,OAAO,CAAmB;AAE1B,QAAA,WAAA,GAAA;AACE,YAAA,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,eAAe,EAAE,IAAqB,CAAC,CAAC;SAC9E;QAED,iBAAiB,GAAA;AACf,YAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;SAClC;QAED,oBAAoB,GAAA;AAClB,YAAA,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC;SACrC;QAED,OAAO,MAAM,CAAC,OAAc,EAAA;YAC1B,IAAI,aAAa,EAAE;AACjB,gBAAA,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC;aAClE;iBAAM;AACL,gBAAA,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACtC;SACF;AAED,QAAA,WAAW,EAAE,GAAA;AACX,YAAA,OAAO,EAAE,CAAC;SACX;AACD,QAAA,OAAO,KAAK,GAAU,IAAI,CAAC;AAC3B,QAAA,WAAW,IAAI,GAAA;YACb,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QACD,WAAW,IAAI,CAAC,KAAY,EAAA;AAC1B,YAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,YAAA,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC7B,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;AAED,QAAA,OAAO,IAAI,GAAU,GAAG,CAAC;AACzB,QAAA,WAAW,GAAG,GAAA;YACZ,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QACD,WAAW,GAAG,CAAC,KAAY,EAAA;AACzB,YAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAClB,YAAA,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC5B,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;AACD,QAAA,OAAO,SAAS,GAA+B,IAAI,CAAC;AACpD,QAAA,WAAW,QAAQ,GAAA;AACjB,YAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC3C;YACD,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;AACD,QAAA,OAAO,WAAW,GAAyB,IAAI,CAAC;AAChD,QAAA,WAAW,UAAU,GAAA;AACnB,YAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACrB,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC/C;YACD,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;AACD,QAAA,OAAO,WAAW,GAAyB,IAAI,CAAC;AAChD,QAAA,WAAW,UAAU,GAAA;AACnB,YAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACrB,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC/C;YACD,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;AACD,QAAA,OAAO,aAAa,GAAqB,YAAY,CAAC;AACtD,QAAA,WAAW,YAAY,GAAA;YACrB,OAAO,IAAI,CAAC,aAAa,CAAC;SAC3B;AACD,QAAA,OAAO,cAAc,GAAqB,aAAa,CAAC;AACxD,QAAA,WAAW,aAAa,GAAA;YACtB,OAAO,IAAI,CAAC,cAAc,CAAC;SAC5B;AACD,QAAA,WAAW,SAAS,GAAA;AAClB,YAAA,OAAO,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACrC;AACD,QAAA,WAAW,KAAK,GAAA;AACd,YAAA,OAAO,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACjC;AACD,QAAA,OAAO,eAAe,GAAuB,IAAI,CAAC;AAClD,QAAA,WAAW,cAAc,GAAA;AACvB,YAAA,IAAG,IAAI,CAAC,eAAe,KAAK,IAAI,EAAE;AAChC,gBAAA,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,EAAU,CAAC;AACzC,gBAAA,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;gBAC7C,OAAO,YAAY,IAAI,YAAY,KAAK,MAAM,CAAC,SAAS,EAAE;oBACxD,MAAM,cAAc,GAAG,MAAM,CAAC,yBAAyB,CAAC,YAAY,CAAC,CAAC;oBACtE,IAAI,cAAc,EAAE;AAClB,wBAAA,KAAK,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;AACxD,4BAAA,IAAI,IAAI,CAAC,GAAG,EAAE;AACZ,gCAAA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;6BAC/B;yBACF;qBACF;AACD,oBAAA,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;iBACpD;aACF;YACD,OAAO,IAAI,CAAC,eAAe,CAAC;SAE7B;KACoB,CAAC;AAC1B;;AC9HA,SAAS,WAAW,CAAC,IAAY,EAAA;IAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC,KAAK,EAAE,IAAI,KAAI;QAC1D,OAAO,CAAA,MAAA,EAAS,IAAI,CAAA,KAAA,CAAO,CAAC;AAC9B,KAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,aAAa,CAAC,IAAW,EAAA;IAChC,OAAO,IAAI,CAAC,UAAU,CAAC,0BAA0B,EAAE,CAAC,KAAK,EAAE,IAAI,KAAI;QACjE,OAAO,CAAA,EAAA,EAAK,IAAI,CAAA,EAAA,CAAI,CAAC;AACvB,KAAC,CAAC,CAAC;AACL,CAAC;AAEM,eAAe,yBAAyB,CAAC,IAAY,EAAA;IAC1D,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AACpD,IAAA,QAAQ,CAAC,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;IAEvC,MAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACxD,IAAI,EAAE,MAAM,EAAE,CAAC;IAEf,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACxD,IAAA,MAAM,YAAY,GAAG,MAAM,GAAG,MAAM,OAAO,qCAAqC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;IACrG,MAAM,EAAE,MAAM,EAAE,CAAC;IAEjB,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACtD,KAAK,EAAE,MAAM,EAAE,CAAC;AAEhB,IAAA,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,IAAI,MAAA;KAAQ,CAAC;IACpD,OAAO;QACL,IAAI;QACJ,IAAI,EAAQ,aAAa,CAAC,IAAI,EAAE,SAAS,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;AACvD,QAAA,GAAG,EAAS,KAAK,EAAE,WAAW,IAAI,EAAE;QACpC,UAAU;AACV,QAAA,MAAM,EAAM,UAAU,CAAC,OAAO,IAAI,EAAE;KACrC,CAAA;AACH;;ACjCO,eAAe,uBAAuB,CAAC,IAAY,EAAA;AACxD,IAAA,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AACxD,IAAA,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AACnC,IAAA,OAAO,yBAAyB,CAAC,IAAI,CAAC,CAAC;AACzC;;ACLgB,SAAA,sBAAsB,CAAC,OAAe,EAAE,cAAkC,EAAA;AACxF,IAAA,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACjC;;ACCO,eAAeK,8BAA4B,CAAC,oBAAyC,EAAA;IAC1F,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAI;AAC9F,QAAA,MAAM,aAAa,GAAG,MAAM,uBAAuB,CAAC,IAAI,CAAC,CAAC;AAC1D,QAAA,MAAM,cAAc,GAAG,oBAAoB,CAAC,aAAa,CAAC,CAAC;AAC3D,QAAA,sBAAsB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;KACjD,CAAC,CAAC,CAAC;AACJ,IAAA,MAAM,QAAQ,CAAC;AACjB;;ACRM,SAAU,4BAA4B,CAAC,oBAA4C,EAAA;IACvFC,8BAA6B,CAAC,oBAAoB,CAAC,CAAC;AACtD,CAAC;AAEM,MAAM,gBAAgB,GAAG,6BAA6B;SAE7C,eAAe,GAAA;IAC7B,OAAOC,iBAAgB,EAAE,CAAC;AAC5B;;;;"}