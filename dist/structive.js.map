{"version":3,"file":"structive.js","sources":["../src/Router/Router.ts","../src/WebComponents/getGlobalConfig.ts","../src/Filter/errorMessages.ts","../src/Filter/builtinFilters.ts","../src/GlobalId/generateId.ts","../src/utils.ts","../src/StateClass/registerStateClass.ts","../src/StyleSheet/registerStyleSheet.ts","../src/StyleSheet/regsiterCss.ts","../src/BindingBuilder/resolveNodeFromPath.ts","../src/BindingBuilder/getAbsoluteNodePath.ts","../src/BindingBuilder/createFilters.ts","../src/DataBinding/BindingNode/BindingNode.ts","../src/DataBinding/BindingNode/BindingNodeAttribute.ts","../src/DataBinding/BindingNode/BindingNodeCheckbox.ts","../src/DataBinding/BindingNode/BindingNodeClassList.ts","../src/DataBinding/BindingNode/BindingNodeClassName.ts","../src/DataBinding/BindingNode/BindingNodeEvent.ts","../src/constants.ts","../src/DataBinding/BindingNode/BindingNodeBlock.ts","../src/DataBinding/BindingNode/BindingNodeIf.ts","../src/DataBinding/BindingNode/BindingNodeFor.ts","../src/BindingBuilder/getDefaultName.ts","../src/StateClass/symbols.ts","../src/DataBinding/BindingNode/BindingNodeProperty.ts","../src/DataBinding/BindingNode/BindingNodeRadio.ts","../src/DataBinding/BindingNode/BindingNodeStyle.ts","../src/BindingBuilder/getBindingNodeCreator.ts","../src/StateProperty/getStructuredPathInfo.ts","../src/DataBinding/BindingState/BindingState.ts","../src/DataBinding/BindingState/BindingStateIndex.ts","../src/BindingBuilder/getBindingStateCreator.ts","../src/BindingBuilder/getDataBindText.ts","../src/BindingBuilder/getNodeType.ts","../src/BindingBuilder/parseBindText.ts","../src/BindingBuilder/removeDataBindAttribute.ts","../src/BindingBuilder/replaceTextNodeFromComment.ts","../src/BindingBuilder/createDataBindAttributes.ts","../src/BindingBuilder/getNodesHavingDataBind.ts","../src/BindingBuilder/registerDataBindAttributes.ts","../src/Template/removeEmptyTextNodes.ts","../src/Template/registerTemplate.ts","../src/DataBinding/Binding.ts","../src/LoopContext/createLoopContext.ts","../src/Render/render.ts","../src/DataBinding/BindContent.ts","../src/ListIndex/createListIndex.ts","../src/StatePropertyRef/getStatePropertyRefId.ts","../src/StateClass/methods/setTracking.ts","../src/StateClass/methods/getByRef.ts","../src/StateClass/apis/getByRef.ts","../src/StateClass/methods/setByRef.ts","../src/StateClass/apis/setByRef.ts","../src/StateClass/methods/setCacheable.ts","../src/StateClass/apis/setCacheable.ts","../src/StateClass/apis/connectedCallback.ts","../src/StateClass/apis/disconnectedCallback.ts","../src/StateClass/apis/resolve.ts","../src/StateClass/apis/getAll.ts","../src/StateProperty/getResolvedPathInfo.ts","../src/StateClass/getListIndex.ts","../src/StateClass/traps/get.ts","../src/StateClass/traps/set.ts","../src/StateClass/createStateProxy.ts","../src/StateClass/buildListIndexTree.ts","../src/Updater/collectAffectedGetters.ts","../src/Updater/updater.ts","../src/ComponentEngine/canHaveShadowRoot.ts","../src/ComponentEngine/attachShadow.ts","../src/ComponentEngine/ComponentEngine.ts","../src/Template/replaceMustacheWithTemplateTag.ts","../src/Template/replaceTemplateTagWithComment.ts","../src/Template/registerHtml.ts","../src/WebComponents/getBaseClass.ts","../src/WebComponents/getComponentConfig.ts","../src/WebComponents/createComponentClass.ts","../src/WebComponents/createSingleFileComponent.ts","../src/WebComponents/loadSingleFileComponent.ts","../src/WebComponents/registerComponentClass.ts","../src/WebComponents/registerSingleFIleComponents.ts","../src/MainWrapper/MainWrapper.ts","../src/bootstrap.ts","../src/exports.ts"],"sourcesContent":["import { config } from \"../WebComponents/getGlobalConfig\";\r\n\r\nconst DEFAULT_ROUTE_PATH = '/'; // Default route path\r\nconst ROUTE_PATH_PREFIX = 'routes:'; // Prefix for route paths\r\n/**\r\n * example:\r\n * ```ts\r\n * entryRoute('my-view', '/my-view/:id');\r\n */\r\nconst routeMap: Record<string,string> = {};\r\n\r\nexport class Router extends HTMLElement {\r\n  _popstateHandler: (event: PopStateEvent) => void;\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = '<slot name=\"content\"></slot>';\r\n    this._popstateHandler = this.popstateHandler.bind(this);\r\n  }\r\n\r\n  connectedCallback() {\r\n    window.addEventListener('popstate', this._popstateHandler);\r\n    window.dispatchEvent(new Event(\"popstate\")); // Dispatch popstate event to trigger the initial render\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('popstate', this._popstateHandler);\r\n  }\r\n\r\n  popstateHandler() {\r\n    this.render();\r\n    window.dispatchEvent(new Event('popstate')); // Dispatch popstate event to notify other components\r\n  }\r\n\r\n  render() {\r\n    const routePath = window.location.pathname || DEFAULT_ROUTE_PATH;\r\n    let tagName: string | undefined = undefined;\r\n    let params: Record<string, string> = {};\r\n    // Check if the routePath matches any of the defined routes\r\n    for (const [path, tag] of Object.entries(routeMap)) {\r\n      const regex = new RegExp(path.replace(/:[^\\s/]+/g, '([^/]+)'));\r\n      if (regex.test(routePath)) {\r\n        tagName = tag;\r\n        // Extract the parameters from the routePath\r\n        const matches = routePath.match(regex);\r\n        if (matches) {\r\n          const keys = path.match(/:[^\\s/]+/g) || [];\r\n          keys.forEach((key, index) => {\r\n            params[key.substring(1)] = matches[index + 1]; // +1 to skip the full match\r\n          });\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if (tagName) {\r\n      // If a route matches, create the custom element and set its state\r\n      // Create the custom element with the tag name\r\n      // project the custom element into the router slot\r\n      const customElement = document.createElement(tagName) as HTMLElement;\r\n      customElement.setAttribute('state', JSON.stringify(params));\r\n      customElement.setAttribute('slot', 'content');\r\n      this.appendChild(customElement);\r\n    } else {\r\n      // If no route matches, show 404 content\r\n      const messageElement = document.createElement('h1') as HTMLElement;\r\n      messageElement.setAttribute('slot', 'content');\r\n      messageElement.textContent = '404 Not Found';\r\n      this.appendChild(messageElement);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function entryRoute(tagName: string, routePath: string): void {\r\n  if (routePath.startsWith(ROUTE_PATH_PREFIX)) {\r\n    routePath = routePath.substring(ROUTE_PATH_PREFIX.length); // Remove 'routes:' prefix\r\n  } \r\n  routeMap[routePath] = tagName;\r\n}\r\n","import { IConfig } from \"./types\";\r\n\r\nconst globalConfig: IConfig = {\r\n  debug                : false,\r\n  locale               : \"en-US\", // The locale of the component, ex. \"en-US\", default is \"en-US\"\r\n  enableShadowDom      : true,\r\n  enableMainWrapper    : true, // Whether to use the main wrapper or not\r\n  enableRouter         : true, // Whether to use the router or not\r\n  autoInsertMainWrapper: false, // Whether to automatically insert the main wrapper or not\r\n  autoInit             : true, // Whether to automatically initialize the component or not\r\n  mainTagName          : \"app-main\", // The tag name of the main wrapper, default is \"app-main\"\r\n  routerTagName        : \"view-router\", // The tag name of the router, default is \"view-router\"\r\n  layoutPath           : \"\", // The path to the layout file, default is \"\"\r\n};\r\n\r\nexport function getGlobalConfig():IConfig {\r\n  return globalConfig;\r\n}\r\n\r\nexport const config = getGlobalConfig();\r\n","\r\nexport function optionsRequired(fnName:string): never {\r\n  throw new Error(`${fnName} requires at least one option`);\r\n}\r\n\r\nexport function optionMustBeNumber(fnName:string): never {\r\n  throw new Error(`${fnName} requires a number as option`);\r\n}\r\n\r\nexport function valueMustBeNumber(fnName:string): never {\r\n  throw new Error(`${fnName} requires a number value`);\r\n}\r\n\r\nexport function valueMustBeBoolean(fnName:string): never {\r\n  throw new Error(`${fnName} requires a boolean value`);\r\n}\r\n\r\nexport function valueMustBeDate(fnName:string): never {\r\n  throw new Error(`${fnName} requires a date value`);\r\n}","import { getGlobalConfig } from \"../WebComponents/getGlobalConfig\";\r\nimport { optionMustBeNumber, optionsRequired, valueMustBeBoolean, valueMustBeDate, valueMustBeNumber } from \"./errorMessages\";\r\nimport { FilterWithOptions } from \"./types\";\r\n\r\nconst config = getGlobalConfig();\r\n\r\nconst eq = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('eq');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('eq');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('eq');\r\n    return value === optValue;\r\n  }\r\n}\r\n\r\nconst ne = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('ne');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('ne');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('ne');\r\n    return value !== optValue;\r\n  }\r\n}\r\n\r\nconst not = (options?:string[]) => {\r\n  return (value: any) => {\r\n    if (typeof value !== 'boolean') valueMustBeBoolean('not');\r\n    return !value;\r\n  }\r\n}\r\n\r\nconst lt = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('lt');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('lt');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('lt');\r\n    return value < optValue;\r\n  }\r\n}\r\n\r\nconst le = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('le');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('le');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('le');\r\n    return value <= optValue;\r\n  }\r\n}\r\n\r\nconst gt = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('gt');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('gt');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('gt');\r\n    return value > optValue;\r\n  }\r\n}\r\n\r\nconst ge = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('ge');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('ge');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('ge');\r\n    return value >= optValue;\r\n  }\r\n}\r\n\r\nconst inc = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('inc');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('inc');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('inc');\r\n    return value + optValue;\r\n  }\r\n}\r\n\r\nconst dec = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('dec');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('dec');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('dec');\r\n    return value - optValue;\r\n  }\r\n}\r\n\r\nconst mul = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('mul');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('mul');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('mul');\r\n    return value * optValue;\r\n  }\r\n}\r\n\r\nconst div = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('div');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('div');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('div');\r\n    return value / optValue;\r\n  }\r\n}\r\n\r\nconst fix = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('div');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('div');\r\n    return value.toFixed(optValue);\r\n  }\r\n}\r\n\r\nconst locale = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('locale');\r\n    return value.toLocaleString(opt);\r\n  }\r\n}\r\n\r\nconst uc = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().toUpperCase();\r\n  }\r\n}\r\n\r\nconst lc = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().toLowerCase();\r\n  }\r\n}\r\n\r\nconst cap = (options?:string[]) => {\r\n  return (value: any) => {\r\n    const v = value.toString();\r\n    if (v.length === 0) return v;\r\n    if (v.length === 1) return v.toUpperCase();\r\n    return v.charAt(0).toUpperCase() + v.slice(1);\r\n  }\r\n}\r\n\r\nconst trim = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().trim();\r\n  }\r\n}\r\n\r\nconst slice = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('slice');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('slice');\r\n  return (value: any) => {\r\n    return value.toString().slice(optValue);\r\n  }\r\n}\r\n\r\nconst substr = (options?:string[]) => {\r\n  const opt1 = options?.[0] ?? optionsRequired('substr');\r\n  const opt1Value = Number(opt1);\r\n  if (isNaN(opt1Value)) optionMustBeNumber('substr');\r\n  const opt2 = options?.[1] ?? optionsRequired('substr');\r\n  const opt2Value = Number(opt2);\r\n  if (isNaN(opt2Value)) optionMustBeNumber('substr');\r\n  return (value: any) => {\r\n    return value.toString().substr(opt1Value, opt2Value);\r\n  }\r\n}\r\n\r\nconst pad = (options?:string[]) => {\r\n  const opt1 = options?.[0] ?? optionsRequired('pad');\r\n  const opt1Value = Number(opt1);\r\n  if (isNaN(opt1Value)) optionMustBeNumber('pad');\r\n  const opt2 = options?.[1] ?? '0';\r\n  const opt2Value = opt2;\r\n  return (value: any) => {\r\n    return value.toString().padStart(opt1Value, opt2Value);\r\n  }\r\n}\r\n\r\nconst rep = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('rep');\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('rep');\r\n  return (value: any) => {\r\n    return value.toString().repeat(optValue);\r\n  }\r\n}\r\n\r\nconst rev = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return value.toString().split('').reverse().join('');\r\n  }\r\n}\r\n\r\nconst int = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return parseInt(value, 10);\r\n  }\r\n}\r\n\r\nconst float = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return parseFloat(value);\r\n  }\r\n}\r\n\r\nconst round = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Math.pow(10, Number(opt));\r\n  if (isNaN(optValue)) optionMustBeNumber('round');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('round');\r\n    return Math.round(value * optValue) / optValue;\r\n  }\r\n}\r\n\r\nconst floor = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Math.pow(10, Number(opt));\r\n  if (isNaN(optValue)) optionMustBeNumber('floor');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('floor');\r\n    return Math.floor(value * optValue) / optValue;\r\n  }\r\n}\r\n\r\nconst ceil = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Math.pow(10, Number(opt));\r\n  if (isNaN(optValue)) optionMustBeNumber('ceil');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('ceil');\r\n    return Math.ceil(value * optValue) / optValue;\r\n  }\r\n}\r\n\r\nconst percent = (options?:string[]) => {\r\n  const opt = options?.[0] ?? 0;\r\n  const optValue = Number(opt);\r\n  if (isNaN(optValue)) optionMustBeNumber('percent');\r\n  return (value: any) => {\r\n    if (typeof value !== 'number') valueMustBeNumber('percent');\r\n    return value.toFixed(optValue) + '%';\r\n  }\r\n}\r\n\r\nconst date = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (!(value instanceof Date))  valueMustBeDate('date');\r\n    return value.toLocaleDateString(config.locale);\r\n  }\r\n}\r\n\r\nconst time = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (!(value instanceof Date)) valueMustBeDate('time');\r\n    return value.toLocaleTimeString(config.locale);\r\n  }\r\n}\r\n\r\nconst datetime = (options?:string[]) => {\r\n  const opt = options?.[0] ?? config.locale;\r\n  return (value: any) => {\r\n    if (!(value instanceof Date)) valueMustBeDate('datetime');\r\n    return value.toLocaleString(config.locale);\r\n  }\r\n}\r\n\r\nconst ymd = (options?:string[]) => {\r\n  const opt = options?.[0] ?? '-';\r\n  return (value: any) => {\r\n    if (!(value instanceof Date)) valueMustBeDate('ymd');\r\n    const year = value.getFullYear().toString();\r\n    const month = (value.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = value.getDate().toString().padStart(2, '0');\r\n    return `${year}${opt}${month}${opt}${day}`;\r\n  }\r\n}\r\n\r\nconst falsy = (options?:string[]) => {\r\n  return (value: any) => value === false || value === null || value === undefined || value === 0 || value === '' || Number.isNaN(value);\r\n}\r\n\r\nconst truthy = (options?:string[]) => {\r\n  return (value: any) =>value !== false && value !== null && value !== undefined && value !== 0 && value !== '' && !Number.isNaN(value);\r\n}\r\n\r\nconst defaults = (options?:string[]) => {\r\n  const opt = options?.[0] ?? optionsRequired('defaults');\r\n  return (value: any) => {\r\n    if (value === false || value === null || value === undefined || value === 0 || value === '' || Number.isNaN(value)) return opt;\r\n    return value;\r\n  }\r\n}\r\n\r\nconst boolean = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return Boolean(value);\r\n  }\r\n}\r\n\r\nconst number = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return Number(value);\r\n  }\r\n}\r\n\r\nconst string = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return String(value);\r\n  }\r\n}\r\n\r\nconst _null = (options?:string[]) => {\r\n  return (value: any) => {\r\n    return (value === \"\") ? null : value;\r\n  } \r\n}\r\n\r\nconst builtinFilters: FilterWithOptions = {\r\n  eq,\r\n  ne,\r\n  not,\r\n  \r\n  lt,\r\n  le,\r\n  gt,\r\n  ge,\r\n\r\n  inc,\r\n  dec,\r\n  mul,\r\n  div,\r\n\r\n  fix,\r\n  locale,\r\n  uc,\r\n  lc,\r\n  cap,\r\n  trim,\r\n  slice,\r\n  substr,\r\n  pad,\r\n  rep,\r\n  rev,\r\n\r\n  int,\r\n  float,\r\n  round,\r\n  floor,\r\n  ceil,\r\n  percent,\r\n\r\n  date,\r\n  time,\r\n  datetime,\r\n  ymd,\r\n\r\n  falsy,\r\n  truthy,\r\n  defaults,\r\n\r\n  boolean,\r\n  number,\r\n  string,\r\n  \"null\": _null,\r\n};\r\n\r\nexport const outputBuiltinFilters = builtinFilters;\r\nexport const inputBuiltinFilters = builtinFilters;\r\n\r\nexport const builtinFilterFn = (name:string, options: string[]) => (filters: FilterWithOptions) => {\r\n  const filter = filters[name];\r\n  if (!filter) throw new Error(`outputBuiltinFiltersFn: filter not found: ${name}`);\r\n  return filter(options);\r\n}\r\n\r\n","\r\nlet id = 0;\r\n\r\nexport function generateId(): number {\r\n  return ++id;\r\n}","\r\nexport function raiseError(message: string): never {\r\n  throw new Error(message);\r\n}\r\n","import { raiseError } from \"../utils\";\r\nimport { IStructiveState } from \"./types\";\r\n\r\nconst stateClassById: Record<number,IStructiveState> = {};\r\n\r\nexport function registerStateClass(id: number, stateClass: IStructiveState) {\r\n  stateClassById[id] = stateClass;\r\n}\r\n\r\nexport function getStateClassById(id: number): IStructiveState {\r\n  return stateClassById[id] ?? raiseError(`getStateClassById: stateClass not found: ${id}`);\r\n}\r\n","import { raiseError } from \"../utils\";\r\n\r\nconst styleSheetById: Record<number,CSSStyleSheet> = {};\r\n\r\nexport function registerStyleSheet(id: number, css: CSSStyleSheet) {\r\n  styleSheetById[id] = css;\r\n}\r\n\r\nexport function getStyleSheetById(id: number): CSSStyleSheet {\r\n  return styleSheetById[id] ?? raiseError(`getStyleSheetById: stylesheet not found: ${id}`);\r\n}","import { registerStyleSheet } from \"./registerStyleSheet\";\r\n\r\nexport function registerCss(id: number, css: string) {\r\n  const styleSheet = new CSSStyleSheet();\r\n  styleSheet.replaceSync(css);\r\n  registerStyleSheet(id, styleSheet);\r\n}","import { NodePath } from \"./types\";\r\n\r\nexport function resolveNodeFromPath(root: Node, path: NodePath): Node | null {\r\n  return path.reduce((node, index) => node?.childNodes[index] ?? null, root);\r\n}","import { NodePath } from \"./types\";\r\n\r\nexport function getAbsoluteNodePath(node: Node): NodePath {\r\n  let routeIndexes: NodePath = [];\r\n  while(node.parentNode !== null) {\r\n    const childNodes = Array.from(node.parentNode.childNodes) as Node[];\r\n    routeIndexes = [ childNodes.indexOf(node), ...routeIndexes ];\r\n    node = node.parentNode;\r\n  }\r\n  return routeIndexes;\r\n}","import { FilterFn, Filters, FilterWithOptions } from \"../Filter/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { IFilterText } from \"./types\";\r\n\r\nfunction textToFilter(filters:FilterWithOptions, text: IFilterText): FilterFn {\r\n  const filter = filters[text.name];\r\n  if (!filter) raiseError(`outputBuiltinFiltersFn: filter not found: ${name}`);\r\n  return filter(text.options);\r\n}\r\n\r\nconst cache : Map<IFilterText[], Filters> = new Map();\r\n\r\nexport function createFilters(filters:FilterWithOptions, texts: IFilterText[]): Filters {\r\n  let result = cache.get(texts);\r\n  if (typeof result === \"undefined\") {\r\n    result = [];\r\n    for(let i = 0; i < texts.length; i++) {\r\n      result.push(textToFilter(filters, texts[i]));\r\n    }\r\n    cache.set(texts, result);\r\n  }\r\n  return result;\r\n}\r\n","import { Filters } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBindContent, IBinding } from \"../types\";\r\nimport { IBindingNode } from \"./types\";\r\n\r\nexport class BindingNode implements IBindingNode {\r\n  #binding: IBinding;\r\n  #node: Node;\r\n  #name: string;\r\n  #filters: Filters;\r\n  #event: string | null;\r\n  #bindContents: Set<IBindContent> = new Set<IBindContent>();\r\n  get node(): Node {\r\n    return this.#node;\r\n  }\r\n  get name(): string {\r\n    return this.#name;\r\n  }\r\n  get binding(): IBinding {\r\n    return this.#binding;\r\n  }\r\n  get event(): string | null {\r\n    return this.#event;\r\n  }\r\n  get filters(): Filters {\r\n    return this.#filters;\r\n  }\r\n  get bindContents(): Set<IBindContent> {\r\n    return this.#bindContents;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node  : Node, \r\n    name  : string,\r\n    filters: Filters,\r\n    event : string | null\r\n  ) {\r\n    this.#binding = binding;\r\n    this.#node = node;\r\n    this.#name = name;\r\n    this.#filters = filters;\r\n    this.#event = event;\r\n  }\r\n  init():void {\r\n  }\r\n  update(): void {\r\n    this.assignValue(this.binding.bindingState.filteredValue);\r\n  }\r\n  assignValue(value: any): void {\r\n    raiseError(`BindingNode: assignValue not implemented`);\r\n  }\r\n  updateElements(listIndexes: IListIndex[], values: any[]) {\r\n    raiseError(`BindingNode: updateElements not implemented`);\r\n  }\r\n  get isSelectElement(): boolean {\r\n    return this.node instanceof HTMLSelectElement;\r\n  }\r\n}","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeAttribute extends BindingNode {\r\n  #subName: string;\r\n  get subName():string {\r\n    return this.#subName;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    const [, subName] = this.name.split(\".\");\r\n    this.#subName = subName;\r\n  }\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    const element = this.node as Element;\r\n    element.setAttribute(this.subName, value.toString());\r\n  }\r\n}\r\n\r\nexport const createBindingNodeAttribute: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeAttribute(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeCheckbox extends BindingNode {\r\n  assignValue(value:any) {\r\n    if (!Array.isArray(value)) {\r\n      raiseError(`BindingNodeCheckbox.update: value is not array`, );\r\n    }\r\n    const element = this.node as HTMLInputElement;\r\n    element.checked = value.map(_val => _val.toString()).includes(element.value);\r\n  }\r\n}\r\n\r\nexport const createBindingNodeCheckbox: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeCheckbox(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeClassList extends BindingNode {\r\n  assignValue(value:any) {\r\n    if (!Array.isArray(value)) {\r\n      raiseError(`BindingNodeClassList.update: value is not array`);\r\n    }\r\n    const element = this.node as Element;\r\n    element.className = value.join(\" \");\r\n  }\r\n}\r\n\r\nexport const createBindingNodeClassList: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeClassList(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeClassName extends BindingNode {\r\n  #subName: string;\r\n  get subName(): string {\r\n    return this.#subName;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    const [, subName] = this.name.split(\".\");\r\n    this.#subName = subName;\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (typeof value !== \"boolean\") {\r\n      raiseError(`BindingNodeClassName.update: value is not boolean`);\r\n    }\r\n    const element = this.node as Element;\r\n    if (value) {\r\n      element.classList.add(this.subName);\r\n    } else {\r\n      element.classList.remove(this.subName);\r\n    }\r\n  }\r\n}\r\n\r\nexport const createBindingNodeClassName: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeClassName(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeEvent extends BindingNode {\r\n  #subName    : string;\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    this.#subName = this.name.slice(2); // on～\r\n    const element = node as HTMLElement;\r\n    element.addEventListener(this.subName, (e:Event) => this.handler(e));\r\n  }\r\n  get subName(): string {\r\n    return this.#subName;\r\n  }\r\n  update() {\r\n    // 何もしない\r\n  }\r\n\r\n  handler(e: Event) {\r\n    const bindingState = this.binding.bindingState;\r\n    const engine = this.binding.engine;\r\n    const stateProxy = engine.stateProxy;\r\n    const updater = engine.updater;\r\n    const loopContext = this.binding.parentBindContent.currentLoopContext;\r\n    const indexes = loopContext?.serialize().map((context) => context.listIndex.index) ?? [];\r\n    const option = this.event;\r\n    if (option === \"preventDefault\") {\r\n      e.preventDefault();\r\n    }\r\n    this.binding.engine.updater.addProcess(async () => {\r\n      const value = bindingState.value;\r\n      const typeOfValue = typeof value;\r\n      updater.addProcess(async () => {\r\n        if (loopContext) {\r\n          await engine.setLoopContext(loopContext, async () => {\r\n            if (typeOfValue === \"function\") {\r\n              await Reflect.apply(value, stateProxy, [e, ...indexes]);\r\n            } else {\r\n              // ToDo:error\r\n            }\r\n          });\r\n        } else {\r\n          if (typeOfValue === \"function\") {\r\n            await Reflect.apply(value, stateProxy, [e, ...indexes]);\r\n          } else {\r\n            // ToDo:error\r\n          }\r\n        }\r\n      });\r\n    });\r\n  } \r\n}\r\n\r\nexport const createBindingNodeEvent: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeEvent(binding, node, name, filterFns, event);\r\n  }\r\n","export const DATA_BIND_ATTRIBUTE = \"data-bind\";\r\nexport const COMMENT_EMBED_MARK = \"@@:\"; // 埋め込み変数のマーク\r\nexport const COMMENT_TEMPLATE_MARK = \"@@|\"; // テンプレートのマーク\r\n","import { COMMENT_TEMPLATE_MARK } from \"../../constants\";\r\nimport { Filters } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\n\r\nconst COMMENT_TEMPLATE_MARK_LEN = COMMENT_TEMPLATE_MARK.length;\r\n\r\nexport class BindingNodeBlock extends BindingNode {\r\n  #id: number;\r\n  get id(): number {\r\n    return this.#id;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    const id = this.node.textContent?.slice(COMMENT_TEMPLATE_MARK_LEN) ?? raiseError(\"BindingNodeBlock.id: invalid node\");\r\n    this.#id = Number(id);\r\n  }\r\n    \r\n}","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { createBindContent } from \"../BindContent\";\r\nimport { IBindContent, IBinding } from \"../types\";\r\nimport { BindingNodeBlock } from \"./BindingNodeBlock\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeIf extends BindingNodeBlock {\r\n  #bindContent: IBindContent;\r\n  #trueBindContents: Set<IBindContent>;\r\n  #falseBindContents: Set<IBindContent> = new Set();\r\n  #bindContents: Set<IBindContent>;\r\n\r\n  get bindContents(): Set<IBindContent> {\r\n    return this.#bindContents;\r\n  }\r\n\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    this.#bindContent = createBindContent(\r\n      this.binding, \r\n      this.id, \r\n      this.binding.engine, \r\n      \"\", \r\n      null\r\n    );\r\n    this.#trueBindContents = this.#bindContents = new Set([this.#bindContent]);\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (typeof value !== \"boolean\") {\r\n      raiseError(`BindingNodeIf.update: value is not boolean`);\r\n    }\r\n    const parentNode = this.node.parentNode;\r\n    if (parentNode == null) {\r\n      raiseError(`BindingNodeIf.update: parentNode is null`);\r\n    }\r\n    if (value) {\r\n      this.#bindContent.render();\r\n      this.#bindContent.mountBefore(parentNode, this.node.nextSibling);\r\n      this.#bindContents = this.#trueBindContents;\r\n    } else {\r\n      this.#bindContent.unmount();\r\n      this.#bindContents = this.#falseBindContents;\r\n    }\r\n  }\r\n}\r\n\r\nexport const createBindingNodeIf: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeIf(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { getStructuredPathInfo } from \"../../StateProperty/getStructuredPathInfo\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { createBindContent } from \"../BindContent\";\r\nimport { IBindContent, IBinding } from \"../types\";\r\nimport { BindingNodeBlock } from \"./BindingNodeBlock\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeFor extends BindingNodeBlock {\r\n  #bindContentsSet       : Set<IBindContent> = new Set<IBindContent>();\r\n  #bindContentByListIndex: WeakMap<IListIndex, IBindContent> = new WeakMap();\r\n  #bindContentPool       : IBindContent[] = [];\r\n  #bindContentLastIndex  : number = 0;\r\n\r\n  get bindContents(): Set<IBindContent> {\r\n    return this.#bindContentsSet;\r\n  }\r\n\r\n  init() {\r\n  }\r\n\r\n  createBindContent(listIndex: IListIndex): IBindContent {\r\n    let bindContent: IBindContent;\r\n    if (this.#bindContentLastIndex >= 0) {\r\n      // プールの最後の要素を取得して、プールの長さをあとで縮減する\r\n      // 作るたびにプールを縮減すると、パフォーマンスが悪化するため\r\n      // プールの長さを縮減するのは、全ての要素を作った後に行う\r\n      bindContent = this.#bindContentPool[this.#bindContentLastIndex];\r\n      this.#bindContentLastIndex--;\r\n      bindContent.assignListIndex(listIndex);\r\n    } else {\r\n      bindContent = createBindContent(\r\n        this.binding, \r\n        this.id, \r\n        this.binding.engine, \r\n        this.binding.bindingState.pattern + \".*\", \r\n        listIndex);\r\n    }\r\n    // 登録\r\n    this.#bindContentByListIndex.set(listIndex, bindContent);\r\n    return bindContent;\r\n  }\r\n\r\n  deleteBindContent(bindContent: IBindContent): void {\r\n    bindContent.unmount();\r\n    bindContent.loopContext?.clearListIndex();\r\n  }\r\n\r\n  get bindContentLastIndex():number {\r\n    return this.#bindContentLastIndex;\r\n  }\r\n  set bindContentLastIndex(value:number) {\r\n    this.#bindContentLastIndex = value;\r\n  }\r\n\r\n  get poolLength():number {\r\n    return this.#bindContentPool.length;\r\n  }\r\n  set poolLength(length: number) {\r\n    if (length < 0) {\r\n      raiseError(`BindingNodeFor.setPoolLength: length is negative`);\r\n    }\r\n    this.#bindContentPool.length = length;\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (!Array.isArray(value)) {\r\n      raiseError(`BindingNodeFor.assignValue: value is not array`);\r\n    }\r\n    const listIndexesSet = this.binding.engine.getListIndexesSet(\r\n      this.binding.bindingState.info, \r\n      this.binding.bindingState.listIndex\r\n    );\r\n    if (listIndexesSet === null) {\r\n      raiseError(`BindingNodeFor.assignValue: listIndexes is not found`);\r\n    }\r\n    this.bindContentLastIndex = this.poolLength - 1;\r\n    const newBindContensSet = new Set<IBindContent>();\r\n    let lastBindContent = null;\r\n    const parentNode = this.node.parentNode;\r\n    if (parentNode == null) {\r\n      raiseError(`BindingNodeFor.update: parentNode is null`);\r\n    }\r\n    for(const listIndex of listIndexesSet) {\r\n      const lastNode = lastBindContent?.getLastNode(parentNode) ?? this.node;\r\n      let bindContent = this.#bindContentByListIndex.get(listIndex);\r\n      if (typeof bindContent === \"undefined\") {\r\n        bindContent = this.createBindContent(listIndex);\r\n        bindContent.render();\r\n        bindContent.mountAfter(parentNode, lastNode);\r\n      } else {\r\n        if (lastNode.nextSibling !== bindContent.firstChildNode) {\r\n          bindContent.mountAfter(parentNode, lastNode);\r\n        }\r\n      }\r\n      newBindContensSet.add(bindContent);\r\n      lastBindContent = bindContent;\r\n    }\r\n    // プールの長さを更新する\r\n    // プールの長さは、プールの最後の要素のインデックス+1であるため、\r\n    this.poolLength = this.bindContentLastIndex + 1;\r\n    // 削除\r\n    const removeBindContentsSet = this.#bindContentsSet.difference(newBindContensSet);\r\n    for(const bindContent of removeBindContentsSet) {\r\n      this.deleteBindContent(bindContent);\r\n    }\r\n    this.#bindContentPool.push(...removeBindContentsSet);\r\n    this.#bindContentsSet = newBindContensSet;\r\n  }\r\n\r\n  /**\r\n   * SWAP処理を想定\r\n   * \r\n   * @param listIndexes \r\n   * @param values \r\n   * @returns \r\n   */\r\n  updateElements(listIndexes: IListIndex[], values: any[]) {\r\n    if (typeof values[0] !== \"object\") return;\r\n    const engine = this.binding.engine;\r\n    const oldListValues = \r\n      engine.getList(\r\n        this.binding.bindingState.info, \r\n        this.binding.bindingState.listIndex\r\n      ) ?? raiseError(`BindingNodeFor.updateElements: oldValues is not found`); \r\n    const parentNode = this.node.parentNode ?? raiseError(`BindingNodeFor.update: parentNode is null`);\r\n\r\n    // DOMから削除\r\n    const currentBindContents = Array.from(this.#bindContentsSet);\r\n    const targetBindContents: IBindContent[] = [];\r\n    for(let i = 0; i < listIndexes.length; i++) {\r\n      const listIndex = listIndexes[i];\r\n      const bindContent = currentBindContents[listIndex.index];\r\n      bindContent.unmount();\r\n      targetBindContents.push(bindContent);\r\n    }\r\n\r\n    // DOMに追加、listIndexを更新\r\n    for(let i = 0; i < listIndexes.length; i++) {\r\n      const listIndex = listIndexes[i];\r\n      const index = listIndex.index;\r\n\r\n      const lastBindContent = currentBindContents[index - 1] ?? null;\r\n      const lastNode = lastBindContent?.lastChildNode ?? this.node;\r\n\r\n      const oldValue = oldListValues[index];\r\n      const targetIndex = values.indexOf(oldValue);\r\n      const prevBindContent = targetBindContents[targetIndex];\r\n\r\n      if (typeof prevBindContent === \"undefined\") {\r\n        // 入れ替えるBindContentがない場合は再描画\r\n        const bindContent = targetBindContents[index];\r\n        bindContent.render();\r\n        bindContent.mountAfter(parentNode, lastNode);\r\n      } else {\r\n        prevBindContent.assignListIndex(listIndex);\r\n        prevBindContent.mountAfter(parentNode, lastNode);\r\n        this.#bindContentByListIndex.set(listIndex, prevBindContent);\r\n        currentBindContents[index] = prevBindContent;\r\n      }\r\n      if (targetIndex >= 0) {\r\n        values[targetIndex] = -1;\r\n      }\r\n    }\r\n    this.#bindContentsSet = new Set<IBindContent>(currentBindContents);\r\n    engine.saveList(\r\n      this.binding.bindingState.info, \r\n      this.binding.bindingState.listIndex, \r\n      this.binding.bindingState.value.slice(0)\r\n    );\r\n  }\r\n}\r\n\r\nexport const createBindingNodeFor: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeFor(binding, node, name, filterFns, event);\r\n  }\r\n","import { NodeType } from \"./types\";\r\n\r\nconst DEFAULT_PROPERTY = \"textContent\";\r\n\r\ntype DefaultPropertyByElementType = {\r\n  [key:string]: string;\r\n}\r\n\r\nconst defaultPropertyByElementType:DefaultPropertyByElementType = {\r\n  \"radio\"   : \"checked\",\r\n  \"checkbox\": \"checked\",\r\n  \"button\"  : \"onclick\",\r\n}\r\n\r\n/**\r\n * HTML要素のデフォルトプロパティを取得\r\n */\r\nconst getDefaultPropertyHTMLElement = (node:Node):string => \r\n  node instanceof HTMLSelectElement || node instanceof HTMLTextAreaElement || node instanceof HTMLOptionElement ? \"value\" : \r\n  node instanceof HTMLButtonElement ? \"onclick\" : \r\n  node instanceof HTMLAnchorElement ? \"onclick\" : \r\n  node instanceof HTMLFormElement ? \"onsubmit\" : \r\n  node instanceof HTMLInputElement ? (defaultPropertyByElementType[node.type] ?? \"value\") :\r\n  DEFAULT_PROPERTY;\r\n\r\ntype DefaultPropertyByKey = {\r\n  [key:string]: string | undefined;\r\n}\r\n\r\nconst _cache: DefaultPropertyByKey = {};\r\n\r\nconst textContentProperty = (node:Node):string => DEFAULT_PROPERTY;\r\n\r\ntype GetDefaultPropertyByNodeType = {\r\n  [key in NodeType]: ((node:Node)=>string) | undefined;\r\n}\r\n\r\nconst getDefaultPropertyByNodeType: GetDefaultPropertyByNodeType = {\r\n  HTMLElement: getDefaultPropertyHTMLElement,\r\n  SVGElement : undefined,\r\n  Text       : textContentProperty,\r\n  Template   : undefined,\r\n}\r\n\r\n/**\r\n * バインド情報でノードプロパティを省略された場合のデフォルトのプロパティ名を取得\r\n * @param node ノード\r\n * @param nodeType ノードタイプ\r\n * @returns {string | undefined} デフォルトのプロパティ名\r\n */\r\nexport function getDefaultName(\r\n  node    : Node, \r\n  nodeType: NodeType\r\n): string | undefined {\r\n  const key = node.constructor.name + \"\\t\" + ((node as HTMLInputElement).type ?? \"\"); // type attribute\r\n  return _cache[key] ?? (_cache[key] = getDefaultPropertyByNodeType[nodeType]?.(node));\r\n}\r\n  ","\r\nconst symbolName = \"state\";\r\n\r\nexport const GetByRefSymbol            : unique symbol = Symbol.for(`${symbolName}.GetByRef`);\r\nexport const SetByRefSymbol            : unique symbol = Symbol.for(`${symbolName}.SetByRef`);\r\nexport const SetCacheableSymbol        : unique symbol = Symbol.for(`${symbolName}.SetCacheable`);\r\nexport const ConnectedCallbackSymbol   : unique symbol = Symbol.for(`${symbolName}.ConnectedCallback`);\r\nexport const DisconnectedCallbackSymbol: unique symbol = Symbol.for(`${symbolName}.DisconnectedCallback`);\r\nexport const ResolveSymbol             : unique symbol = Symbol.for(`${symbolName}.Resolve`);\r\nexport const GetAllSymbol              : unique symbol = Symbol.for(`${symbolName}.GetAll`);\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { getDefaultName } from \"../../BindingBuilder/getDefaultName\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { SetByRefSymbol } from \"../../StateClass/symbols\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nfunction isTwoWayBindable(element: HTMLElement): boolean {\r\n  return element instanceof HTMLInputElement || \r\n    element instanceof HTMLTextAreaElement || \r\n    element instanceof HTMLSelectElement;\r\n}\r\n\r\nconst defaultEventByName: {[key:string]: string} = {\r\n  \"value\"   : \"input\",\r\n  \"checked\" : \"change\",\r\n  \"selected\": \"change\",\r\n};\r\n\r\nclass BindingNodeProperty extends BindingNode {\r\n  get value(): any {\r\n    // @ts-ignore\r\n    return this.node[this.name];\r\n  }\r\n  get filteredValue(): any {\r\n    let value = this.value;\r\n    for(let i = 0; i < this.filters.length; i++) {\r\n      value = this.filters[i](value);\r\n    }\r\n    return value;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n\r\n    const isElement = this.node instanceof HTMLElement;\r\n    if (!isElement) return;\r\n    if (!isTwoWayBindable(this.node)) return;\r\n    const defaultName = getDefaultName(this.node, \"HTMLElement\");\r\n    if (defaultName !== this.name) return;\r\n    const eventName = this.event ?? defaultEventByName[this.name] ?? \"readonly\";\r\n    if (event === \"readonly\" || event === \"ro\") return;\r\n    this.node.addEventListener(eventName, () => {\r\n      const loopContext = this.binding.parentBindContent.currentLoopContext;\r\n      const engine = this.binding.engine;\r\n      const stateProxy = engine.stateProxy;\r\n      const bindingState = this.binding.bindingState;\r\n      const value = this.filteredValue;\r\n      engine.updater.addProcess(() => {\r\n        if (loopContext) {\r\n          engine.setLoopContext(loopContext, async () => {\r\n            // @ts-ignore\r\n            stateProxy[SetByRefSymbol](bindingState.info, bindingState.listIndex, value);\r\n          });\r\n        } else {\r\n          // @ts-ignore\r\n          stateProxy[SetByRefSymbol](bindingState.info, bindingState.listIndex, value);\r\n        }\r\n\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  init() {\r\n  }\r\n\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    // @ts-ignore\r\n    this.node[this.name] = value;\r\n  }\r\n}\r\n\r\nexport const createBindingNodeProperty: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeProperty(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeFn } from \"./types\";\r\n\r\nclass BindingNodeRadio extends BindingNode {\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    const element = this.node as HTMLInputElement;\r\n    element.checked = value.toString() === element.value.toString();\r\n  }\r\n}\r\n\r\nexport const createBindingNodeRadio: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeRadio(binding, node, name, filterFns, event);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IBinding } from \"../types\";\r\nimport { BindingNode } from \"./BindingNode\";\r\nimport { CreateBindingNodeByNodeFn, CreateBindingNodeFn, IBindingNode } from \"./types\";\r\n\r\nclass BindingNodeStyle extends BindingNode {\r\n  #subName: string;\r\n  get subName():string {\r\n    return this.#subName;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    node   : Node, \r\n    name   : string,\r\n    filters: Filters,\r\n    event  : string | null\r\n  ) {\r\n    super(binding, node, name, filters, event);\r\n    const [, subName] = this.name.split(\".\");\r\n    this.#subName = subName;\r\n  }\r\n  assignValue(value:any) {\r\n    if (value === null || value === undefined || Number.isNaN(value)) {\r\n      value = \"\";\r\n    }\r\n    const element = this.node as HTMLElement;\r\n    element.style.setProperty(this.subName, value.toString());\r\n  }\r\n}\r\n\r\nexport const createBindingNodeStyle: CreateBindingNodeFn = \r\n(name: string, filterTexts: IFilterText[], event: string | null) => \r\n  (binding:IBinding, node: Node, filters: FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts);\r\n    return new BindingNodeStyle(binding, node, name, filterFns, event);\r\n  }\r\n","import { createBindingNodeAttribute } from \"../DataBinding/BindingNode/BindingNodeAttribute\";\r\nimport { createBindingNodeCheckbox } from \"../DataBinding/BindingNode/BindingNodeCheckbox\";\r\nimport { createBindingNodeClassList } from \"../DataBinding/BindingNode/BindingNodeClassList\";\r\nimport { createBindingNodeClassName } from \"../DataBinding/BindingNode/BindingNodeClassName\";\r\nimport { createBindingNodeEvent } from \"../DataBinding/BindingNode/BindingNodeEvent\";\r\nimport { createBindingNodeIf } from \"../DataBinding/BindingNode/BindingNodeIf\";\r\nimport { createBindingNodeFor } from \"../DataBinding/BindingNode/BindingNodeFor\";\r\nimport { createBindingNodeProperty } from \"../DataBinding/BindingNode/BindingNodeProperty\";\r\nimport { createBindingNodeRadio } from \"../DataBinding/BindingNode/BindingNodeRadio\";\r\nimport { createBindingNodeStyle } from \"../DataBinding/BindingNode/BindingNodeStyle\";\r\nimport { CreateBindingNodeByNodeFn, CreateBindingNodeFn } from \"../DataBinding/BindingNode/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { IFilterText } from \"./types\";\r\n\r\ntype NodePropertyConstructorByName = {[key:string]:CreateBindingNodeFn};\r\ntype NodePropertyConstructorByNameByIsComment = {[key:number]:NodePropertyConstructorByName};\r\n\r\nconst nodePropertyConstructorByNameByIsComment:NodePropertyConstructorByNameByIsComment = {\r\n  0: {\r\n    \"class\"   : createBindingNodeClassList,\r\n    \"checkbox\": createBindingNodeCheckbox,\r\n    \"radio\"   : createBindingNodeRadio,\r\n  },\r\n  1: {\r\n    \"if\" : createBindingNodeIf,\r\n  },\r\n};\r\n\r\ntype NodePropertyConstructorByFirstName = {[key:string]:CreateBindingNodeFn};\r\n\r\nconst nodePropertyConstructorByFirstName:NodePropertyConstructorByFirstName = {\r\n  \"class\": createBindingNodeClassName,\r\n  \"attr\" : createBindingNodeAttribute,\r\n  \"style\": createBindingNodeStyle,\r\n//  \"props\": ComponentProperty,\r\n//  \"popover\": PopoverTarget,\r\n//  \"commandfor\": CommandForTarget,\r\n};\r\n\r\nfunction _getBindingNodeCreator(isComment:boolean, isElement: boolean, propertyName: string): CreateBindingNodeFn {\r\n  const bindingNodeCreatorByName = nodePropertyConstructorByNameByIsComment[isComment ? 1 : 0][propertyName];\r\n  if (typeof bindingNodeCreatorByName !== \"undefined\") {\r\n    return bindingNodeCreatorByName;\r\n  }\r\n  if (isComment && propertyName === \"for\") {\r\n    return createBindingNodeFor;\r\n  }\r\n  if (isComment) {\r\n    raiseError(`getBindingNodeCreator: unknown node property ${propertyName}`);\r\n  }\r\n  const nameElements = propertyName.split(\".\");\r\n  const bindingNodeCreatorByFirstName = nodePropertyConstructorByFirstName[nameElements[0]];\r\n  if (typeof bindingNodeCreatorByFirstName !== \"undefined\") {\r\n    return bindingNodeCreatorByFirstName;\r\n  }\r\n  if (isElement) {\r\n    if (propertyName.startsWith(\"on\")) {\r\n      return createBindingNodeEvent;\r\n    } else {\r\n      return createBindingNodeProperty;\r\n    }\r\n  } else {\r\n    return createBindingNodeProperty;\r\n  }\r\n}\r\n\r\nconst _cache: {[key:string]:CreateBindingNodeFn} = {};\r\n\r\n/**\r\n * バインドのノードプロパティの生成関数を取得する\r\n * @param node ノード\r\n * @param propertyName プロパティ名\r\n * @returns {CreateBindingNodeFn} ノードプロパティのコンストラクタ\r\n */\r\nexport function getBindingNodeCreator(\r\n  node        : Node, \r\n  propertyName: string,\r\n  filterTexts: IFilterText[],\r\n  event       : string | null\r\n): CreateBindingNodeByNodeFn {\r\n  const isComment = node instanceof Comment;\r\n  const isElement = node instanceof Element;\r\n  const key = isComment + \"\\t\" + isElement + \"\\t\" + propertyName;\r\n  const fn = _cache[key] ?? (_cache[key] = _getBindingNodeCreator(isComment, isElement, propertyName));\r\n  return fn(propertyName, filterTexts, event);\r\n}\r\n","import { raiseError } from '../utils';\r\nimport { getResolvedPathInfo } from './getResolvedPathInfo';\r\nimport { IResolvedPathInfo, IStructuredPathInfo } from './types';\r\n\r\n/**\r\n * プロパティ名に\"constructor\"や\"toString\"などの予約語やオブジェクトのプロパティ名を\r\n * 上書きするような名前も指定できるように、Mapを検討したが、そもそもそのような名前を\r\n * 指定することはないと考え、Mapを使わないことにした。\r\n */\r\nconst _cache: { [key:string]: IStructuredPathInfo } = {};\r\n//const _cache: Map<string, IStructuredPathInfo> = new Map();\r\n\r\n/**\r\n * パターン情報を取得します\r\n * @param pattern パターン\r\n * @returns {IPatternInfo} パターン情報\r\n */\r\nclass StructuredPathInfo implements IStructuredPathInfo {\r\n  static id = 0;\r\n  id = ++StructuredPathInfo.id;\r\n  pattern;\r\n  pathSegments;\r\n  lastSegment;\r\n  cumulativePaths;\r\n  cumulativeInfos;\r\n  wildcardPaths;\r\n  wildcardInfos;\r\n  wildcardParentPaths;\r\n  wildcardParentInfos;\r\n  lastWildcardPath;\r\n  lastWildcardInfo;\r\n  parentPath;\r\n  parentInfo;\r\n  wildcardCount;\r\n\r\n  constructor(pattern: string) {\r\n    const getPattern = (_pattern: string): IStructuredPathInfo => {\r\n      return (pattern === _pattern) ? this : getStructuredPathInfo(_pattern);\r\n    };\r\n    const pathSegments = pattern.split(\".\");\r\n    const cumulativePaths = [];\r\n    const cumulativeInfos: IStructuredPathInfo[] = [];\r\n    const wildcardPaths = [];\r\n    const wildcardInfos = [];\r\n    const wildcardParentPaths = [];\r\n    const wildcardParentInfos = [];\r\n    let currentPatternPath = \"\", prevPatternPath = \"\";\r\n    let wildcardCount = 0;\r\n    for(let i = 0; i < pathSegments.length; i++) {\r\n      currentPatternPath += pathSegments[i];\r\n      if (pathSegments[i] === \"*\") {\r\n        wildcardPaths.push(currentPatternPath);\r\n        wildcardInfos.push(getPattern(currentPatternPath));\r\n        wildcardParentPaths.push(prevPatternPath);\r\n        wildcardParentInfos.push(getPattern(prevPatternPath));\r\n        wildcardCount++;\r\n      }\r\n      cumulativePaths.push(currentPatternPath);\r\n      cumulativeInfos.push(getPattern(currentPatternPath));\r\n      prevPatternPath = currentPatternPath;\r\n      currentPatternPath += \".\";\r\n    }\r\n    const lastWildcardPath = wildcardPaths.length > 0 ? wildcardPaths[wildcardPaths.length - 1] : null;\r\n    const parentPath = cumulativePaths.length > 1 ? cumulativePaths[cumulativePaths.length - 2] : null;\r\n    this.pattern = pattern;\r\n    this.pathSegments = pathSegments;\r\n    this.lastSegment = pathSegments[pathSegments.length - 1];\r\n    this.cumulativePaths = cumulativePaths;\r\n    this.cumulativeInfos = cumulativeInfos;\r\n    this.wildcardPaths = wildcardPaths;\r\n    this.wildcardInfos = wildcardInfos;\r\n    this.wildcardParentPaths = wildcardParentPaths;\r\n    this.wildcardParentInfos = wildcardParentInfos;\r\n    this.lastWildcardPath = lastWildcardPath;\r\n    this.lastWildcardInfo = lastWildcardPath ? getPattern(lastWildcardPath) : null;\r\n    this.parentPath = parentPath;\r\n    this.parentInfo = parentPath ? getPattern(parentPath) : null;\r\n    this.wildcardCount = wildcardCount;\r\n  }\r\n}\r\n\r\nconst reservedWords = new Set([\r\n  \"constructor\", \"prototype\", \"__proto__\", \"toString\",\r\n  \"valueOf\", \"hasOwnProperty\", \"isPrototypeOf\",\r\n  \"watch\", \"unwatch\", \"eval\", \"arguments\",\r\n  \"let\", \"var\", \"const\", \"class\", \"function\",\r\n  \"null\", \"true\", \"false\", \"new\", \"return\",\r\n]);\r\n\r\nexport function getStructuredPathInfo(structuredPath: string): IStructuredPathInfo {\r\n  let info: IStructuredPathInfo | undefined;\r\n  info = _cache[structuredPath];\r\n  if (typeof info !== \"undefined\") {\r\n    return info;\r\n  }\r\n  if (reservedWords.has(structuredPath)) {\r\n    raiseError(`getStructuredPathInfo: pattern is reserved word: ${structuredPath}`);\r\n  }\r\n  return (_cache[structuredPath] = new StructuredPathInfo(structuredPath));\r\n}\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { GetByRefSymbol } from \"../../StateClass/symbols\";\r\nimport { IStateProxy } from \"../../StateClass/types\";\r\nimport { getStructuredPathInfo } from \"../../StateProperty/getStructuredPathInfo\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { CreateBindingStateFn, IBindingState } from \"./types\";\r\n\r\nclass BindingState implements IBindingState {\r\n  #binding     : IBinding;\r\n  #pattern     : string;\r\n  #info        : IStructuredPathInfo;\r\n  #listIndexRef: WeakRef<IListIndex> | null = null;\r\n  #state       : IStateProxy;\r\n  #filters     : Filters;\r\n  get pattern(): string {\r\n    return this.#pattern;\r\n  }\r\n  get info() {\r\n    return this.#info;\r\n  }\r\n  get listIndex() {\r\n    if (this.#listIndexRef === null) return null;\r\n    return this.#listIndexRef.deref() ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get state() {\r\n    return this.#state;\r\n  }\r\n  get filters() {\r\n    return this.#filters;\r\n  }\r\n  get binding() {\r\n    return this.#binding;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    state  : IStateProxy, \r\n    pattern: string, \r\n    filters: Filters\r\n  ) {\r\n    this.#binding = binding;\r\n    this.#pattern = pattern;\r\n    this.#info = getStructuredPathInfo(pattern);\r\n    this.#state = state;\r\n    this.#filters = filters;\r\n  }\r\n  get value(): any {\r\n    return this.#state[GetByRefSymbol](this.info, this.listIndex);\r\n  }\r\n  get filteredValue(): any {\r\n    let value = this.value;\r\n    for(let i = 0; i < this.#filters.length; i++) {\r\n      value = this.#filters[i](value);\r\n    }\r\n    return value;\r\n  }\r\n  init(): void {\r\n    if (this.info.wildcardCount > 0) {\r\n      const lastWildcardPath = this.info.lastWildcardPath ?? \r\n        raiseError(`BindingState.init: wildcardLastParentPath is null`);\r\n      const loopContext = this.binding.parentBindContent.loopContext?.find(lastWildcardPath) ?? \r\n        raiseError(`BindingState.init: loopContext is null`);\r\n      this.#listIndexRef = loopContext.listIndexRef;\r\n    }\r\n    this.binding.engine.saveBinding(this.info, this.listIndex, this.binding);\r\n  }\r\n}\r\n\r\nexport const createBindingState: CreateBindingStateFn = \r\n(name: string, filterTexts: IFilterText[]) => \r\n  (binding:IBinding, state: IStateProxy, filters:FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts); // ToDo:ここは、メモ化できる\r\n    return new BindingState(binding, state, name, filterFns);\r\n  }\r\n","import { createFilters } from \"../../BindingBuilder/createFilters\";\r\nimport { IFilterText } from \"../../BindingBuilder/types\";\r\nimport { Filters, FilterWithOptions } from \"../../Filter/types\";\r\nimport { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStateProxy } from \"../../StateClass/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IBinding } from \"../types\";\r\nimport { CreateBindingStateFn, IBindingState } from \"./types\";\r\n\r\nclass BindingStateIndex implements IBindingState {\r\n  #binding     : IBinding;\r\n  #indexNumber : number;\r\n  #listIndexRef: WeakRef<IListIndex> | null = null;\r\n  #state       : IStateProxy;\r\n  #filters     : Filters;\r\n  get pattern(): string {\r\n    return raiseError(\"Not implemented\");\r\n  }\r\n  get info() {\r\n    return raiseError(\"Not implemented\");\r\n  }\r\n  get listIndex() {\r\n    if (this.#listIndexRef === null) return null;\r\n    return this.#listIndexRef.deref() ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get state() {\r\n    return this.#state;\r\n  }\r\n  get filters() {\r\n    return this.#filters;\r\n  }\r\n  get binding() {\r\n    return this.#binding;\r\n  }\r\n  constructor(\r\n    binding: IBinding, \r\n    state  : IStateProxy, \r\n    pattern: string, \r\n    filters: Filters\r\n  ) {\r\n    this.#binding = binding;\r\n    const indexNumber = Number(pattern.slice(1));\r\n    if (isNaN(indexNumber)) {\r\n      raiseError(\"BindingStateIndex: pattern is not a number\");\r\n    }\r\n    this.#indexNumber = indexNumber;\r\n    this.#state = state;\r\n    this.#filters = filters;\r\n  }\r\n  get value(): any {\r\n    return this.listIndex?.index ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get filteredValue(): any {\r\n    let value = this.value;\r\n    for(let i = 0; i < this.#filters.length; i++) {\r\n      value = this.#filters[i](value);\r\n    }\r\n    return value;\r\n  }\r\n  init(): void {\r\n    const loopContext = this.binding.parentBindContent.currentLoopContext ??\r\n      raiseError(`BindingState.init: loopContext is null`);\r\n    const loopContexts = loopContext.serialize();\r\n    this.#listIndexRef = loopContexts[this.#indexNumber - 1].listIndexRef ??\r\n      raiseError(`BindingState.init: listIndexRef is null`);\r\n    const listIndex = this.listIndex ?? raiseError(\"listIndex is null\");\r\n    const bindings = this.binding.engine.bindingsByListIndex.get(listIndex);\r\n    if (bindings === undefined) {\r\n      this.binding.engine.bindingsByListIndex.set(listIndex, new Set([this.binding]));\r\n    } else {\r\n      bindings.add(this.binding);\r\n    }\r\n  }\r\n}\r\n\r\nexport const createBindingStateIndex: CreateBindingStateFn = \r\n(name: string, filterTexts: IFilterText[]) => \r\n  (binding:IBinding, state: IStateProxy, filters:FilterWithOptions) => {\r\n    const filterFns = createFilters(filters, filterTexts); // ToDo:ここは、メモ化できる\r\n\r\n    return new BindingStateIndex(binding, state, name, filterFns);\r\n  }\r\n","import { createBindingState } from \"../DataBinding/BindingState/BindingState\";\r\nimport { createBindingStateIndex } from \"../DataBinding/BindingState/BindingStateIndex\";\r\nimport { CreateBindingStateByStateFn } from \"../DataBinding/BindingState/types\";\r\nimport { IFilterText } from \"./types\";\r\n\r\nconst ereg = new RegExp(/^\\$\\d+$/);\r\n\r\nexport function getBindingStateCreator(\r\n  name       : string, \r\n  filterTexts: IFilterText[]\r\n): CreateBindingStateByStateFn {\r\n  if (ereg.test(name)) {\r\n    return createBindingStateIndex(name, filterTexts);\r\n  } else {\r\n    return createBindingState(name, filterTexts);\r\n  }\r\n}","import { COMMENT_EMBED_MARK, COMMENT_TEMPLATE_MARK, DATA_BIND_ATTRIBUTE } from \"../constants\";\r\nimport { getTemplateById } from \"../Template/registerTemplate\";\r\nimport { raiseError } from \"../utils\";\r\nimport { NodeType } from \"./types\";\r\n\r\nconst COMMENT_EMBED_MARK_LEN = COMMENT_EMBED_MARK.length;\r\nconst COMMENT_TEMPLATE_MARK_LEN = COMMENT_TEMPLATE_MARK.length;\r\n\r\nconst getTextFromContent   = (node:Node):string        => node.textContent?.slice(COMMENT_EMBED_MARK_LEN).trim() ?? \"\";\r\nconst getTextFromAttribute = (node:HTMLElement):string => node.getAttribute(DATA_BIND_ATTRIBUTE) ?? \"\";\r\nconst getTextFromTemplate  = (node:Node):string        => {\r\n  const text = node.textContent?.slice(COMMENT_TEMPLATE_MARK_LEN).trim(); \r\n  const id = Number(text);\r\n  const template = getTemplateById(id) ?? raiseError(`Template not found: ${text}`);\r\n  return template.getAttribute(DATA_BIND_ATTRIBUTE) ?? \"\";\r\n};\r\nconst getTextFromSVGElement = (node:SVGElement):string => node.getAttribute(DATA_BIND_ATTRIBUTE) ?? \"\";\r\n\r\nconst getTextByNodeType = {\r\n  \"Text\":        getTextFromContent,\r\n  \"HTMLElement\": getTextFromAttribute,\r\n  \"Template\":    getTextFromTemplate,\r\n  \"SVGElement\":  getTextFromSVGElement\r\n};\r\n\r\nexport function getDataBindText(nodeType: NodeType, node: Node): string {\r\n  const bindText = getTextByNodeType[nodeType](node as any) ?? \"\";\r\n  if (nodeType === \"Text\") {\r\n    return \"textContent:\" + bindText;\r\n  } else {\r\n    return bindText;\r\n  }\r\n}\r\n","import { raiseError } from \"../utils\";\r\nimport { NodeType } from \"./types\";\r\n\r\nconst createNodeKey = (node:Node):string => node.constructor.name + \"\\t\" + ((node instanceof Comment) ? (node.textContent?.[2] ?? \"\") : \"\");\r\n\r\ntype NodeTypeByNodeKey = {\r\n  [nodeKey:string]:NodeType;\r\n};\r\n\r\nconst nodeTypeByNodeKey:NodeTypeByNodeKey = {};\r\n\r\nconst getNodeTypeByNode = (node:Node):NodeType =>\r\n  (node instanceof Comment && node.textContent?.[2] === \":\") ? \"Text\" : \r\n  (node instanceof HTMLElement) ? \"HTMLElement\" :\r\n  (node instanceof Comment && node.textContent?.[2] === \"|\") ? \"Template\" : \r\n  (node instanceof SVGElement) ? \"SVGElement\" : raiseError(`Unknown NodeType: ${node.nodeType}`);\r\n\r\n/**\r\n * ノードのタイプを取得\r\n * @param node ノード\r\n * @param nodeKey ノードキー\r\n * @returns {NodeType} ノードタイプ\r\n */\r\nexport function getNodeType(\r\n  node   : Node, \r\n  nodeKey: string = createNodeKey(node)\r\n): NodeType {\r\n  return nodeTypeByNodeKey[nodeKey] ?? (nodeTypeByNodeKey[nodeKey] = getNodeTypeByNode(node));\r\n}\r\n","import { IFilterText, IBindText } from \"./types\";\r\n\r\nconst trim = (s:string):string => s.trim();\r\n\r\nconst has = (s:string):boolean => s.length > 0; // check length\r\n\r\nconst re = new RegExp(/^#(.*)#$/);\r\nconst decode = (s:string):string => {\r\n  const m = re.exec(s);\r\n  return m ? decodeURIComponent(m[1]) : s;\r\n};\r\n\r\n/**\r\n * parse filter part\r\n * \"eq,100|falsey\" ---> [Filter(eq, [100]), Filter(falsey)]\r\n */\r\nconst parseFilter = (text:string): IFilterText => {\r\n  const [name, ...options] = text.split(\",\").map(trim);\r\n  return {name, options:options.map(decode)};\r\n};\r\n\r\ntype ReturnParseStateProperty = {property:string,filters:IFilterText[]};\r\n/**\r\n * parse expression\r\n * \"value|eq,100|falsey\" ---> [\"value\", Filter[]]\r\n */\r\nconst parseProperty = (text:string): ReturnParseStateProperty => {\r\n  const [property, ...filterTexts] = text.split(\"|\").map(trim);\r\n  return {property, filters:filterTexts.map(parseFilter)};\r\n};\r\n\r\n/**\r\n * parse expressions\r\n * \"textContent:value|eq,100|falsey\" ---> [\"textContent\", \"value\", Filter[eq, falsey]]\r\n */\r\nconst parseExpression = (expression:string): IBindText => {\r\n  const [ bindExpression, event = null ] = expression.split(\"@\").map(trim);\r\n  const [nodePropertyText, statePropertyText] = bindExpression.split(\":\").map(trim);\r\n  const { property:nodeProperty, filters:inputFilterTexts } = parseProperty(nodePropertyText);\r\n  const { property:stateProperty, filters:outputFilterTexts } = parseProperty(statePropertyText);\r\n  return { nodeProperty, stateProperty, inputFilterTexts, outputFilterTexts, event };\r\n};\r\n\r\n/**\r\n * parse bind text and return BindText[]\r\n */\r\nconst parseExpressions = (text:string): IBindText[] => {\r\n  return text.split(\";\").map(trim).filter(has).map(s => parseExpression(s));\r\n};\r\n\r\nconst cache:{[key:string]: IBindText[]} = {};\r\n\r\n/**\r\n * 取得したバインドテキスト(getBindTextByNodeType)を解析して、バインド情報を取得する\r\n * @param text バインドテキスト\r\n * @param defaultName デフォルト名\r\n * @returns {IBindText[]} バインド情報\r\n */\r\nexport function parseBindText(\r\n  text: string\r\n): IBindText[] {\r\n  if (text.trim() === \"\") {\r\n    return [];\r\n  }\r\n  return cache[text] ?? (cache[text] = parseExpressions(text));\r\n}\r\n","import { NodeType } from \"./types\";\r\n\r\nconst DATASET_BIND_PROPERTY = 'data-bind';\r\n\r\nconst removeAttributeFromElement = (node:Node):void => {\r\n  const element = node as Element;\r\n  element.removeAttribute(DATASET_BIND_PROPERTY);\r\n}\r\n\r\ntype RemoveAttributeByNodeType = {\r\n  [key in NodeType]: ((node:Node)=>void) | undefined;\r\n}\r\n\r\nconst removeAttributeByNodeType:RemoveAttributeByNodeType = {\r\n  HTMLElement: removeAttributeFromElement,\r\n  SVGElement : removeAttributeFromElement,\r\n  Text       : undefined,\r\n  Template   : undefined,\r\n}\r\n\r\n/**\r\n * ノードからdata-bind属性を削除\r\n * @param node ノード\r\n * @param nodeType ノードタイプ\r\n * @returns {Node} ノード\r\n */\r\nexport function removeDataBindAttribute(\r\n  node    : Node, \r\n  nodeType: NodeType\r\n):void {\r\n  return removeAttributeByNodeType[nodeType]?.(node);\r\n}\r\n","import { NodeType } from \"./types\";\r\n\r\nconst replaceTextNodeText = (node:Node):Node => {\r\n  const textNode = document.createTextNode(\"\");\r\n  node.parentNode?.replaceChild(textNode, node);\r\n  return textNode;\r\n}\r\n\r\ntype ReplaceTextNodeFn = {\r\n  [key in NodeType]: ((node:Node)=>Node) | undefined;\r\n}\r\n\r\nconst replaceTextNodeFn:ReplaceTextNodeFn = {\r\n  Text       : replaceTextNodeText,\r\n  HTMLElement: undefined,\r\n  Template   : undefined,\r\n  SVGElement : undefined\r\n}\r\n\r\n/**\r\n * コメントノードをテキストノードに置き換える\r\n * @param node ノード\r\n * @param nodeType ノードタイプ\r\n * @returns {Node} ノード\r\n */\r\nexport function replaceTextNodeFromComment(\r\n  node    : Node, \r\n  nodeType: NodeType\r\n): Node {\r\n  return replaceTextNodeFn[nodeType]?.(node) ?? node;\r\n}\r\n","import { getAbsoluteNodePath } from \"./getAbsoluteNodePath\";\r\nimport { getBindingNodeCreator } from \"./getBindingNodeCreator\";\r\nimport { getBindingStateCreator } from \"./getBindingStateCreator\";\r\nimport { getDataBindText } from \"./getDataBindText\";\r\nimport { getNodeType } from \"./getNodeType\";\r\nimport { parseBindText } from \"./parseBindText\";\r\nimport { removeDataBindAttribute } from \"./removeDataBindAttribute\";\r\nimport { replaceTextNodeFromComment } from \"./replaceTextNodeFromComment\";\r\nimport { IBindingCreator, IBindText, IDataBindAttributes, NodePath, NodeType } from \"./types\";\r\n\r\nclass DataBindAttributes implements IDataBindAttributes {\r\n  nodeType     : NodeType; // ノードの種別\r\n  nodePath     : NodePath; // ノードのルート\r\n  bindTexts    : IBindText[]; // BINDテキストの解析結果\r\n  creatorByText: Map<IBindText, IBindingCreator> = new Map(); // BINDテキストからバインディングクリエイターを取得\r\n  constructor(node: Node) {\r\n    this.nodeType = getNodeType(node);\r\n    const text = getDataBindText(this.nodeType, node);\r\n    // CommentNodeをTextに置換、template.contentの内容が書き換わることに注意\r\n    node = replaceTextNodeFromComment(node, this.nodeType);\r\n    // data-bind属性を削除する\r\n    removeDataBindAttribute(node, this.nodeType);\r\n\r\n    this.nodePath = getAbsoluteNodePath(node);\r\n    this.bindTexts = parseBindText(text);\r\n    for(let i = 0; i < this.bindTexts.length; i++) {\r\n      const bindText = this.bindTexts[i];\r\n      const creator: IBindingCreator = {\r\n        createBindingNode : getBindingNodeCreator(\r\n          node, \r\n          bindText.nodeProperty, \r\n          bindText.inputFilterTexts,\r\n          bindText.event\r\n        ),\r\n        createBindingState: getBindingStateCreator(\r\n          bindText.stateProperty, \r\n          bindText.outputFilterTexts\r\n        ),\r\n      }\r\n      this.creatorByText.set(bindText, creator);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function createDataBindAttributes(node: Node): IDataBindAttributes {\r\n  return new DataBindAttributes(node);\r\n}","import { DATA_BIND_ATTRIBUTE, COMMENT_EMBED_MARK, COMMENT_TEMPLATE_MARK } from \"../constants\";\r\n\r\n/**\r\n * \"@@:\"もしくは\"@@|\"で始まるコメントノードを取得する\r\n */\r\nfunction isCommentNode(node: Node): boolean {\r\n  return node instanceof Comment && (\r\n    (node.textContent?.indexOf(COMMENT_EMBED_MARK) === 0) || (node.textContent?.indexOf(COMMENT_TEMPLATE_MARK) === 0)\r\n  );\r\n} \r\n\r\nexport function getNodesHavingDataBind(root: Node): Node[] {\r\n  const nodes: Node[] = [];\r\n  const walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT, {\r\n    acceptNode(node:Node) {\r\n      return (node instanceof Element) ? \r\n        (node.hasAttribute(DATA_BIND_ATTRIBUTE) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP)\r\n        : (isCommentNode(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP);\r\n    }\r\n  });\r\n  while (walker.nextNode()) {\r\n    nodes.push(walker.currentNode);\r\n  }\r\n  return nodes;\r\n}\r\n\r\n","import { createDataBindAttributes } from \"./createDataBindAttributes\";\r\nimport { getNodesHavingDataBind } from \"./getNodesHavingDataBind\";\r\nimport { IDataBindAttributes } from \"./types\";\r\n\r\nconst listDataBindAttributesById: {[key:number]:IDataBindAttributes[]} = {};\r\n\r\nconst listPathsSetById: {[key:number]:Set<string>} = {};\r\n\r\nconst pathsSetById: {[key:number]:Set<string>} = {};\r\n\r\nfunction getDataBindAttributesFromTemplate(content: DocumentFragment): IDataBindAttributes[] {\r\n  const nodes = getNodesHavingDataBind(content);\r\n  return nodes.map(node => createDataBindAttributes(node));\r\n}\r\n\r\nexport function registerDataBindAttributes(\r\n  id     : number, \r\n  content: DocumentFragment,\r\n  rootId : number = id\r\n): IDataBindAttributes[] {\r\n  const dataBindAttributes = getDataBindAttributesFromTemplate(content);\r\n  const paths = pathsSetById[rootId] ?? (pathsSetById[rootId] = new Set<string>());\r\n  const listPaths = listPathsSetById[rootId] ?? (listPathsSetById[rootId] = new Set<string>());\r\n  for(let i = 0; i < dataBindAttributes.length; i++) {\r\n    const attribute = dataBindAttributes[i];\r\n    for(let j = 0; j < attribute.bindTexts.length; j++) {\r\n      const bindText = attribute.bindTexts[j];\r\n      paths.add(bindText.stateProperty);\r\n      if (bindText.nodeProperty === \"for\") {\r\n        listPaths.add(bindText.stateProperty);\r\n      }\r\n    }\r\n  }\r\n  return listDataBindAttributesById[id] = dataBindAttributes;\r\n}\r\n\r\nexport const getDataBindAttributesById = (id: number): IDataBindAttributes[] => {\r\n  return listDataBindAttributesById[id];\r\n}\r\n\r\nexport const getListPathsSetById = (id: number): Set<string> => {\r\n  return listPathsSetById[id] ?? [];\r\n};\r\n\r\nexport const getPathsSetById = (id: number): Set<string> => {\r\n  return pathsSetById[id] ?? [];\r\n};","\r\nexport function removeEmptyTextNodes(content:DocumentFragment):void {\r\n  Array.from(content.childNodes).forEach(node => {\r\n    if (node.nodeType === Node.TEXT_NODE && !(node.nodeValue ?? \"\").trim()) {\r\n      content.removeChild(node);\r\n    }\r\n  });  \r\n}\r\n","import { registerDataBindAttributes } from \"../BindingBuilder/registerDataBindAttributes\";\r\nimport { raiseError } from \"../utils\";\r\nimport { removeEmptyTextNodes } from \"./removeEmptyTextNodes\";\r\n\r\nconst templateById:Record<number, HTMLTemplateElement> = {};\r\n\r\nexport function registerTemplate(\r\n  id      : number, \r\n  template: HTMLTemplateElement,\r\n  rootId  : number\r\n): number {\r\n  removeEmptyTextNodes(template.content);\r\n  registerDataBindAttributes(id, template.content, rootId);  \r\n  templateById[id] = template;\r\n  return id;\r\n}\r\n\r\nexport function getTemplateById(id: number): HTMLTemplateElement {\r\n  return templateById[id] ?? raiseError(`getTemplateById: template not found: ${id}`);\r\n}","import { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { CreateBindingNodeByNodeFn, IBindingNode } from \"./BindingNode/types\";\r\nimport { CreateBindingStateByStateFn, IBindingState } from \"./BindingState/types\";\r\nimport { IBindContent, IBinding } from \"./types\";\r\n\r\nclass Binding implements IBinding {\r\n  parentBindContent: IBindContent;\r\n  node             : Node;\r\n  engine           : IComponentEngine;\r\n  bindingNode      : IBindingNode;\r\n  bindingState     : IBindingState;\r\n  constructor(\r\n    parentBindContent : IBindContent,\r\n    node              : Node,\r\n    engine            : IComponentEngine,\r\n    createBindingNode : CreateBindingNodeByNodeFn, \r\n    createBindingState: CreateBindingStateByStateFn,\r\n  ) {\r\n    this.parentBindContent = parentBindContent\r\n    this.node = node;\r\n    this.engine = engine\r\n    this.bindingNode = createBindingNode(this, node, engine.inputFilters);\r\n    this.bindingState = createBindingState(this, engine.stateProxy, engine.outputFilters);\r\n  }\r\n\r\n  get bindContents() {\r\n    return this.bindingNode.bindContents;\r\n  }\r\n\r\n  init() {\r\n    this.bindingNode.init();\r\n    this.bindingState.init();\r\n  }\r\n\r\n  render() {\r\n    this.bindingNode.update();\r\n  }\r\n}\r\n\r\nexport function createBinding(\r\n  parentBindContent : IBindContent,\r\n  node              : Node, \r\n  engine            : IComponentEngine, \r\n  createBindingNode : CreateBindingNodeByNodeFn, \r\n  createBindingState: CreateBindingStateByStateFn\r\n): IBinding {\r\n  return new Binding(\r\n    parentBindContent, \r\n    node, \r\n    engine, \r\n    createBindingNode, \r\n    createBindingState\r\n  );\r\n}","import { IBindContent } from \"../DataBinding/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { getStructuredPathInfo } from \"../StateProperty/getStructuredPathInfo\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { ILoopContext } from \"./types\";\r\n\r\nclass LoopContext implements ILoopContext {\r\n  #path     : string;\r\n  #info        : IStructuredPathInfo;\r\n  #listIndexRef: WeakRef<IListIndex> | null;\r\n  #bindContent : IBindContent;\r\n  constructor(\r\n    path    : string | null,\r\n    listIndex  : IListIndex,\r\n    bindContent: IBindContent\r\n  ) {\r\n    this.#path = path ?? raiseError(\"name is required\");\r\n    this.#info = getStructuredPathInfo(this.#path);\r\n    this.#listIndexRef = new WeakRef(listIndex);\r\n    this.#bindContent = bindContent;\r\n  }\r\n  get path(): string {\r\n    return this.#path;\r\n  }\r\n  get info(): IStructuredPathInfo {\r\n    return this.#info;\r\n  }\r\n  get listIndex(): IListIndex {\r\n    return this.#listIndexRef?.deref() ?? raiseError(\"listIndex is null\");\r\n  }\r\n  get listIndexRef(): WeakRef<IListIndex> {\r\n    return this.#listIndexRef ?? raiseError(\"listIndexRef is null\");\r\n  }\r\n  assignListIndex(listIndex: IListIndex): void {\r\n    this.#listIndexRef = new WeakRef(listIndex);\r\n    // 構造は変わらないので、#parentLoopContext、#cacheはクリアする必要はない\r\n  }\r\n  clearListIndex():void {\r\n    this.#listIndexRef = null;\r\n  }\r\n  get bindContent(): IBindContent {\r\n    return this.#bindContent;\r\n  }\r\n\r\n  #parentLoopContext: ILoopContext | null | undefined;\r\n  get parentLoopContext(): ILoopContext | null {\r\n    if (typeof this.#parentLoopContext === \"undefined\") {\r\n      let currentBinding: IBindContent | null = this.bindContent;\r\n      while(currentBinding !== null) {\r\n        if (currentBinding.loopContext !== null && currentBinding.loopContext !== this) {\r\n          this.#parentLoopContext = currentBinding.loopContext;\r\n          break;\r\n        }\r\n        currentBinding = currentBinding.parentBinding?.parentBindContent ?? null;\r\n      }\r\n      if (typeof this.#parentLoopContext === \"undefined\") this.#parentLoopContext = null;\r\n    }\r\n    return this.#parentLoopContext;\r\n  }\r\n\r\n  #cache:Record<string, ILoopContext | null> = {};\r\n  find(name: string): ILoopContext | null {\r\n    let loopContext = this.#cache[name];\r\n    if (typeof loopContext === \"undefined\") {\r\n      let currentLoopContext: ILoopContext | null = this;\r\n      while(currentLoopContext !== null) {\r\n        if (currentLoopContext.path === name) break;\r\n        currentLoopContext = currentLoopContext.parentLoopContext;\r\n      }\r\n      loopContext = this.#cache[name] = currentLoopContext;\r\n    }\r\n    return loopContext;\r\n  }\r\n\r\n  walk(callback: (loopContext: ILoopContext) => void): void {\r\n    let currentLoopContext: ILoopContext | null = this;\r\n    while(currentLoopContext !== null) {\r\n      callback(currentLoopContext);\r\n      currentLoopContext = currentLoopContext.parentLoopContext;\r\n    }\r\n  }\r\n\r\n  serialize(): ILoopContext[] {\r\n    const results: ILoopContext[] = [];\r\n    this.walk((loopContext) => {\r\n      results.unshift(loopContext);\r\n    });\r\n    return results;\r\n  }\r\n\r\n}\r\n\r\n// 生成されたあと、IBindContentのloopContextに登録される\r\n// IBindContentにずっと保持される\r\nexport function createLoopContext(\r\n  pattern: string | null,\r\n  listIndex: IListIndex,\r\n  bindContent: IBindContent\r\n): ILoopContext {\r\n  return new LoopContext(pattern, listIndex, bindContent);\r\n}","import { IBinding } from \"../DataBinding/types\";\r\n\r\nexport function render(bindings: IBinding[]) {\r\n  const bindingsWithSelectElement = [];\r\n  for(let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i];\r\n    if (binding.bindingNode.isSelectElement) {\r\n      bindingsWithSelectElement.push(binding);\r\n    } else {\r\n      binding.render();\r\n    }\r\n  }\r\n  for(let i = 0; i < bindingsWithSelectElement.length; i++) {\r\n    bindingsWithSelectElement[i].render();\r\n  }\r\n}\r\n","import { resolveNodeFromPath } from \"../BindingBuilder/resolveNodeFromPath\";\r\nimport { ILoopContext } from \"../LoopContext/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { getTemplateById } from \"../Template/registerTemplate\";\r\nimport { raiseError } from \"../utils\";\r\nimport { createBinding } from \"./Binding\";\r\nimport { IBindContent, IBinding } from \"./types\";\r\nimport { createLoopContext } from \"../LoopContext/createLoopContext\";\r\nimport { render } from \"../Render/render\";\r\nimport { getDataBindAttributesById } from \"../BindingBuilder/registerDataBindAttributes\";\r\n\r\nfunction createContent(id: number): DocumentFragment {\r\n  const template = getTemplateById(id) ?? \r\n    raiseError(`BindContent: template is not found: ${id}`);\r\n  return document.importNode(template.content, true);\r\n}\r\n\r\nfunction createBindings(\r\n  bindContent: IBindContent, \r\n  id         : number, \r\n  engine     : IComponentEngine, \r\n  content    : DocumentFragment\r\n): IBinding[] {\r\n  const attributes = getDataBindAttributesById(id) ?? \r\n    raiseError(`BindContent: data-bind is not set`);\r\n  const bindings: IBinding[] = [];\r\n  for(let i = 0; i < attributes.length; i++) {\r\n    const attribute = attributes[i];\r\n    const node = resolveNodeFromPath(content, attribute.nodePath) ?? \r\n      raiseError(`BindContent: node is not found: ${attribute.nodePath}`);\r\n    for(let j = 0; j < attribute.bindTexts.length; j++) {\r\n      const bindText = attribute.bindTexts[j];\r\n      const creator = attribute.creatorByText.get(bindText) ?? \r\n        raiseError(`BindContent: creator is not found: ${bindText}`);\r\n      const binding = createBinding(\r\n        bindContent, \r\n        node, \r\n        engine, \r\n        creator.createBindingNode, \r\n        creator.createBindingState\r\n      );\r\n      bindings.push(binding);\r\n    }\r\n  }\r\n  return bindings;\r\n}\r\n\r\nclass BindContent implements IBindContent {\r\n  loopContext  : ILoopContext | null;\r\n  parentBinding: IBinding | null;\r\n  childNodes   : Node[];\r\n  fragment     : DocumentFragment;\r\n  engine       : IComponentEngine | undefined;\r\n  #id;\r\n  get id() {\r\n    return this.#id;\r\n  }\r\n  get isMounted() {\r\n    return this.childNodes.length > 0 && this.childNodes[0].parentNode !== this.fragment;\r\n  }\r\n  get firstChildNode() {\r\n    return this.childNodes[0] ?? null;\r\n  }\r\n  get lastChildNode() {\r\n    return this.childNodes[this.childNodes.length - 1] ?? null;\r\n  }\r\n  getLastNode(parentNode: Node): Node | null {\r\n    const lastBinding = this.bindings[this.bindings.length - 1];\r\n    const lastChildNode = this.lastChildNode;\r\n    if (lastBinding.node === lastChildNode) {\r\n      if (lastBinding.bindContents.size > 0) {\r\n        const childBindContent = Array.from(lastBinding.bindContents).at(-1) ?? raiseError(`BindContent: childBindContent is not found`);\r\n        const lastNode = childBindContent.getLastNode(parentNode);\r\n        if (lastNode !== null) {\r\n          return lastNode;\r\n        }\r\n      }\r\n    }\r\n    if (parentNode !== lastChildNode?.parentNode) {\r\n      return null;\r\n    }\r\n    return lastChildNode;\r\n  }\r\n  #currentLoopContext: ILoopContext | null | undefined;\r\n  get currentLoopContext(): ILoopContext | null {\r\n    if (typeof this.#currentLoopContext === \"undefined\") {\r\n      let bindContent: IBindContent | null = this;\r\n      while(bindContent !== null) {\r\n        if (bindContent.loopContext !== null) break; ;\r\n        bindContent = bindContent.parentBinding?.parentBindContent ?? null;\r\n      }\r\n      this.#currentLoopContext = bindContent?.loopContext ?? null;\r\n    }\r\n    return this.#currentLoopContext;\r\n  }\r\n  constructor(\r\n    parentBinding: IBinding | null,\r\n    id           : number, \r\n    engine       : IComponentEngine, \r\n    loopContext  : string | null,\r\n    listIndex    : IListIndex | null\r\n  ) {\r\n    this.parentBinding = parentBinding;\r\n    this.#id = id;\r\n    this.fragment = createContent(id);\r\n    this.childNodes = Array.from(this.fragment.childNodes);\r\n    this.engine = engine;\r\n    this.loopContext = (listIndex !== null) ? createLoopContext(loopContext, listIndex, this) : null;\r\n    this.bindings = createBindings(\r\n      this, \r\n      id, \r\n      engine, \r\n      this.fragment\r\n    );\r\n  }\r\n  mount(parentNode: Node) {\r\n    parentNode.appendChild(this.fragment);\r\n  }\r\n  mountBefore(parentNode: Node, beforeNode: Node | null) {\r\n    parentNode.insertBefore(this.fragment, beforeNode);\r\n  }\r\n  mountAfter(parentNode: Node, afterNode: Node | null) {\r\n    parentNode.insertBefore(\r\n      this.fragment, \r\n      afterNode?.nextSibling ?? null\r\n    );\r\n  }\r\n  unmount() {\r\n    for(let i = 0; i < this.childNodes.length; i++) {\r\n      this.fragment.appendChild(this.childNodes[i]);\r\n    }\r\n  }\r\n  bindings: IBinding[] = [];\r\n  render() {\r\n    render(this.bindings);\r\n  }\r\n  init() {\r\n    this.bindings.forEach(binding => binding.init());\r\n  }\r\n  assignListIndex(listIndex: IListIndex): void {\r\n    if (this.loopContext == null) raiseError(`BindContent: loopContext is null`);\r\n    this.loopContext.assignListIndex(listIndex);\r\n    this.init();\r\n  }\r\n}\r\n\r\nexport function createBindContent(\r\n  parentBinding: IBinding | null,\r\n  id           : number, \r\n  engine       :IComponentEngine, \r\n  loopContext  : string | null, \r\n  listIndex    :IListIndex | null\r\n):IBindContent {\r\n  const bindContent = new BindContent(\r\n    parentBinding, \r\n    id, \r\n    engine, \r\n    loopContext, \r\n    listIndex\r\n  );\r\n  bindContent.init();\r\n  return bindContent;\r\n}","import { IListIndex } from \"./types\";\r\n\r\nclass ListIndex implements IListIndex {\r\n  static id: number = 0;\r\n  id              : number = ++ListIndex.id;\r\n  #parentListIndex: IListIndex | null = null;\r\n  get parentListIndex(): IListIndex | null {\r\n    return this.#parentListIndex;\r\n  }\r\n  index: number;\r\n  get indexes(): number[] {\r\n    const indexes = this.parentListIndex?.indexes ?? [];\r\n    indexes.push(this.index);\r\n    return indexes;\r\n  }\r\n\r\n  get position(): number {\r\n    return (this.parentListIndex?.position ?? -1) + 1;\r\n  }\r\n\r\n  constructor(\r\n    parentListIndex: IListIndex | null,\r\n    index: number\r\n  ) {\r\n    this.#parentListIndex = parentListIndex;\r\n    this.index = index;\r\n  }\r\n  \r\n  truncate(length: number): IListIndex | null {\r\n    let listIndex: IListIndex | null = this;\r\n    while(listIndex !== null) {\r\n      if (listIndex.position < length) return listIndex;\r\n      listIndex = listIndex.parentListIndex;\r\n    }\r\n    return null;\r\n  }\r\n  add(value: number): IListIndex {\r\n    return new ListIndex(this, value);\r\n  }\r\n\r\n  *reverseIterator(): Generator<IListIndex> {\r\n    yield this;\r\n    if (this.parentListIndex !== null) {\r\n      yield* this.parentListIndex.reverseIterator();\r\n    }\r\n    return;\r\n  }\r\n\r\n  *iterator(): Generator<IListIndex> {\r\n    if (this.parentListIndex !== null) {\r\n      yield* this.parentListIndex.iterator();\r\n    }\r\n    yield this;\r\n    return;\r\n  }\r\n\r\n  toString(): string {\r\n    const parentListIndex = this.parentListIndex?.toString();\r\n    return (parentListIndex !== null) ? parentListIndex + \",\" + this.index.toString() : this.index.toString();\r\n  }\r\n\r\n  at(position: number): IListIndex | null {\r\n    let iterator;\r\n    if (position >= 0) {\r\n      iterator = this.iterator();\r\n    } else {\r\n      position = - position - 1 \r\n      iterator = this.reverseIterator();\r\n    }\r\n    let next;\r\n    while(position >= 0) {\r\n      next = iterator.next();\r\n      position--;\r\n    }\r\n    return next?.value ?? null;\r\n  }\r\n  \r\n}\r\n\r\nexport function createListIndex(\r\n  parentListIndex: IListIndex | null,\r\n  index          : number\r\n): IListIndex {\r\n  return new ListIndex(parentListIndex, index);\r\n}\r\n\r\nexport function getMaxListIndexId(): number {\r\n  return ListIndex.id;\r\n}\r\n","import { getMaxListIndexId } from \"../ListIndex/createListIndex\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\n\r\n/**\r\n * 参照用のIDを生成する\r\n * ListIndexのIDは最大値を取得してから計算するため、ListIndexの構築が完了していない場合、重複が発生する可能性がある\r\n */\r\n/**\r\n * ToDo:ListIndexの構築が完了していない状態で、IDを取得すると例外を発生させる仕組みが必要\r\n */\r\nexport function getStatePropertyRefId(info: IStructuredPathInfo, listIndex: IListIndex | null): number {\r\n  const listIndexMaxId = getMaxListIndexId();\r\n  return info.id * (listIndexMaxId + 1) + (listIndex?.id ?? 0);\r\n}","import { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { IStateHandler } from \"../types\";\r\n\r\nexport function setTracking(info: IStructuredPathInfo, handler: IStateHandler, callback: () => any): any {\r\n  handler.trackingStack.push(info);\r\n  handler.lastTrackingStack = info;\r\n  try {\r\n    return callback();\r\n  } finally {\r\n    handler.trackingStack.pop();\r\n    handler.lastTrackingStack = handler.trackingStack[handler.trackingStack.length - 1] ?? null;\r\n  }\r\n}\r\n","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { getStatePropertyRefId } from \"../../StatePropertyRef/getStatePropertyRefId\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { setTracking } from \"./setTracking\";\r\n\r\nfunction _getByRef(\r\n  target   : Object, \r\n  info     : IStructuredPathInfo,\r\n  listIndex: IListIndex | null,\r\n  receiver : IStateProxy,\r\n  handler  : IStateHandler\r\n): any {\r\n  if (handler.lastTrackingStack != null && handler.lastTrackingStack !== info) {\r\n    const lastPattern = handler.lastTrackingStack;\r\n    if (lastPattern.parentInfo !== info) {\r\n      handler.engine.addDependentProp(lastPattern, info);\r\n    }\r\n  }\r\n\r\n  let refId = 0;\r\n  if (handler.cacheable) {\r\n    refId = getStatePropertyRefId(info, listIndex);\r\n    const value = handler.cache[refId];\r\n    if (typeof value !== \"undefined\") {\r\n      return value;\r\n    }\r\n    if (refId in handler.cache) {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  let value;\r\n  try {\r\n    if (info.pattern in target) {\r\n      if (info.wildcardCount > 0) {\r\n        if (listIndex === null) {\r\n          raiseError(`propRef.listIndex is null`);\r\n        }\r\n        return (value = handler.engine.setStatePropertyRef(info, listIndex, () => {\r\n          return Reflect.get(target, info.pattern, receiver);\r\n        }));\r\n      } else {\r\n        return (value = Reflect.get(target, info.pattern, receiver));\r\n      }\r\n    } else {\r\n      const parentInfo = info.parentInfo ?? raiseError(`propRef.stateProp.parentInfo is undefined`);\r\n      const parentListIndex = parentInfo.wildcardCount < info.wildcardCount ? (listIndex?.parentListIndex ?? null) : listIndex;\r\n      const parentValue = getByRef(target, parentInfo, parentListIndex, receiver, handler);\r\n      const lastSegment = info.lastSegment;\r\n      if (lastSegment === \"*\") {\r\n        const index = listIndex?.index ?? raiseError(`propRef.listIndex?.index is undefined`);\r\n        return (value = Reflect.get(parentValue, index));\r\n      } else {\r\n        return (value = Reflect.get(parentValue, lastSegment));\r\n      }\r\n    }\r\n  } finally {\r\n    if (handler.cacheable && !(refId in handler.cache)) {\r\n      handler.cache[refId] = value;\r\n    }\r\n  }\r\n}\r\n\r\nexport function getByRef(\r\n    target   : Object, \r\n    info     : IStructuredPathInfo,\r\n    listIndex: IListIndex | null,\r\n    receiver : IStateProxy,\r\n    handler  : IStateHandler\r\n  ): any {\r\n    if (handler.engine.trackedGetters.has(info.pattern)) {\r\n      return setTracking(info, handler, () => {\r\n        return _getByRef(target, info, listIndex, receiver, handler);\r\n      });\r\n    } else {\r\n      return _getByRef(target, info, listIndex, receiver, handler);\r\n    }\r\n\r\n  }\r\n","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { getByRef as methodGetByRef } from \"../methods/getByRef\";\r\n\r\nexport function getByRef(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return (pattern: IStructuredPathInfo, listIndex: IListIndex | null) => \r\n    methodGetByRef(target, pattern, listIndex, receiver, handler);\r\n} \r\n","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { getByRef } from \"./getByRef\";\r\n\r\nexport function setByRef(\r\n    target   : Object, \r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    value    : any, \r\n    receiver : IStateProxy,\r\n    handler  : IStateHandler\r\n): any {\r\n  try {\r\n    if (info.pattern in target) {\r\n      if (info.wildcardCount > 0) {\r\n        if (listIndex === null) {\r\n          raiseError(`propRef.listIndex is null`);\r\n        }\r\n        return handler.engine.setStatePropertyRef(info, listIndex, () => {\r\n          return Reflect.set(target, info.pattern, value, receiver);\r\n        });\r\n      } else {\r\n        return Reflect.set(target, info.pattern, value, receiver);\r\n      }\r\n    } else {\r\n      const parentInfo = info.parentInfo ?? raiseError(`propRef.stateProp.parentInfo is undefined`);\r\n      const parentListIndex = parentInfo.wildcardCount < info.wildcardCount ? (listIndex?.parentListIndex ?? null) : listIndex;\r\n      const parentValue = getByRef(target, parentInfo, parentListIndex, receiver, handler);\r\n      const lastSegment = info.lastSegment;\r\n      if (lastSegment === \"*\") {\r\n        const index = listIndex?.index ?? raiseError(`propRef.listIndex?.index is undefined`);\r\n        return Reflect.set(parentValue, index, value);\r\n      } else {\r\n        return Reflect.set(parentValue, lastSegment, value);\r\n      }\r\n    }\r\n  } finally {\r\n    handler.engine.updater.addUpdatedStatePropertyRefValue(info, listIndex, value);\r\n  }\r\n}\r\n","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { setByRef as methodSetByRef } from \"../methods/setByRef\";\r\n\r\nexport function setByRef(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return (pattern: IStructuredPathInfo, listIndex: IListIndex | null, value: any) => \r\n    methodSetByRef(target, pattern, listIndex, value, receiver, handler);\r\n}","import { IStateHandler } from \"../types\";\r\n\r\nexport async function setCacheable(handler: IStateHandler, callback: () => Promise<void>): Promise<void> {\r\n  handler.cacheable = true;\r\n  handler.cache = {}\r\n  try {\r\n    await callback();\r\n  } finally {\r\n    handler.cacheable = false;\r\n  }\r\n}\r\n","import { IStateHandler, IStateProxy } from \"../types\";\r\nimport { setCacheable as methodSetChargeable } from \"../methods/setCacheable\";\r\n\r\nexport function setCacheable(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return async (callback: () => Promise<void>) => {\r\n    await methodSetChargeable(handler, callback);\r\n  }\r\n}","import { IStateHandler, IStateProxy } from \"../types\";\r\n\r\nconst CONNECTED_CALLBACK = \"$connectedCallback\";\r\n\r\nexport function connectedCallback(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return async () => {\r\n    const callback = Reflect.get(target, CONNECTED_CALLBACK);\r\n    if (typeof callback === \"function\") {\r\n      await callback.call(target, receiver);\r\n    }\r\n  };\r\n}","import { IStateHandler, IStateProxy } from \"../types\";\r\n\r\nconst DISCONNECTED_CALLBACK = \"$disconnectedCallback\";\r\n\r\nexport function disconnectedCallback(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return async () => {\r\n    const callback = Reflect.get(target, DISCONNECTED_CALLBACK);\r\n    if (typeof callback === \"function\") {\r\n      await callback.call(target, receiver);\r\n    }\r\n  };\r\n}","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { getStructuredPathInfo } from \"../../StateProperty/getStructuredPathInfo\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { getByRef } from \"../methods/getByRef\";\r\nimport { setByRef } from \"../methods/setByRef\";\r\n\r\nexport function resolve(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n  return (path: string, indexes: number[], value?:any): any => {\r\n    const info = getStructuredPathInfo(path);\r\n    let listIndex: IListIndex | null = null;\r\n    for(let i = 0; i < info.wildcardParentInfos.length; i++) {\r\n      const wildcardParentPattern = info.wildcardParentInfos[i] ?? raiseError(`wildcardParentPath is null`);\r\n      const listIndexes: IListIndex[] = Array.from(handler.engine.getListIndexesSet(wildcardParentPattern, listIndex) ?? []);\r\n      const index = indexes[i] ?? raiseError(`index is null`);\r\n      listIndex = listIndexes[index] ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n    }\r\n    if (typeof value === \"undefined\") {\r\n      return getByRef(target, info, listIndex, receiver, handler);\r\n    } else {\r\n      return setByRef(target, info, listIndex, value, receiver, handler);\r\n    }\r\n  };\r\n} ","import { IListIndex } from \"../../ListIndex/types\";\r\nimport { getStructuredPathInfo } from \"../../StateProperty/getStructuredPathInfo\";\r\nimport { IStructuredPathInfo } from \"../../StateProperty/types\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\nimport { resolve as _resolve } from \"./resolve\";\r\n\r\nexport function getAll(\r\n  target: Object, \r\n  prop: PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler: IStateHandler\r\n):Function {\r\n    const resolve = _resolve(target, prop, receiver, handler);\r\n    return (path: string, indexes?: number[]): any[] => {\r\n      const info = getStructuredPathInfo(path);\r\n      if (handler.lastTrackingStack != null && handler.lastTrackingStack !== info) {\r\n        const lastPattern = handler.lastTrackingStack;\r\n        if (lastPattern.parentInfo !== info) {\r\n          handler.engine.addDependentProp(lastPattern, info);\r\n        }\r\n      }\r\n  \r\n      if (typeof indexes === \"undefined\") {\r\n        for(let i = 0; i < info.wildcardInfos.length; i++) {\r\n          const wildcardPattern = info.wildcardInfos[i] ?? raiseError(`wildcardPattern is null`);\r\n          const listIndex = handler.engine.getContextListIndex(wildcardPattern.pattern);\r\n          if (listIndex) {\r\n            indexes = listIndex.indexes;\r\n            break;\r\n          }\r\n        }\r\n        if (typeof indexes === \"undefined\") {\r\n          indexes = [];\r\n        }\r\n      }\r\n      const walkWildcardPattern = (\r\n        wildcardParentInfos: IStructuredPathInfo[],\r\n        wildardIndexPos: number,\r\n        listIndex: IListIndex | null,\r\n        indexes: number[],\r\n        indexPos: number,\r\n        parentIndexes: number[],\r\n        results: number[][]\r\n      ) => {\r\n        const wildcardParentPattern = wildcardParentInfos[wildardIndexPos] ?? null;\r\n        if (wildcardParentPattern === null) {\r\n          results.push(parentIndexes);\r\n          return;\r\n        }\r\n        const listIndexSet = handler.engine.getListIndexesSet(wildcardParentPattern, listIndex) ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n        const listIndexes = Array.from(listIndexSet);\r\n        const index = indexes[indexPos] ?? null;\r\n        if (index === null) {\r\n          for(let i = 0; i < listIndexes.length; i++) {\r\n            const listIndex = listIndexes[i];\r\n            walkWildcardPattern(\r\n              wildcardParentInfos, \r\n              wildardIndexPos + 1, \r\n              listIndex, \r\n              indexes, \r\n              indexPos + 1, \r\n              parentIndexes.concat(listIndex.index),\r\n              results);\r\n          }\r\n        } else {\r\n          const listIndex = listIndexes[index] ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n          if ((wildardIndexPos + 1) < wildcardParentInfos.length) {\r\n            walkWildcardPattern(\r\n              wildcardParentInfos, \r\n              wildardIndexPos + 1, \r\n              listIndex, \r\n              indexes, \r\n              indexPos + 1, \r\n              parentIndexes.concat(listIndex.index),\r\n              results\r\n            );\r\n          }\r\n        }\r\n      }\r\n      const resultIndexes: number[][] = [];\r\n      walkWildcardPattern(\r\n        info.wildcardParentInfos, \r\n        0, \r\n        null, \r\n        indexes, \r\n        0, \r\n        [], \r\n        resultIndexes\r\n      );\r\n      const resultValues: any[] = [];\r\n      for(let i = 0; i < resultIndexes.length; i++) {\r\n        resultValues.push(resolve(\r\n          info.pattern,\r\n          resultIndexes[i]\r\n        ));\r\n      }\r\n      return resultValues;\r\n    }\r\n  }","\r\nimport { IResolvedPathInfo, WildcardType } from './types';\r\nimport { getStructuredPathInfo } from './getStructuredPathInfo';\r\n\r\n/**\r\n * プロパティ名に\"constructor\"や\"toString\"などの予約語やオブジェクトのプロパティ名を\r\n * 上書きするような名前も指定できるように、Mapを検討したが、そもそもそのような名前を\r\n * 指定することはないと考え、Mapを使わないことにした。\r\n */\r\nconst _cache: { [key:string]: IResolvedPathInfo } = {};\r\n//const _cache: Map<string, IResolvedPathInfo> = new Map();\r\n\r\nclass ResolvedPathInfo implements IResolvedPathInfo {\r\n  static id = 0;\r\n  id = ++ResolvedPathInfo.id;\r\n  name;\r\n  elements;\r\n  paths;\r\n  wildcardCount;\r\n  wildcardType;\r\n  wildcardIndexes;\r\n  info;\r\n  constructor(name: string) {\r\n    const elements = name.split(\".\");\r\n    const tmpPatternElements = elements.slice();\r\n    const paths = [];\r\n    let incompleteCount = 0;\r\n    let completeCount = 0;\r\n    let lastPath = \"\";\r\n    let wildcardCount = 0;\r\n    let wildcardType: WildcardType = \"none\";\r\n    let wildcardIndexes: (number | null)[] = [];\r\n    for(let i = 0; i < elements.length; i++) {\r\n      const element = elements[i];\r\n      if (element === \"*\") {\r\n        tmpPatternElements[i] = \"*\";\r\n        wildcardIndexes.push(null);\r\n        incompleteCount++;\r\n        wildcardCount++;\r\n      } else {\r\n        const number = Number(element);\r\n        if (!Number.isNaN(number)) {\r\n          tmpPatternElements[i] = \"*\";\r\n          wildcardIndexes.push(number);\r\n          completeCount++;\r\n          wildcardCount++;\r\n        }\r\n      }\r\n      lastPath += element;\r\n      paths.push(lastPath);\r\n      lastPath += (i < elements.length - 1 ? \".\" : \"\");\r\n    }\r\n    const pattern = tmpPatternElements.join(\".\");\r\n    const info = getStructuredPathInfo(pattern);\r\n    if (incompleteCount > 0 || completeCount > 0) {\r\n      if (incompleteCount === wildcardCount) {\r\n        wildcardType = \"context\";\r\n      } else if (completeCount === wildcardCount) {\r\n        wildcardType = \"all\";\r\n      } else {\r\n        wildcardType = \"partial\";\r\n      }\r\n    }\r\n    this.name = name;\r\n    this.elements = elements;\r\n    this.paths = paths;\r\n    this.wildcardCount = wildcardCount;\r\n    this.wildcardType = wildcardType;\r\n    this.wildcardIndexes = wildcardIndexes;\r\n    this.info = info;\r\n  }\r\n}\r\n\r\nexport function getResolvedPathInfo(name:string):IResolvedPathInfo {\r\n  let nameInfo: IResolvedPathInfo | undefined;\r\n//  return _cache.get(name) ?? (_cache.set(name, nameInfo = new ResolvedPathInfo(name)), nameInfo);\r\n  return _cache[name] ?? (_cache[name] = new ResolvedPathInfo(name));\r\n}","import { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IResolvedPathInfo } from \"../StateProperty/types\";\r\nimport { raiseError } from \"../utils\";\r\n\r\nexport function getListIndex(\r\n  info: IResolvedPathInfo, \r\n  engine: IComponentEngine\r\n): IListIndex | null {\r\n  if (info.info.wildcardCount === 0) {\r\n    return null;\r\n  }\r\n  let listIndex: IListIndex | null = null;\r\n  const lastWildcardPath = info.info.lastWildcardPath ?? \r\n    raiseError(`lastWildcardPath is null`);\r\n  if (info.wildcardType === \"context\") {\r\n    listIndex = engine.getContextListIndex(lastWildcardPath) ?? \r\n      raiseError(`ListIndex not found: ${info.info.pattern}`);\r\n  } else if (info.wildcardType === \"all\") {\r\n    let parentListIndex = null;\r\n    for(let i = 0; i < info.info.wildcardCount; i++) {\r\n      const wildcardParentPattern = info.info.wildcardParentInfos[i] ?? raiseError(`wildcardParentPattern is null`);\r\n      const listIndexes: IListIndex[] = Array.from(engine.getListIndexesSet(wildcardParentPattern, parentListIndex) ?? []);\r\n      const wildcardIndex = info.wildcardIndexes[i] ?? raiseError(`wildcardIndex is null`);\r\n      parentListIndex = listIndexes[wildcardIndex] ?? raiseError(`ListIndex not found: ${wildcardParentPattern.pattern}`);\r\n    }\r\n    listIndex = parentListIndex;\r\n  } else if (info.wildcardType === \"partial\") {\r\n    // ToDo:listIndexを取得する必要がある\r\n  } else if (info.wildcardType === \"none\") {\r\n  }\r\n  return listIndex;\r\n}\r\n","import { getResolvedPathInfo } from \"../../StateProperty/getResolvedPathInfo\";\r\nimport { raiseError } from \"../../utils\";\r\nimport { getAll } from \"../apis/getAll\";\r\nimport { resolve } from \"../apis/resolve\";\r\nimport { getListIndex } from \"../getListIndex\";\r\nimport { getByRef } from \"../methods/getByRef\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\n\r\nconst matchIndexPropertyName = new RegExp(/^\\$(\\d+)$/);\r\n\r\nexport function get(\r\n  target  : Object, \r\n  prop    : PropertyKey, \r\n  receiver: IStateProxy,\r\n  handler  : IStateHandler\r\n): any {\r\n  let value;\r\n  if (typeof prop === \"string\") {\r\n    if (matchIndexPropertyName.test(prop)) {\r\n      const number = prop.slice(1);\r\n      const index = Number(number);\r\n      const ref = handler.engine.getLastStatePropertyRef() ?? \r\n        raiseError(`get: this.engine.getLastStatePropertyRef() is null`);\r\n      return ref.listIndex?.at(index - 1)?.index ?? raiseError(`ListIndex not found: ${prop}`);\r\n    } else if (prop === \"$resolve\") {\r\n      return resolve(target, prop, receiver, handler);\r\n    } else if (prop === \"$getAll\") {\r\n      return getAll(target, prop, receiver, handler);\r\n    } else {\r\n      const resolvedInfo = getResolvedPathInfo(prop);\r\n      const listIndex = getListIndex(resolvedInfo, handler.engine);\r\n      value = getByRef(\r\n        target, \r\n        resolvedInfo.info, \r\n        listIndex, \r\n        receiver,\r\n        handler\r\n      );\r\n    }\r\n  } else if (typeof prop === \"symbol\") {\r\n    if (prop in handler.callableApi) {\r\n      return handler.callableApi[prop](target, prop, receiver, handler);\r\n    }\r\n    value = Reflect.get(\r\n      target, \r\n      prop, \r\n      receiver\r\n    );\r\n  }\r\n  return value;\r\n}\r\n","import { getResolvedPathInfo } from \"../../StateProperty/getResolvedPathInfo\";\r\nimport { getListIndex } from \"../getListIndex\";\r\nimport { setByRef } from \"../methods/setByRef\";\r\nimport { IStateHandler, IStateProxy } from \"../types\";\r\n\r\nexport function set(\r\n  target  : Object, \r\n  prop    : PropertyKey, \r\n  value   : any, \r\n  receiver: IStateProxy,\r\n  handler : IStateHandler\r\n): boolean {\r\n  if (typeof prop === \"string\") {\r\n    const resolvedInfo = getResolvedPathInfo(prop);\r\n    const listIndex = getListIndex(resolvedInfo, handler.engine);\r\n    return setByRef(\r\n      target, \r\n      resolvedInfo.info, \r\n      listIndex, \r\n      value, \r\n      receiver,\r\n      handler\r\n    );\r\n  } else {\r\n    return Reflect.set(\r\n      target, \r\n      prop, \r\n      value, \r\n      receiver\r\n    );\r\n  }\r\n}\r\n","import { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { ConnectedCallbackSymbol, DisconnectedCallbackSymbol, GetAllSymbol, GetByRefSymbol, ResolveSymbol, SetByRefSymbol, SetCacheableSymbol } from \"./symbols\";\r\nimport { IState, IStateHandler, IStateProxy } from \"./types\";\r\nimport { getByRef as apiGetByRef } from \"./apis/getByRef\";\r\nimport { setByRef as apiSetByRef } from \"./apis/setByRef\";\r\nimport { setCacheable as apiSetCacheable } from \"./apis/setCacheable\";\r\nimport { connectedCallback } from \"./apis/connectedCallback\";\r\nimport { disconnectedCallback } from \"./apis/disconnectedCallback\";\r\nimport { resolve } from \"./apis/resolve\";\r\nimport { getAll } from \"./apis/getAll\";\r\nimport { get as trapGet } from \"./traps/get\";\r\nimport { set as trapSet } from \"./traps/set\";\r\n\r\nclass StateHandler implements IStateHandler {\r\n  engine   : IComponentEngine;\r\n  cacheable: boolean = false;\r\n  cache    : {[key:number]:any} = {};\r\n  lastTrackingStack: IStructuredPathInfo | null = null;\r\n  trackingStack: IStructuredPathInfo[] = [];\r\n  \r\n  constructor(engine: IComponentEngine) {\r\n    this.engine = engine;\r\n  }\r\n\r\n  callableApi: { [key:symbol]: Function } = {\r\n    [GetByRefSymbol]: apiGetByRef, \r\n    [SetByRefSymbol]: apiSetByRef, \r\n    [SetCacheableSymbol]: apiSetCacheable, \r\n    [ConnectedCallbackSymbol]: connectedCallback, \r\n    [DisconnectedCallbackSymbol]: disconnectedCallback, \r\n    [ResolveSymbol]: resolve, \r\n    [GetAllSymbol]: getAll,\r\n  };\r\n\r\n  get(\r\n    target  : Object, \r\n    prop    : PropertyKey, \r\n    receiver: IStateProxy\r\n  ): any {\r\n    return trapGet(target, prop, receiver, this);\r\n  }\r\n\r\n  set(\r\n    target  : Object, \r\n    prop    : PropertyKey, \r\n    value   : any, \r\n    receiver: IStateProxy\r\n  ): boolean {\r\n    return trapSet(target, prop, value, receiver, this);\r\n  }\r\n}\r\n\r\nexport function createStateProxy(\r\n  engine: IComponentEngine, \r\n  state: Object\r\n): IStateProxy {\r\n  return new Proxy<IState>(state, new StateHandler(engine)) as IStateProxy;\r\n}\r\n\r\n","import { createListIndex } from \"../ListIndex/createListIndex\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { GetByRefSymbol } from \"./symbols\";\r\n\r\nconst BLANK_LISTINDEXES_SET = new Set<IListIndex>();\r\n\r\nfunction buildListIndexTreeSub(\r\n  engine   : IComponentEngine, \r\n  listInfos: Set<IStructuredPathInfo>,\r\n  info     : IStructuredPathInfo,\r\n  listIndex: IListIndex | null, \r\n  value: any[]\r\n): void {\r\n  const oldValue = engine.getList(info, listIndex) ?? [];\r\n  if (oldValue === value) {\r\n    return;\r\n  }\r\n  const oldListIndexesSet = engine.getListIndexesSet(info, listIndex) ?? BLANK_LISTINDEXES_SET;\r\n  const oldListIndexesByItem = Map.groupBy(oldListIndexesSet, listIndex => oldValue[listIndex.index]);\r\n  const newListIndexesSet:Set<IListIndex> = new Set();\r\n  for(let i = 0; i < value.length; i++) {\r\n    const item = value[i];\r\n    const oldListIndexes = oldListIndexesByItem.get(item);\r\n    let curListIndex = oldListIndexes?.shift();\r\n    if (!curListIndex) {\r\n      curListIndex = createListIndex(listIndex, i);\r\n    } else {\r\n      if (curListIndex.index !== i) {\r\n        curListIndex.index = i;\r\n        engine.updater.addUpdatedListIndex(curListIndex);\r\n      }\r\n    }\r\n    newListIndexesSet.add(curListIndex);\r\n  }\r\n  engine.saveListIndexesSet(info, listIndex, newListIndexesSet);\r\n  engine.saveList(info, listIndex, value.slice(0));\r\n\r\n  const searchPath = info.pattern + \".*\";\r\n  for(const info of listInfos) {\r\n    if (searchPath !== info.lastWildcardPath) {\r\n      continue;\r\n    }\r\n    for(const subListIndex of newListIndexesSet) {\r\n      const subValue = engine.stateProxy[GetByRefSymbol](info, subListIndex);\r\n      buildListIndexTreeSub(\r\n        engine, \r\n        listInfos, \r\n        info, \r\n        subListIndex, \r\n        subValue ?? []\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function buildListIndexTree(\r\n  engine   : IComponentEngine, \r\n  info     : IStructuredPathInfo,\r\n  listIndex: IListIndex | null, \r\n  value    : any\r\n): void {\r\n  const listInfos = engine.listInfoSet;\r\n  // 配列じゃなければ何もしない\r\n  if (!engine.listInfoSet.has(info)) {\r\n    return;\r\n  }\r\n  const values = (value ?? []) as any[];\r\n  buildListIndexTreeSub(\r\n    engine, \r\n    engine.listInfoSet, \r\n    info, \r\n    listIndex, \r\n    values\r\n  );\r\n}\r\n","import { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\n\r\nfunction extractListIndexes(\r\n  info: IStructuredPathInfo,\r\n  listIndex: IListIndex | null,\r\n  engine: IComponentEngine,\r\n): IListIndex[] {\r\n  const wildcardParentInfos: IStructuredPathInfo[] = info.wildcardParentInfos ?? [];\r\n  const _extractListIndexes = (pos:number, currentListIndex: IListIndex | null, resultListIndexes: IListIndex[]) => {\r\n    const wildcardParentInfo = wildcardParentInfos[pos];\r\n    if (!wildcardParentInfo) {\r\n      if (currentListIndex) {\r\n        resultListIndexes.push(currentListIndex);\r\n      }\r\n      return;\r\n    }\r\n    const subListIndex = listIndex?.at(pos) ?? null;\r\n    if (subListIndex) {\r\n      _extractListIndexes(pos + 1, subListIndex, resultListIndexes);\r\n    } else {\r\n      const listIndexes = engine.getListIndexesSet(wildcardParentInfo, currentListIndex);\r\n      for(const loopListIndex of listIndexes ?? []) {\r\n        _extractListIndexes(pos + 1, loopListIndex, resultListIndexes);\r\n      }\r\n    }\r\n  }\r\n  const resultListIndexes: IListIndex[] = [];\r\n  _extractListIndexes(0, listIndex, resultListIndexes);\r\n  return resultListIndexes;\r\n}\r\n\r\nfunction _collectAffectedGetters(\r\n  refInfo        : IStructuredPathInfo,\r\n  refListIndex   : IListIndex | null,\r\n  engine         : IComponentEngine,\r\n  resultPathInfos: Set<IStructuredPathInfo>,\r\n  resultRefs     : {info:IStructuredPathInfo, listIndex:IListIndex | null}[],\r\n) {\r\n//  if (engine.listInfoSet.has(refInfo)) return;\r\n  if (resultPathInfos.has(refInfo)) return;\r\n  const dependentPathInfos = engine.dependentTree.get(refInfo);\r\n  for(const dependentPathInfo of dependentPathInfos ?? []) {\r\n    if (engine.listInfoSet.has(refInfo) && dependentPathInfo.parentInfo === refInfo && dependentPathInfo.lastSegment === \"*\") {\r\n      continue;\r\n    }\r\n    let dependentListIndex = null;\r\n    let updateList = false;\r\n    for(let i = dependentPathInfo.wildcardParentInfos.length - 1; i >= 0; i--) {\r\n      const wildcardParentInfo = dependentPathInfo.wildcardParentInfos[i];\r\n      if (resultPathInfos.has(wildcardParentInfo)) {\r\n        updateList = true;\r\n        break;\r\n      }\r\n      const pos = refInfo.wildcardParentInfos.indexOf(wildcardParentInfo);\r\n      if (pos < 0) continue;\r\n      dependentListIndex = refListIndex?.at(pos) ?? null;\r\n      if (dependentListIndex !== null) break;\r\n    }\r\n    if (updateList) {\r\n      continue;\r\n    }\r\n    if (dependentPathInfo.wildcardParentInfos.length > 0) {\r\n      const extractlistIndexes = extractListIndexes(dependentPathInfo, dependentListIndex, engine);\r\n      for(const listIndex of extractlistIndexes) {\r\n        resultRefs.push({info: dependentPathInfo, listIndex});\r\n        _collectAffectedGetters(dependentPathInfo, listIndex, engine, resultPathInfos, resultRefs);\r\n      }\r\n    } else {\r\n      resultRefs.push({info: dependentPathInfo, listIndex: null});\r\n      _collectAffectedGetters(dependentPathInfo, null, engine, resultPathInfos, resultRefs);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport function collectAffectedGetters(\r\n  updateRefs: {info:IStructuredPathInfo, listIndex:IListIndex | null}[],\r\n  engine: IComponentEngine,\r\n): {info:IStructuredPathInfo, listIndex:IListIndex | null}[] {\r\n  const resultPathInfos = new Set<IStructuredPathInfo>();\r\n  const resultRefs: {info:IStructuredPathInfo, listIndex:IListIndex | null}[] = [];\r\n  for(const ref of updateRefs) {\r\n    const info = ref.info;\r\n    const listIndex = ref.listIndex;\r\n    if (resultPathInfos.has(info)) continue;\r\n    _collectAffectedGetters(info, listIndex, engine, resultPathInfos, resultRefs);\r\n    resultPathInfos.add(info);\r\n  }\r\n  return resultRefs;\r\n\r\n}\r\n\r\n","import { IBinding } from \"../DataBinding/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { render } from \"../Render/render\";\r\nimport { buildListIndexTree } from \"../StateClass/buildListIndexTree\";\r\nimport { SetCacheableSymbol } from \"../StateClass/symbols\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { getStatePropertyRefId } from \"../StatePropertyRef/getStatePropertyRefId\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { getGlobalConfig } from \"../WebComponents/getGlobalConfig\";\r\nimport { IUpdater } from \"./types\";\r\nimport { collectAffectedGetters } from \"./collectAffectedGetters\";\r\n\r\ntype UpdatedArrayElementBinding = {\r\n  parentRef: {info: IStructuredPathInfo, listIndex: IListIndex | null};\r\n  binding: IBinding;\r\n  listIndexes: IListIndex[];\r\n  values: any[];\r\n};\r\n\r\nclass Updater implements IUpdater {\r\n  processList      : (() => Promise<void> | void)[] = [];\r\n  updatedProperties: Set<{info:IStructuredPathInfo, listIndex:IListIndex | null} | IListIndex> = \r\n    new Set<{info:IStructuredPathInfo, listIndex:IListIndex | null} | IListIndex>();\r\n  updatedValues    : {[key:number]: any} = {};\r\n  engine           : IComponentEngine;\r\n\r\n  constructor(engine: IComponentEngine) {\r\n    this.engine = engine;\r\n  }\r\n\r\n  addProcess(process: () => Promise<void> | void): void {\r\n    this.processList.push(process);\r\n    this.waitForQueueEntry.resolve();\r\n  }\r\n\r\n  addUpdatedStatePropertyRefValue(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    value    : any\r\n  ): void {\r\n    const refId = getStatePropertyRefId(info, listIndex);\r\n    this.updatedProperties.add({info, listIndex});\r\n    this.updatedValues[refId] = value;\r\n    this.waitForQueueEntry.resolve();\r\n  }\r\n\r\n  addUpdatedListIndex(listIndex: IListIndex): void {\r\n    this.updatedProperties.add(listIndex);\r\n    this.waitForQueueEntry.resolve();\r\n  }\r\n\r\n  terminate(): PromiseWithResolvers<void> {\r\n    const waitForMainLoopTerminate = Promise.withResolvers<void>();\r\n    this.waitForQueueEntry.resolve(waitForMainLoopTerminate);\r\n    return waitForMainLoopTerminate;\r\n  }\r\n\r\n  waitForQueueEntry: PromiseWithResolvers<PromiseWithResolvers<void> | void> = \r\n    Promise.withResolvers<PromiseWithResolvers<void> | void>();\r\n  async main(waitForComponentInit: PromiseWithResolvers<void>) {\r\n    await waitForComponentInit.promise;\r\n    const config = getGlobalConfig();\r\n    while (true) {\r\n      try {\r\n        const waitForMainLoopTerminate: (PromiseWithResolvers<void> | void) = \r\n          await this.waitForQueueEntry.promise;\r\n          config.debug && performance.mark(`start`);\r\n        Updater.updatingCount++;\r\n        try {\r\n          await this.exec();\r\n          if (config.debug) {\r\n            performance.mark(`end`);\r\n            performance.measure(`exec`, `start`, `end`);\r\n            console.log(performance.getEntriesByType(\"measure\"));    \r\n            performance.clearMeasures(`exec`);\r\n            performance.clearMarks(`start`);\r\n            performance.clearMarks(`end`);\r\n          }\r\n        } finally {\r\n          Updater.updatingCount--;\r\n          if (waitForMainLoopTerminate) {\r\n            waitForMainLoopTerminate.resolve();\r\n            break;\r\n          }\r\n        }\r\n      } catch(e) {\r\n        console.error(e);\r\n      } finally {\r\n        this.waitForQueueEntry = Promise.withResolvers<PromiseWithResolvers<void> | void>();\r\n      }\r\n    }\r\n  }\r\n\r\n  async updateState() {\r\n    while(this.processList.length > 0) {\r\n      const processList = this.processList;\r\n      this.processList = [];\r\n      for(let i = 0; i < processList.length; i++) {\r\n        const process = processList[i];\r\n        await process();\r\n      }\r\n    }\r\n  }\r\n\r\n  async rebuild(): Promise<{bindings: IBinding[], arrayElementBindings: UpdatedArrayElementBinding[]}> {\r\n    const retArrayElementBindings: UpdatedArrayElementBinding[] = [];\r\n    const retBindings: IBinding[] = [];\r\n    const engine = this.engine;\r\n    const processedListIndexes = new Set<IListIndex>();\r\n    const processedPropertyRefIdsSet = new Set<number>();\r\n    while(this.updatedProperties.size > 0) {\r\n      const updatedProiperties = Array.from(this.updatedProperties.values());\r\n\r\n      const updatedRefs = []; // 更新されたプロパティ参照のリスト\r\n      const arrayPropertyRefs = [];\r\n      const arrayElementPropertyRefs = [];\r\n      this.updatedProperties.clear();\r\n      for(let i = 0; i < updatedProiperties.length; i++) {\r\n        const item = updatedProiperties[i];\r\n        let bindings;\r\n        if (\"index\" in item) {\r\n          if (processedListIndexes.has(item)) continue;\r\n          const listIndex = item as IListIndex;\r\n          bindings = engine.bindingsByListIndex.get(listIndex);\r\n          processedListIndexes.add(listIndex);\r\n        } else {\r\n          const statePropertyRefId = getStatePropertyRefId(item.info, item.listIndex);\r\n          if (processedPropertyRefIdsSet.has(statePropertyRefId)) continue;\r\n          const statePropertyRef = item as {info:IStructuredPathInfo, listIndex:IListIndex | null};\r\n          if (engine.listInfoSet.has(statePropertyRef.info)) {\r\n            arrayPropertyRefs.push(statePropertyRef);\r\n          }\r\n          if (engine.elementInfoSet.has(statePropertyRef.info)) {\r\n            arrayElementPropertyRefs.push(statePropertyRef);\r\n          }\r\n          bindings = engine.getBindings(item.info, item.listIndex);\r\n          processedPropertyRefIdsSet.add(statePropertyRefId);\r\n          updatedRefs.push(statePropertyRef);\r\n        }\r\n        retBindings.push(...bindings ?? []);\r\n      }\r\n\r\n      // リストインデックスの構築\r\n      const builtStatePropertyRefIds = new Set<number>();\r\n      for(let i = 0; i < arrayPropertyRefs.length; i++) {\r\n        const arrayPropertyRef = arrayPropertyRefs[i];\r\n        const statePropertyRefId = getStatePropertyRefId(arrayPropertyRef.info, arrayPropertyRef.listIndex);\r\n        const value = this.updatedValues[statePropertyRefId] ?? null;\r\n        buildListIndexTree(engine, arrayPropertyRef.info, arrayPropertyRef.listIndex, value);\r\n        builtStatePropertyRefIds.add(statePropertyRefId);\r\n      }\r\n\r\n      const parentRefByRefId: {[parentRefId: number]: {info: IStructuredPathInfo, listIndex: IListIndex | null }} = {};\r\n      const statePropertyRefByStatePropertyRefId = Object.groupBy(arrayElementPropertyRefs, ref => {\r\n        if (ref.info.parentInfo === null) raiseError(`parentInfo is null`);\r\n        const parentInfo = ref.info.parentInfo;\r\n        const parentListIndex = (ref.info.wildcardCount === ref.info.parentInfo.wildcardCount) ?\r\n          ref.listIndex : (ref.listIndex?.parentListIndex ?? null);\r\n        const parentRefId = getStatePropertyRefId(parentInfo, parentListIndex);\r\n        if (!(parentRefId in parentRefByRefId)) {\r\n          parentRefByRefId[parentRefId] = {info: parentInfo, listIndex: parentListIndex};\r\n        }\r\n        return parentRefId;\r\n      });\r\n      for(const [parentRefIdKey, refs] of Object.entries(statePropertyRefByStatePropertyRefId)) {\r\n        const parentRefId = Number(parentRefIdKey);\r\n        if (builtStatePropertyRefIds.has(parentRefId)) continue;\r\n        if (typeof refs === \"undefined\") continue;\r\n        const parentRef = parentRefByRefId[parentRefId];\r\n        if (parentRef === null) continue;\r\n\r\n        const values = [];\r\n        const listIndexes = [];\r\n        for(let j = 0; j < refs.length; j++) {\r\n          const ref = refs[j];\r\n          const statePropertyRefId = getStatePropertyRefId(ref.info, ref.listIndex);\r\n          const value = this.updatedValues[statePropertyRefId] ?? null;\r\n          values.push(value);\r\n          const listIndex = ref.listIndex;\r\n          if (listIndex === null) {\r\n            throw new Error(\"listIndex is null\");\r\n          }\r\n          listIndexes.push(listIndex);\r\n        }\r\n        const bindings = engine.getBindings(parentRef.info, parentRef.listIndex);\r\n        for(const binding of bindings) {\r\n          const arrayElementBinding: UpdatedArrayElementBinding = {\r\n            parentRef,\r\n            binding,\r\n            listIndexes,\r\n            values\r\n          };\r\n          retArrayElementBindings.push(arrayElementBinding);\r\n        }\r\n      }\r\n      \r\n      const updatingRefs = collectAffectedGetters(updatedRefs, engine);\r\n      for(const updatingRef of updatingRefs) {\r\n        const bindings = engine.getBindings(updatingRef.info, updatingRef.listIndex);\r\n        retBindings.push(...bindings ?? []);\r\n      }\r\n      \r\n    }\r\n    this.updatedValues = {};\r\n    return {bindings: retBindings, arrayElementBindings: retArrayElementBindings};\r\n  }\r\n\r\n  async render(bindings: IBinding[]) {\r\n    await this.engine.stateProxy[SetCacheableSymbol](async () => {\r\n      return render(bindings);\r\n    });\r\n  }\r\n\r\n  async exec() {\r\n    while(this.processList.length !== 0 || this.updatedProperties.size !== 0) {\r\n      // update state\r\n      await this.updateState();\r\n      // rebuild\r\n      const { bindings, arrayElementBindings } = await this.rebuild();\r\n      // render\r\n      for(const arrayElementBinding of arrayElementBindings) {\r\n        arrayElementBinding.binding.bindingNode.updateElements(arrayElementBinding.listIndexes, arrayElementBinding.values);\r\n      }\r\n      if (bindings.length > 0) {\r\n        await this.render(bindings);\r\n      }\r\n    }\r\n  }\r\n\r\n  static updatingCount = 0;\r\n}\r\n\r\nexport function createUpdater(engine: IComponentEngine): IUpdater {\r\n  return new Updater(engine);\r\n}\r\n\r\nexport function getUpdatingCount(): number {\r\n  return Updater.updatingCount;\r\n}","export function canHaveShadowRoot(tagName: string): boolean {\r\n  try {\r\n    // 一時的に要素を作成\r\n    const element = document.createElement(tagName);\r\n    // `attachShadow` メソッドが存在し、実行可能かを確認\r\n    return typeof element.attachShadow === \"function\";\r\n  } catch {\r\n    // 無効なタグ名などが渡された場合は false を返す\r\n    return false;\r\n  }\r\n}","import { raiseError } from \"../utils\";\r\nimport { IComponentConfig } from \"../WebComponents/types\";\r\nimport { canHaveShadowRoot } from \"./canHaveShadowRoot\";\r\n\r\nfunction getParentShadowRoot(parentNode: Node | null): ShadowRoot|undefined{\r\n  let node: Node | null = parentNode;\r\n  while(node) {\r\n    if (node instanceof ShadowRoot) {\r\n      return node;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n}\r\n\r\nexport function attachShadow(element: HTMLElement, config: IComponentConfig, styleSheet: CSSStyleSheet): void {\r\n    if (config.enableShadowDom) {\r\n      if (config.extends === null || canHaveShadowRoot(config.extends)) {\r\n        const shadowRoot = element.attachShadow({ mode: 'open' });\r\n        shadowRoot.adoptedStyleSheets = [styleSheet];\r\n      } else {\r\n        raiseError(`ComponentEngine: Shadow DOM not supported for builtin components that extend ${config.extends}`);\r\n      }\r\n    } else {\r\n      const shadowRootOrDocument = getParentShadowRoot(element.parentNode) || document;\r\n      const styleSheets = shadowRootOrDocument.adoptedStyleSheets;\r\n      if (!styleSheets.includes(styleSheet)) {\r\n        shadowRootOrDocument.adoptedStyleSheets = [...styleSheets, styleSheet];\r\n      }\r\n    }\r\n\r\n}","import { createBindContent } from \"../DataBinding/BindContent\";\r\nimport { IBindContent, IBinding } from \"../DataBinding/types\";\r\nimport { FilterWithOptions } from \"../Filter/types\";\r\nimport { IState, IStateProxy, IStructiveState } from \"../StateClass/types\";\r\nimport { createStateProxy } from \"../StateClass/createStateProxy\";\r\nimport { IUpdater } from \"../Updater/types\";\r\nimport { createUpdater } from \"../Updater/updater\";\r\nimport { ComponentType, IComponentConfig, IComponentStatic, StructiveComponent } from \"../WebComponents/types\";\r\nimport { attachShadow } from \"./attachShadow\";\r\nimport { ISaveInfoByResolvedPathInfo, IComponentEngine } from \"./types\";\r\nimport { IStructuredPathInfo } from \"../StateProperty/types\";\r\nimport { buildListIndexTree } from \"../StateClass/buildListIndexTree\";\r\nimport { ConnectedCallbackSymbol, DisconnectedCallbackSymbol, GetByRefSymbol, SetCacheableSymbol } from \"../StateClass/symbols\";\r\nimport { ILoopContext } from \"../LoopContext/types\";\r\nimport { IListIndex } from \"../ListIndex/types\";\r\nimport { raiseError } from \"../utils\";\r\nimport { getStructuredPathInfo } from \"../StateProperty/getStructuredPathInfo\";\r\n\r\nexport class ComponentEngine implements IComponentEngine {\r\n  type          : ComponentType = 'autonomous';\r\n  config        : IComponentConfig;\r\n  template      : HTMLTemplateElement;\r\n  styleSheet    : CSSStyleSheet;\r\n  stateClass    : IStructiveState;\r\n  state         : IState;\r\n  stateProxy    : IStateProxy;\r\n  updater       : IUpdater;\r\n  inputFilters  : FilterWithOptions;\r\n  outputFilters : FilterWithOptions;\r\n  bindContent   : IBindContent;\r\n  baseClass     : typeof HTMLElement = HTMLElement;\r\n  owner         : StructiveComponent;\r\n  trackedGetters: Set<string>;\r\n\r\n  listInfoSet       : Set<IStructuredPathInfo> = new Set();\r\n  elementInfoSet: Set<IStructuredPathInfo> = new Set();\r\n  bindingsByListIndex                  : WeakMap<IListIndex, Set<IBinding>> = new WeakMap();\r\n  dependentTree                        : Map<IStructuredPathInfo, Set<IStructuredPathInfo>> = new Map();\r\n\r\n  #waitForInitialize : PromiseWithResolvers<void> = Promise.withResolvers<void>();\r\n  #loopContext       : ILoopContext | null = null;\r\n  #stackStructuredPathInfo  : IStructuredPathInfo[] = [];\r\n  #stackListIndex    : IListIndex[] = [];\r\n\r\n  constructor(config: IComponentConfig, owner: StructiveComponent) {\r\n    this.config = config;\r\n    if (this.config.extends) {\r\n      this.type = 'builtin';\r\n    }\r\n    const componentClass = owner.constructor as IComponentStatic;\r\n    this.template = componentClass.template;\r\n    this.styleSheet = componentClass.styleSheet;\r\n    this.stateClass = componentClass.stateClass;\r\n    this.state = new this.stateClass();\r\n    this.stateProxy = createStateProxy(this, this.state);\r\n    this.updater = createUpdater(this);\r\n    this.inputFilters = componentClass.inputFilters;\r\n    this.outputFilters = componentClass.outputFilters;\r\n    this.owner = owner;\r\n    this.trackedGetters = componentClass.trackedGetters;\r\n    // 依存関係の木を作成する\r\n    const checkDependentProp = (info: IStructuredPathInfo) => {\r\n      const parentInfo = info.parentInfo;\r\n      if (parentInfo === null) return;\r\n      this.addDependentProp(info, parentInfo);\r\n      checkDependentProp(parentInfo);\r\n    }\r\n    for(const path of componentClass.paths) {\r\n      const info = getStructuredPathInfo(path);\r\n      checkDependentProp(info);\r\n    }\r\n    // 配列のプロパティ、配列要素のプロパティを登録する\r\n    for(const listPath of componentClass.listPaths) {\r\n      this.listInfoSet.add(getStructuredPathInfo(listPath));\r\n      this.elementInfoSet.add(getStructuredPathInfo(listPath + \".*\"));\r\n    }\r\n    this.bindContent = createBindContent(null, componentClass.id, this, null, null); // this.stateArrayPropertyNamePatternsが変更になる可能性がある\r\n    for(const info of this.listInfoSet) {\r\n      if (info.wildcardCount > 0) continue;\r\n      const value = this.stateProxy[GetByRefSymbol](info, null)\r\n      buildListIndexTree(this, info, null, value);\r\n    }\r\n  \r\n    this.updater.main(this.#waitForInitialize);\r\n  }\r\n\r\n  async connectedCallback(): Promise<void> {\r\n    attachShadow(this.owner, this.config, this.styleSheet);\r\n    await this.stateProxy[ConnectedCallbackSymbol]();\r\n    await this.stateProxy[SetCacheableSymbol](async () => {\r\n      this.bindContent.render();\r\n    });\r\n    this.bindContent.mount(this.owner.shadowRoot ?? this.owner);\r\n    this.#waitForInitialize.resolve();\r\n  }\r\n\r\n  async disconnectedCallback(): Promise<void> {\r\n    await this.stateProxy[DisconnectedCallbackSymbol]();\r\n  }\r\n\r\n  async setLoopContext(loopContext: ILoopContext, callback: ()=>Promise<void>): Promise<void> {\r\n    try {\r\n      if (this.#loopContext !== null) {\r\n        throw new Error(\"loopContext is already set\");\r\n      }\r\n      this.#loopContext = loopContext;\r\n      await this.asyncSetStatePropertyRef(loopContext.info, loopContext.listIndex, async () => {\r\n        await callback();\r\n      });\r\n    } finally {\r\n      this.#loopContext = null;\r\n    }\r\n  }\r\n\r\n  async asyncSetStatePropertyRef(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex, \r\n    callback : ()=>Promise<any>\r\n  ): Promise<any> {\r\n    this.#stackStructuredPathInfo.push(info);\r\n    this.#stackListIndex.push(listIndex);\r\n    try {\r\n      return await callback();\r\n    } finally {\r\n      this.#stackStructuredPathInfo.pop();\r\n      this.#stackListIndex.pop();\r\n    }\r\n  }\r\n\r\n  setStatePropertyRef(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex, \r\n    callback : ()=>any\r\n  ): any {\r\n    this.#stackStructuredPathInfo.push(info);\r\n    this.#stackListIndex.push(listIndex);\r\n    try {\r\n      return callback();\r\n    } finally {\r\n      this.#stackStructuredPathInfo.pop();\r\n      this.#stackListIndex.pop();\r\n    }\r\n  }\r\n\r\n  getLastStatePropertyRef(): {info:IStructuredPathInfo, listIndex:IListIndex} | null {\r\n    if (this.#stackStructuredPathInfo.length === 0) {\r\n      return null;\r\n    }\r\n    const info = this.#stackStructuredPathInfo[this.#stackStructuredPathInfo.length - 1];\r\n    if (typeof info === \"undefined\") {\r\n      return null;\r\n    }\r\n    const listIndex = this.#stackListIndex[this.#stackListIndex.length - 1];\r\n    if (typeof listIndex === \"undefined\") {\r\n      return null;\r\n    }\r\n    return {info, listIndex};\r\n  }\r\n\r\n  getContextListIndex(structuredPath: string): IListIndex | null{\r\n    const lastRef = this.getLastStatePropertyRef();\r\n    if (lastRef === null) {\r\n      return null;\r\n    }\r\n    const info = lastRef.info;\r\n    const index = info.wildcardPaths.indexOf(structuredPath);\r\n    if (index >= 0) {\r\n      return lastRef.listIndex.at(index) ?? null;\r\n    }\r\n    return null;\r\n  }\r\n  getLoopContexts():ILoopContext[] {\r\n    if (this.#loopContext === null) {\r\n      throw new Error(\"loopContext is null\");\r\n    }\r\n    return this.#loopContext.serialize();\r\n  }\r\n\r\n  #saveInfoByListIndexByResolvedPathInfoId: { [id:number]: WeakMap<IListIndex,ISaveInfoByResolvedPathInfo> } = {};\r\n  #saveInfoByStructuredPathId: { [id:number]: ISaveInfoByResolvedPathInfo } = {};\r\n\r\n  createSaveInfo():ISaveInfoByResolvedPathInfo {\r\n    return {\r\n      list          : null,\r\n      listIndexesSet: null,\r\n      bindings      : [],\r\n    }\r\n  }\r\n\r\n  getSaveInfoByStatePropertyRef(info:IStructuredPathInfo, listIndex:IListIndex | null): ISaveInfoByResolvedPathInfo {\r\n    if (listIndex === null) {\r\n      let saveInfo = this.#saveInfoByStructuredPathId[info.id];\r\n      if (typeof saveInfo === \"undefined\") {\r\n        saveInfo = this.createSaveInfo();\r\n        this.#saveInfoByStructuredPathId[info.id] = saveInfo;\r\n      }\r\n      return saveInfo;\r\n    } else {\r\n      let saveInfoByListIndex = this.#saveInfoByListIndexByResolvedPathInfoId[info.id];\r\n      if (typeof saveInfoByListIndex === \"undefined\") {\r\n        saveInfoByListIndex = new WeakMap<IListIndex, ISaveInfoByResolvedPathInfo>();\r\n        this.#saveInfoByListIndexByResolvedPathInfoId[info.id] = saveInfoByListIndex;\r\n      }\r\n      let saveInfo = saveInfoByListIndex.get(listIndex);\r\n      if (typeof saveInfo === \"undefined\") {\r\n        saveInfo = this.createSaveInfo();\r\n        saveInfoByListIndex.set(listIndex, saveInfo);\r\n      }\r\n      return saveInfo;\r\n    }\r\n  }\r\n  saveBinding(\r\n    info     : IStructuredPathInfo, \r\n    listIndex: IListIndex | null, \r\n    binding  : IBinding\r\n  ): void {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    saveInfo.bindings.push(binding);\r\n  }\r\n  saveListIndexesSet(\r\n    info              :IStructuredPathInfo, \r\n    listIndex         :IListIndex | null, \r\n    saveListIndexesSet:Set<IListIndex>\r\n  ): void {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    saveInfo.listIndexesSet = saveListIndexesSet;\r\n  }\r\n  saveList(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null, \r\n    list     :any[]\r\n  ): void {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    saveInfo.list = list;\r\n  }\r\n  getBindings(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null\r\n  ): IBinding[] {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    return saveInfo.bindings;\r\n  }\r\n  getListIndexesSet(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null\r\n  ): Set<IListIndex> | null {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    return saveInfo.listIndexesSet;\r\n  }\r\n  getList(\r\n    info     :IStructuredPathInfo, \r\n    listIndex:IListIndex | null\r\n  ): any[] | null {\r\n    const saveInfo = this.getSaveInfoByStatePropertyRef(info, listIndex);\r\n    return saveInfo.list;\r\n  }\r\n\r\n  addDependentProp(info: IStructuredPathInfo, refInfo: IStructuredPathInfo) {\r\n    let dependents = this.dependentTree.get(refInfo);\r\n    if (typeof dependents === \"undefined\") {\r\n      dependents = new Set<IStructuredPathInfo>();\r\n      this.dependentTree.set(refInfo, dependents);\r\n    }\r\n    dependents.add(info);\r\n  }\r\n}\r\n\r\nexport function createComponentEngine(config: IComponentConfig, component: StructiveComponent): IComponentEngine {\r\n  return new ComponentEngine(config, component);\r\n}","import { COMMENT_EMBED_MARK } from \"../constants\";\r\nimport { raiseError } from \"../utils\";\r\n\r\nconst MUSTACHE_REGEXP = /\\{\\{([^\\}]+)\\}\\}/g;\r\nconst MUSTACHE_TYPES:Set<string> = new Set(['if', 'for', 'endif', 'endfor', 'elseif', 'else']);\r\n\r\ntype MustacheType = 'if' | 'for' | 'endif' | 'endfor' | 'elseif' | 'else';\r\ntype MustacheInfo = {\r\n  type: MustacheType;\r\n  remain: string; // after first ':'\r\n  expr: string;\r\n}\r\n\r\nexport function replaceMustacheWithTemplateTag(html: string): string {\r\n  const stack:MustacheInfo[] = [];\r\n  return html.replaceAll(MUSTACHE_REGEXP, (match, expr) => {\r\n    expr = expr.trim();\r\n    const [ type ] = expr.split(':');\r\n    if (!MUSTACHE_TYPES.has(type)) {\r\n      // embed\r\n      return `<!--${COMMENT_EMBED_MARK}${expr}-->`;\r\n    }\r\n    const remain = expr.slice(type.length + 1).trim();\r\n    const currentInfo:MustacheInfo = { type, expr, remain };\r\n    if (type === 'if' || type === 'for') {\r\n      stack.push(currentInfo);\r\n      return `<template data-bind=\"${expr}\">`;\r\n    } else if (type === 'endif') {\r\n      const endTags = [];\r\n      do {\r\n        const info = stack.pop() ?? raiseError('replaceMustacheToTemplateOrEmbed: endif without if');\r\n        if (info.type === 'if') {\r\n          endTags.push('</template>');\r\n          break;\r\n        } else if (info.type === 'elseif') {\r\n          endTags.push('</template>');\r\n        } else {\r\n          raiseError('replaceMustacheToTemplateOrEmbed: endif without if');\r\n        }\r\n      } while(true);\r\n      return endTags.join('');\r\n    } else if (type === 'endfor') {\r\n      const info = stack.pop() ?? raiseError('replaceMustacheToTemplateOrEmbed: endif without if');\r\n      if (info.type === 'for') {\r\n        return '</template>';\r\n      } else {\r\n        raiseError('replaceMustacheToTemplateOrEmbed: endfor without for');\r\n      }\r\n    } else if (type === 'elseif') {\r\n      const lastInfo = stack.at(-1) ?? raiseError('replaceMustacheToTemplateOrEmbed: elseif without if');\r\n      if (lastInfo.type === 'if' || lastInfo.type === 'elseif') {\r\n        stack.push(currentInfo);\r\n        return `</template><template data-bind=\"if:${lastInfo.remain}|not\"><template data-bind=\"if:${remain}\">`;\r\n      } else {\r\n        raiseError('replaceMustacheToTemplateOrEmbed: elseif without if');\r\n      }\r\n    } else if (type === 'else') {\r\n      const lastInfo = stack.at(-1) ?? raiseError('replaceMustacheToTemplateOrEmbed: else without if');\r\n      if (lastInfo.type === 'if') {\r\n        return `</template><template data-bind=\"if:${lastInfo.remain}|not\">`;\r\n      } else {\r\n        raiseError('replaceMustacheToTemplateOrEmbed: else without if');\r\n      }\r\n    } else {\r\n      raiseError('replaceMustacheToTemplateOrEmbed: unknown type');\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n","import { COMMENT_TEMPLATE_MARK, DATA_BIND_ATTRIBUTE } from \"../constants\";\r\nimport { generateId } from \"../GlobalId/generateId\";\r\nimport { registerTemplate } from \"./registerTemplate\";\r\n\r\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\r\n\r\nexport function replaceTemplateTagWithComment(\r\n  id      : number, \r\n  template: HTMLTemplateElement,\r\n  rootId  : number = id\r\n):number {\r\n  // テンプレートの親ノードが存在する場合は、テンプレートをコメントノードに置き換える\r\n  template.parentNode?.replaceChild(document.createComment(`${COMMENT_TEMPLATE_MARK}${id}`), template);\r\n  if (template.namespaceURI === SVG_NS) {\r\n    // SVGタグ内のtemplateタグを想定\r\n    const newTemplate = document.createElement(\"template\");\r\n    for(let childNode of Array.from(template.childNodes)) {\r\n      newTemplate.content.appendChild(childNode);\r\n    }\r\n    const bindText = template.getAttribute(DATA_BIND_ATTRIBUTE);\r\n    newTemplate.setAttribute(DATA_BIND_ATTRIBUTE, bindText ?? \"\");\r\n    template = newTemplate;\r\n  }\r\n  template.content.querySelectorAll(\"template\").forEach(template => {\r\n    replaceTemplateTagWithComment(generateId(), template, rootId);\r\n  });\r\n  registerTemplate(id, template, rootId);\r\n  return id;\r\n}\r\n","import { replaceMustacheWithTemplateTag } from \"./replaceMustacheWithTemplateTag\";\r\nimport { replaceTemplateTagWithComment } from \"./replaceTemplateTagWithComment\";\r\n\r\nexport function registerHtml(id: number, html:string) {\r\n  const template = document.createElement(\"template\");\r\n  template.dataset.id = id.toString();\r\n  template.innerHTML = replaceMustacheWithTemplateTag(html);\r\n  replaceTemplateTagWithComment(id, template);\r\n}","import { Constructor } from \"./types\";\r\n\r\nexport function getBaseClass(extendTagName: string | null):Constructor<HTMLElement> {\r\n  return extendTagName ? (document.createElement(extendTagName).constructor as Constructor<HTMLElement>) : HTMLElement;\r\n}","import { getGlobalConfig } from \"./getGlobalConfig\";\r\nimport { IUserConfig, IComponentConfig } from \"./types\";\r\n\r\nexport function getComponentConfig(userConfig: IUserConfig): IComponentConfig {\r\n  const globalConfig = getGlobalConfig();\r\n  return {\r\n    enableShadowDom: userConfig.enableShadowDom ?? globalConfig.enableShadowDom,\r\n    extends        : userConfig.extends ?? null,\r\n  };\r\n}","import { inputBuiltinFilters, outputBuiltinFilters } from \"../Filter/builtinFilters\";\r\nimport { FilterWithOptions } from \"../Filter/types\";\r\nimport { generateId } from \"../GlobalId/generateId\";\r\nimport { getStateClassById, registerStateClass } from \"../StateClass/registerStateClass\";\r\nimport { getStyleSheetById } from \"../StyleSheet/registerStyleSheet\";\r\nimport { registerCss } from \"../StyleSheet/regsiterCss\";\r\nimport { createComponentEngine } from \"../ComponentEngine/ComponentEngine\";\r\nimport { IComponentEngine } from \"../ComponentEngine/types\";\r\nimport { registerHtml } from \"../Template/registerHtml\";\r\nimport { getTemplateById } from \"../Template/registerTemplate\";\r\nimport { getBaseClass } from \"./getBaseClass\";\r\nimport { getComponentConfig } from \"./getComponentConfig\";\r\nimport { IComponent, IUserComponentData, IUserConfig, StructiveComponentClass, StructiveComponent } from \"./types\";\r\nimport { getListPathsSetById, getPathsSetById } from \"../BindingBuilder/registerDataBindAttributes\";\r\nimport { IStructiveState, IStructiveStaticState } from \"../StateClass/types\";\r\n\r\nfunction findStructiveParent(el:StructiveComponent): IComponent | null {\r\n  let current = el.parentNode;\r\n  while (current) {\r\n    if ((current as StructiveComponent).state && (current as StructiveComponent).isStructive) {\r\n      return current as StructiveComponent;\r\n    }\r\n    current = current.parentNode;\r\n    if (current instanceof ShadowRoot) {\r\n      if (current.host && (current.host as StructiveComponent).state && (current.host as StructiveComponent).isStructive) {\r\n        return current.host as StructiveComponent;\r\n      }\r\n      current = current.host;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function createComponentClass(componentData: IUserComponentData): StructiveComponentClass {\r\n  const config = (componentData.stateClass.$config ?? {})as IUserConfig;\r\n  const componentConfig = getComponentConfig(config);\r\n  const id = generateId();\r\n  const { html, css, stateClass } = componentData;\r\n  const inputFilters:FilterWithOptions = Object.assign({}, inputBuiltinFilters);\r\n  const outputFilters:FilterWithOptions = Object.assign({}, outputBuiltinFilters);\r\n  stateClass.$isStructive = true;\r\n  registerHtml(id, html);\r\n  registerCss(id, css);\r\n  registerStateClass(id, stateClass);\r\n  const baseClass = getBaseClass(componentConfig.extends);\r\n  const extendTagName = componentConfig.extends;\r\n  return class extends baseClass implements IComponent {\r\n    #engine: IComponentEngine;\r\n\r\n    constructor() {\r\n      super();\r\n      this.#engine = createComponentEngine(componentConfig, this as StructiveComponent);\r\n    }\r\n\r\n    connectedCallback() {\r\n      this.#engine.connectedCallback();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n      this.#engine.disconnectedCallback();\r\n    }\r\n\r\n    #parentStructiveComponent: IComponent | null | undefined;\r\n    get parentStructiveComponent(): IComponent | null {\r\n      if (typeof this.#parentStructiveComponent === \"undefined\") {\r\n        this.#parentStructiveComponent = findStructiveParent(this as StructiveComponent);\r\n      }\r\n      return this.#parentStructiveComponent;\r\n    }\r\n\r\n    get state(): IStructiveState {\r\n      return this.#engine.state as IStructiveState;\r\n    }\r\n\r\n    get isStructive(): boolean {\r\n      return (this.state.constructor as IStructiveStaticState).$isStructive ?? false;\r\n    }\r\n\r\n    static define(tagName:string) {\r\n      if (extendTagName) {\r\n        customElements.define(tagName, this, { extends: extendTagName });\r\n      } else {\r\n        customElements.define(tagName, this);\r\n      }\r\n    }\r\n\r\n    static get id():number {\r\n      return id;\r\n    }\r\n    static #html:string = html;\r\n    static get html():string {\r\n      return this.#html;\r\n    }\r\n    static set html(value:string) {\r\n      this.#html = value;\r\n      registerHtml(this.id, value);\r\n      this.#template = null;\r\n    }\r\n\r\n    static #css:string = css;\r\n    static get css() {\r\n      return this.#css;\r\n    }\r\n    static set css(value:string) {\r\n      this.#css = value;\r\n      registerCss(this.id, value);\r\n      this.#styleSheet = null;\r\n    }\r\n    static #template: HTMLTemplateElement | null = null;\r\n    static get template():HTMLTemplateElement {\r\n      if (!this.#template) {\r\n        this.#template = getTemplateById(this.id);\r\n      }\r\n      return this.#template;\r\n    }\r\n    static #styleSheet: CSSStyleSheet | null = null;\r\n    static get styleSheet():CSSStyleSheet {\r\n      if (!this.#styleSheet) {\r\n        this.#styleSheet = getStyleSheetById(this.id);\r\n      }\r\n      return this.#styleSheet;\r\n    }\r\n    static #stateClass: IStructiveState | null = null;\r\n    static get stateClass():IStructiveState {\r\n      if (!this.#stateClass) {\r\n        this.#stateClass = getStateClassById(this.id) as IStructiveState;\r\n      }\r\n      return this.#stateClass;\r\n    }\r\n    static #inputFilters:FilterWithOptions = inputFilters;\r\n    static get inputFilters():FilterWithOptions {\r\n      return this.#inputFilters;\r\n    }\r\n    static #outputFilters:FilterWithOptions = outputFilters;\r\n    static get outputFilters():FilterWithOptions {\r\n      return this.#outputFilters;\r\n    }\r\n    static get listPaths(): Set<string> {\r\n      return getListPathsSetById(this.id);\r\n    }\r\n    static get paths(): Set<string> {\r\n      return getPathsSetById(this.id);\r\n    }\r\n    static #trackedGetters: Set<string> | null = null;\r\n    static get trackedGetters(): Set<string> {\r\n      if(this.#trackedGetters === null) {\r\n        this.#trackedGetters = new Set<string>();\r\n        let currentProto = this.stateClass.prototype;\r\n        while (currentProto && currentProto !== Object.prototype) {\r\n          const trackedGetters = Object.getOwnPropertyDescriptors(currentProto);\r\n          if (trackedGetters) {\r\n            for (const [key, desc] of Object.entries(trackedGetters)) {\r\n              if ((desc as PropertyDescriptor).get) {\r\n                this.#trackedGetters.add(key);\r\n              }\r\n            }\r\n          }\r\n          currentProto = Object.getPrototypeOf(currentProto);\r\n        }\r\n      }\r\n      return this.#trackedGetters;\r\n\r\n    }\r\n  } as StructiveComponentClass;\r\n}\r\n","import { IStructiveState } from \"../StateClass/types\";\r\nimport { IUserComponentData } from \"./types\";\r\n\r\nfunction escapeEmbed(html: string): string {\r\n  return html.replaceAll(/\\{\\{([^\\}]+)\\}\\}/g, (match, expr) => {\r\n    return `<!--{{${expr}}}-->`;\r\n  });\r\n}\r\n\r\nfunction unescapeEmbed(html:string):string {\r\n  return html.replaceAll(/<!--\\{\\{([^\\}]+)\\}\\}-->/g, (match, expr) => {\r\n    return `{{${expr}}}`;\r\n  });\r\n}\r\n\r\nexport async function createSingleFileComponent(text: string): Promise<IUserComponentData> {\r\n  const template = document.createElement(\"template\");\r\n  template.innerHTML = escapeEmbed(text);\r\n\r\n  const html = template.content.querySelector(\"template\");\r\n  html?.remove();\r\n\r\n  const script = template.content.querySelector(\"script\");\r\n  const scriptModule = script ? await import(\"data:text/javascript;charset=utf-8,\" + script.text) : {};\r\n  script?.remove();\r\n\r\n  const style = template.content.querySelector(\"style\");\r\n  style?.remove();\r\n\r\n  const stateClass = (scriptModule.default ?? class {}) as IStructiveState;\r\n  \r\n  return {\r\n    text,\r\n    html      : unescapeEmbed(html?.innerHTML ?? \"\").trim(),\r\n    css       : style?.textContent ?? \"\",\r\n    stateClass,\r\n  }\r\n}","import { createSingleFileComponent } from \"./createSingleFileComponent\";\r\nimport { IUserComponentData } from \"./types\";\r\n\r\nexport async function loadSingleFileComponent(path: string): Promise<IUserComponentData> {\r\n  const response = await fetch(import.meta.resolve(path));\r\n  const text = await response.text();\r\n  return createSingleFileComponent(text);\r\n}\r\n","import { StructiveComponentClass } from \"./types\";\r\n\r\nexport function registerComponentClass(tagName: string, componentClass: StructiveComponentClass) {\r\n  componentClass.define(tagName);\r\n}","import { entryRoute } from \"../Router/Router\";\r\nimport { createComponentClass } from \"./createComponentClass\";\r\nimport { config } from \"./getGlobalConfig\";\r\nimport { loadSingleFileComponent } from \"./loadSingleFileComponent\";\r\nimport { registerComponentClass } from \"./registerComponentClass\";\r\nimport { SingleFileComponents } from \"./types\";\r\n\r\nexport async function registerSingleFileComponents(singleFileComponents:SingleFileComponents):Promise<void> {\r\n  const promises = Promise.all(Object.entries(singleFileComponents).map(async ([tagName, path]) => {\r\n    if (config.enableRouter) {\r\n      entryRoute(tagName, path); // routing\r\n    }\r\n    const componentData = await loadSingleFileComponent(path);\r\n    const componentClass = createComponentClass(componentData);\r\n    registerComponentClass(tagName, componentClass);\r\n  }));\r\n  await promises;\r\n}","import { raiseError } from \"../utils\";\r\nimport { config } from \"../WebComponents/getGlobalConfig\";\r\n\r\nconst SLOT_KEY = \"router\";\r\nconst DEFAULT_LAYOUT = `<slot name=\"${SLOT_KEY}\"></slot>`;\r\n\r\nexport class MainWrapper extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    if (config.enableShadowDom) {\r\n      this.attachShadow({ mode: 'open' });\r\n    }\r\n  }\r\n\r\n  async connetctedCallback() {\r\n    await this.loadLayout();\r\n    this.render();\r\n  }\r\n\r\n  get root(): ShadowRoot | HTMLElement {\r\n    return this.shadowRoot ?? this;\r\n  }\r\n\r\n  async loadLayout() {\r\n    if (config.layoutPath) {\r\n      const response = await fetch(config.layoutPath);\r\n      if (response.ok) {\r\n        const layoutText = await response.text();\r\n        const workTemplate = document.createElement(\"template\");\r\n        workTemplate.innerHTML = layoutText;\r\n      \r\n        const template = workTemplate.content.querySelector(\"template\");\r\n        const style = workTemplate.content.querySelector(\"style\") as CSSStyleSheet | null;\r\n      \r\n        this.root.appendChild(template?.content ?? document.createDocumentFragment());\r\n        if (style) {\r\n          const shadowRootOrDocument = this.shadowRoot ?? document;\r\n          const styleSheets = shadowRootOrDocument.adoptedStyleSheets;\r\n          if (!styleSheets.includes(style)) {\r\n            shadowRootOrDocument.adoptedStyleSheets = [...styleSheets, style];\r\n          }\r\n        }\r\n      } else {\r\n        raiseError(`Failed to load layout from ${config.layoutPath}`);\r\n      }\r\n    } else {\r\n      this.root.innerHTML = DEFAULT_LAYOUT;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // add router\r\n    if (config.enableRouter) {\r\n      const router = document.createElement(config.routerTagName);\r\n      router.setAttribute('slot', SLOT_KEY);\r\n      this.root.appendChild(router);\r\n    }\r\n  }\r\n}\r\n","import { MainWrapper } from \"./MainWrapper/MainWrapper\";\r\nimport { Router } from \"./Router/Router\";\r\nimport { config } from \"./WebComponents/getGlobalConfig\";\r\n\r\nexport function bootstrap(): void {\r\n  if (config.enableRouter) {\r\n    customElements.define(config.routerTagName, Router);\r\n  }\r\n\r\n  if (config.enableMainWrapper) {\r\n    customElements.define(config.mainTagName, MainWrapper);\r\n    if (config.autoInsertMainWrapper) {\r\n      const mainWrapper = document.createElement(config.mainTagName);\r\n      document.body.appendChild(mainWrapper);\r\n    }\r\n  }\r\n}","import { registerSingleFileComponents } from \"./WebComponents/registerSingleFIleComponents\";\r\nimport { bootstrap } from \"./bootstrap\";\r\nimport { config as _config } from \"./WebComponents/getGlobalConfig\";\r\nimport { IConfig } from \"./WebComponents/types\";\r\n\r\nexport const config: IConfig = _config;\r\n\r\nlet initialized = false;\r\nexport async function defineComponents(singleFileComponents: Record<string, string>):Promise<void> {\r\n  await registerSingleFileComponents(singleFileComponents);\r\n  if (config.autoInit) {\r\n    bootstrapStructive();\r\n  }\r\n}\r\n\r\nexport function bootstrapStructive() {\r\n  if (!initialized) {\r\n    bootstrap();\r\n    initialized = true;\r\n  }\r\n}\r\n\r\n"],"names":["config","trim","cache","COMMENT_TEMPLATE_MARK_LEN","_cache","getByRef","methodGetByRef","setByRef","methodSetByRef","setCacheable","methodSetChargeable","resolve","_resolve","apiGetByRef","apiSetByRef","apiSetCacheable","trapGet","trapSet","_config"],"mappings":"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"}